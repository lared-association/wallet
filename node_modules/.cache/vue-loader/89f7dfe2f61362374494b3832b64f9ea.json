{"remainingRequest":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/SpinnerLoading/SpinnerLoading.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/hero/lared-wallet/src/components/SpinnerLoading/SpinnerLoading.vue","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/less-loader/dist/cjs.js","mtime":1606233037860},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi8uLi92aWV3cy9yZXNvdXJjZXMvY3NzL3ZhcmlhYmxlcy5sZXNzJzsKCi5kZW1vLXNwaW4taWNvbi1sb2FkIHsKICAgIGFuaW1hdGlvbjogYW5pLWRlbW8tc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7Cn0KCi5pdnUtc3Bpbi1kb3QgewogICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIG1hcmdpbjogMCBhdXRvIDMwcHg7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgIGJhY2tncm91bmQtY29sb3I6IEBwdXJwbGVEYXJrOwogICAgd2lkdGg6IDUwcHg7CiAgICBoZWlnaHQ6IDUwcHg7CiAgICBhbmltYXRpb246IGFuaS1zcGluLWJvdW5jZSAxcyAwcyBlYXNlLWluLW91dCBpbmZpbml0ZTsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLmNsb3NlLWljb24gewogICAgbWFyZ2luLXJpZ2h0OiA0cHg7CiAgICBmb250LXNpemU6IEBiaWdnZXJGb250OwogICAgY29sb3I6IEBibGFjazsKfQoKLmxvYWRpbmctb3ZlcmxheS1tZXNzYWdlIHsKICAgIGZvbnQtc2l6ZTogQGJpZ2dlckZvbnQ7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgY29sb3I6IEBwdXJwbGVEYXJrOwp9CgouY2xvc2UtdGV4dCB7CiAgICBmb250LXNpemU6IEBiaWdnZXJGb250OwogICAgY29sb3I6IEBibGFjazsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQo="},{"version":3,"sources":["SpinnerLoading.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SpinnerLoading.vue","sourceRoot":"src/components/SpinnerLoading","sourcesContent":["<template>\n    <div />\n</template>\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            message: 'app/loadingOverlayMessage',\n            disableCloseButton: 'app/loadingDisableCloseButton',\n        }),\n    },\n})\nexport default class SpinnerLoading extends Vue {\n    /**\n     * Message displayed when UI is disabled\n     * @var {string}\n     */\n    public message: string;\n\n    /**\n     * Whether should show the close button\n     * @var {boolean}\n     */\n    public disableCloseButton: boolean;\n\n    open() {\n        // @ts-ignore\n        this.$Spin.show({\n            render: (h) => {\n                return h('div', [\n                    h(\n                        'div',\n                        {\n                            class: 'loading-overlay-message',\n                        },\n                        this.message,\n                    ),\n                    !this.disableCloseButton\n                        ? h('i', {\n                              class: 'ivu-icon ivu-icon-ios-close-circle icon close-icon',\n                              size: '45px',\n                          })\n                        : '',\n                    !this.disableCloseButton\n                        ? h(\n                              'a',\n                              {\n                                  on: { click: this.closeScreen },\n                                  class: 'close-text',\n                              },\n                              'close',\n                          )\n                        : '',\n                ]);\n            },\n        });\n\n        this;\n    }\n\n    mounted() {\n        this.open();\n    }\n\n    closeScreen() {\n        this.$store.dispatch('app/SET_LOADING_OVERLAY', {\n            show: false,\n            message: '',\n        });\n    }\n}\n</script>\n\n<style lang=\"less\">\n@import '../../views/resources/css/variables.less';\n\n.demo-spin-icon-load {\n    animation: ani-demo-spin 1s linear infinite;\n}\n\n.ivu-spin-dot {\n    display: block !important;\n    position: relative;\n    margin: 0 auto 30px;\n    display: block;\n    border-radius: 50%;\n    background-color: @purpleDark;\n    width: 50px;\n    height: 50px;\n    animation: ani-spin-bounce 1s 0s ease-in-out infinite;\n    border-radius: 50%;\n}\n\n.close-icon {\n    margin-right: 4px;\n    font-size: @biggerFont;\n    color: @black;\n}\n\n.loading-overlay-message {\n    font-size: @biggerFont;\n    margin-bottom: 20px;\n    color: @purpleDark;\n}\n\n.close-text {\n    font-size: @biggerFont;\n    color: @black;\n    text-decoration: none;\n}\n</style>\n"]}]}