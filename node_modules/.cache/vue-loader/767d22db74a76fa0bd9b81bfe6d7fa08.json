{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue","mtime":1611927226875},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgTW9zYWljSWQsIE11bHRpc2lnQWNjb3VudEluZm8gfSBmcm9tICdzeW1ib2wtc2RrJzsKaW1wb3J0IHsgTm90aWZpY2F0aW9uVHlwZSB9IGZyb20gJ0AvY29yZS91dGlscy9Ob3RpZmljYXRpb25UeXBlJzsKaW1wb3J0IHsgQWNjb3VudE1vZGVsIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL2VudGl0aWVzL0FjY291bnRNb2RlbCc7CgpAQ29tcG9uZW50KHsKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyh7CiAgICAgICAgICAgIG5ldHdvcmtNb3NhaWM6ICdtb3NhaWMvbmV0d29ya01vc2FpYycsCiAgICAgICAgICAgIGN1cnJlbnRBY2NvdW50OiAnYWNjb3VudC9jdXJyZW50QWNjb3VudCcsCiAgICAgICAgICAgIGN1cnJlbnRBY2NvdW50TXVsdGlzaWdJbmZvOiAnYWNjb3VudC9jdXJyZW50QWNjb3VudE11bHRpc2lnSW5mbycsCiAgICAgICAgfSksCiAgICB9LAp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNhYmxlZEZvcm1PdmVybGF5IGV4dGVuZHMgVnVlIHsKICAgIC8qKgogICAgICogT3ZlcnJpZGVzIGNoZWNrcwogICAgICogQHR5cGV7Ym9vbGVhbn0KICAgICAqLwogICAgQFByb3AoeyBkZWZhdWx0OiBmYWxzZSB9KSB3aGl0ZWxpc3RlZDogYm9vbGVhbjsKCiAgICAvKioKICAgICAqIE5ldHdvcmtzIGN1cnJlbmN5IG1vc2FpYwogICAgICogQHZhciB7TW9zYWljSWR9CiAgICAgKi8KICAgIHB1YmxpYyBuZXR3b3JrTW9zYWljOiBNb3NhaWNJZDsKCiAgICAvKioKICAgICAqIEN1cnJlbnQgQWNjb3VudAogICAgICogQHZhciB7QWNjb3VudE1vZGVsfQogICAgICovCiAgICBwdWJsaWMgY3VycmVudEFjY291bnQ6IEFjY291bnRNb2RlbDsKICAgIC8qKgogICAgICogQ3VycmVudCBhY2NvdW50IG11bHRpc2lnIGluZm8KICAgICAqIEB0eXBlIHtNdWx0aXNpZ0FjY291bnRJbmZvfQogICAgICovCiAgICBwdWJsaWMgY3VycmVudEFjY291bnRNdWx0aXNpZ0luZm86IE11bHRpc2lnQWNjb3VudEluZm87CgogICAgLy8vIHJlZ2lvbiBjb21wdXRlZCBwcm9wZXJ0aWVzIGdldHRlci9zZXR0ZXIKICAgIC8qKgogICAgICogV2hldGhlciBhIGZvcm0gc2hvdWxkIGJlIGRpc2FibGVkIHRvIGEgbXVsdGlzaWcgYWNjb3VudAogICAgICogQHJldHVybnMge2Jvb2xlYW59CiAgICAgKi8KICAgIGdldCBkaXNhYmxlVG9NdWx0aXNpZygpOiBib29sZWFuIHsKICAgICAgICAvLyBEb24ndCBkaXNhYmxlIGZvcm0gd2hlbiB0aGUgZm9ybSBpcyBtdWx0aXNpZy1mcmllbmRseQogICAgICAgIGNvbnN0IG11bHRpc2lnRnJpZW5kbHlSb3V0ZU5hbWVzID0gWydkYXNoYm9hcmQuaW52b2ljZSddOwoKICAgICAgICBpZiAobXVsdGlzaWdGcmllbmRseVJvdXRlTmFtZXMuc29tZSgoYSkgPT4gdGhpcy4kcm91dGUubWF0Y2hlZC5tYXAoKHsgbmFtZSB9KSA9PiBuYW1lKS5zb21lKChiKSA9PiBiID09PSBhKSkpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICAvLyBEaXNhYmxlIHRoZSBmb3JtcyB0byBhY2NvdW50cyB3aXRoIGNvc2lnbmF0b3JpZXMKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICAodGhpcy5jdXJyZW50QWNjb3VudE11bHRpc2lnSW5mbyAmJiB0aGlzLmN1cnJlbnRBY2NvdW50TXVsdGlzaWdJbmZvLmNvc2lnbmF0b3J5QWRkcmVzc2VzLmxlbmd0aCA+IDApIHx8CiAgICAgICAgICAgIHRoaXMuY3VycmVudEFjY291bnQuaXNNdWx0aXNpZwogICAgICAgICk7CiAgICB9CgogICAgLyoqCiAgICAgKiBBbGVydCB0byBiZSBkaXNwbGF5ZWQKICAgICAqIElkIEFsZXJ0IGlzIGFuIGVtcHR5IHN0cmluZywgdGhpcyBvdmVybGF5IHdvbid0IHJlbmRlcgogICAgICogQHJldHVybnMge3N0cmluZ30KICAgICAqLwogICAgZ2V0IGFsZXJ0KCk6IHN0cmluZyB7CiAgICAgICAgaWYgKHRoaXMud2hpdGVsaXN0ZWQpIHsKICAgICAgICAgICAgcmV0dXJuICcnOwogICAgICAgIH0KICAgICAgICBpZiAoIXRoaXMubmV0d29ya01vc2FpYykgewogICAgICAgICAgICByZXR1cm4gTm90aWZpY2F0aW9uVHlwZS5OT19ORVRXT1JLX0NVUlJFTkNZOwogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5kaXNhYmxlVG9NdWx0aXNpZykgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdkaXNhYmxlRm9ybScpOwogICAgICAgICAgICByZXR1cm4gTm90aWZpY2F0aW9uVHlwZS5NVUxUSVNJR19BQ0NPVU5UU19OT19UWDsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICcnOwogICAgfQogICAgLy8vIGVuZC1yZWdpb24gY29tcHV0ZWQgcHJvcGVydGllcyBnZXR0ZXIvc2V0dGVyCn0K"},{"version":3,"sources":["DisabledFormOverlay.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DisabledFormOverlay.vue","sourceRoot":"src/components/DisabledFormOverlay","sourcesContent":["<template>\n    <div v-if=\"alert.length\" class=\"multisig_ban_container\">\n        <Alert type=\"error\">\n            {{ $t(alert) }}\n        </Alert>\n        <div class=\"is_multisig un_click radius\" />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { MosaicId, MultisigAccountInfo } from 'symbol-sdk';\nimport { NotificationType } from '@/core/utils/NotificationType';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkMosaic: 'mosaic/networkMosaic',\n            currentAccount: 'account/currentAccount',\n            currentAccountMultisigInfo: 'account/currentAccountMultisigInfo',\n        }),\n    },\n})\nexport default class DisabledFormOverlay extends Vue {\n    /**\n     * Overrides checks\n     * @type{boolean}\n     */\n    @Prop({ default: false }) whitelisted: boolean;\n\n    /**\n     * Networks currency mosaic\n     * @var {MosaicId}\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * Current Account\n     * @var {AccountModel}\n     */\n    public currentAccount: AccountModel;\n    /**\n     * Current account multisig info\n     * @type {MultisigAccountInfo}\n     */\n    public currentAccountMultisigInfo: MultisigAccountInfo;\n\n    /// region computed properties getter/setter\n    /**\n     * Whether a form should be disabled to a multisig account\n     * @returns {boolean}\n     */\n    get disableToMultisig(): boolean {\n        // Don't disable form when the form is multisig-friendly\n        const multisigFriendlyRouteNames = ['dashboard.invoice'];\n\n        if (multisigFriendlyRouteNames.some((a) => this.$route.matched.map(({ name }) => name).some((b) => b === a))) {\n            return false;\n        }\n        // Disable the forms to accounts with cosignatories\n        return (\n            (this.currentAccountMultisigInfo && this.currentAccountMultisigInfo.cosignatoryAddresses.length > 0) ||\n            this.currentAccount.isMultisig\n        );\n    }\n\n    /**\n     * Alert to be displayed\n     * Id Alert is an empty string, this overlay won't render\n     * @returns {string}\n     */\n    get alert(): string {\n        if (this.whitelisted) {\n            return '';\n        }\n        if (!this.networkMosaic) {\n            return NotificationType.NO_NETWORK_CURRENCY;\n        }\n        if (this.disableToMultisig) {\n            this.$emit('disableForm');\n            return NotificationType.MULTISIG_ACCOUNTS_NO_TX;\n        }\n        return '';\n    }\n    /// end-region computed properties getter/setter\n}\n</script>\n\n<style lang=\"less\" scoped>\n@import './DisabledFormOverlay.less';\n</style>\n"]}]}