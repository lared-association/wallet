{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/PeerSelector/PeerSelector.vue?vue&type=style&index=0&id=706fb822&lang=less&scoped=true&","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/PeerSelector/PeerSelector.vue","mtime":1611927202618},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/less-loader/dist/cjs.js","mtime":1611927258426},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi9QZWVyU2VsZWN0b3IubGVzcyc7Cg=="},{"version":3,"sources":["PeerSelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA","file":"PeerSelector.vue","sourceRoot":"src/components/PeerSelector","sourcesContent":["<template>\n    <div :class=\"[isConnected ? 'endpoint-healthy' : 'endpoint-unhealthy']\">\n        <Poptip v-if=\"!isEmbedded\" v-model=\"poptipVisible\" placement=\"bottom-end\" class=\"endpoint-poptip\" @on-popper-show=\"onPopTipShow\">\n            <i class=\"pointer point\" />\n            <span v-if=\"isConnected\" class=\"network-text pointer\">{{ $t('node') }}</span>\n            <div slot=\"content\" class=\"node-selector-container\">\n                <div class=\"current-node-info\">\n                    <Row>\n                        <i-col span=\"6\">{{ $t('current_network') }}:</i-col>\n                        <i-col span=\"18\">{{ networkTypeText }}</i-col>\n                    </Row>\n                    <Row>\n                        <i-col span=\"6\">{{ $t('current_endpoint') }}:</i-col>\n                        <i-col span=\"18\" class=\"overflow_ellipsis\" :title=\"currentPeerInfo.url + currentPeerInfo.friendlyName\">\n                            <div>\n                                <div class=\"node-list-head\">{{ currentPeerInfo.friendlyName }}</div>\n                                <div class=\"node-url overflow_ellipsis\" :title=\"currentPeerInfo.friendlyName\">\n                                    {{ currentPeerInfo.url }}\n                                </div>\n                            </div>\n                        </i-col>\n                    </Row>\n                </div>\n                <div class=\"node-list-container\">\n                    <div class=\"node-list-head\">\n                        <span>{{ $t('node_list') }}</span\n                        ><span>({{ peersList.length }})</span>\n                    </div>\n                    <div class=\"node-list-content\">\n                        <ul v-auto-scroll=\"'active'\">\n                            <li\n                                v-for=\"({ url, friendlyName }, index) in peersList\"\n                                :key=\"`sep${index}`\"\n                                class=\"list-item pointer\"\n                                :class=\"[{ active: currentPeerInfo.url == url }]\"\n                                @click=\"currentPeerInfo.url !== url ? switchPeer(url) : ''\"\n                            >\n                                <div>\n                                    <div class=\"node-list-head\">{{ friendlyName }}</div>\n                                    <div class=\"node-url overflow_ellipsis\" :title=\"url + friendlyName\">{{ url }}</div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"node-list-text\">\n                        <Icon type=\"ios-help-circle-outline\" />\n                        <i18n path=\"peer_tip\">\n                            <template v-slot:setting>\n                                <a @click=\"goSettings()\">{{ $t('sidebar_item_settings') }}</a>\n                            </template>\n                        </i18n>\n                    </div>\n                </div>\n            </div>\n        </Poptip>\n        <div v-else class=\"node-selector-container\">\n            <div class=\"node-list-container\">\n                <div class=\"node-list-head\">\n                    <span>{{ $t('node_list') }}</span\n                    ><span>({{ peersList.length }})</span>\n                </div>\n                <div class=\"node-list-content\">\n                    <ul v-auto-scroll=\"'active'\">\n                        <li\n                            v-for=\"({ url, friendlyName }, index) in peersList\"\n                            :key=\"`sep${index}`\"\n                            class=\"list-item pointer\"\n                            :class=\"[{ active: currentPeerInfo.url == url }]\"\n                        >\n                            <div class=\"node-url overflow_ellipsis\" :title=\"friendlyName\">\n                                <div class=\"node-list-head\">{{ friendlyName }}</div>\n                                <div>{{ url }}</div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <ModalNetworkNotMatchingProfile\n            v-if=\"networkIsNotMatchingProfile\"\n            :visible=\"networkIsNotMatchingProfile\"\n            @close=\"onCloseNetworkModal()\"\n        />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { PeerSelectorTs } from './PeerSelectorTs';\n\nexport default class PeerSelector extends PeerSelectorTs {}\n</script>\n\n<style lang=\"less\" scoped>\n@import './PeerSelector.less';\n</style>\n"]}]}