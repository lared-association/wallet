{"remainingRequest":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/TableDisplay/TableDisplay.vue?vue&type=style&index=0&id=34cfcf2a&lang=less&scoped=true&","dependencies":[{"path":"/home/hero/lared-wallet/src/components/TableDisplay/TableDisplay.vue","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/less-loader/dist/cjs.js","mtime":1606233037860},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuL1RhYmxlRGlzcGxheS5sZXNzJzsK"},{"version":3,"sources":["TableDisplay.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA","file":"TableDisplay.vue","sourceRoot":"src/components/TableDisplay","sourcesContent":["<template>\n    <div class=\"table-container\">\n        <div class=\"upper-section-container\">\n            <div class=\"table-title-container section-title\">\n                <div class=\"user-operation\">\n                    <span class=\"add-metadata-button\">\n                        <ButtonAdd :title=\"$t('add_metadata')\" :disabled=\"false\" @click=\"$emit('on-add-metadata')\" />\n                    </span>\n                    <Checkbox v-if=\"assetType !== 'metadata'\" v-model=\"showExpired\" class=\"table-filter-item-container\">\n                        <span v-show=\"assetType === 'mosaic'\" style=\"margin-left: 0.1rem;\">{{ $t('show_expired_mosaics') }}</span>\n                        <span v-show=\"assetType === 'namespace'\" style=\"margin-left: 0.1rem;\">{{ $t('show_expired_namespaces') }}</span>\n                    </Checkbox>\n                    <div v-if=\"signers.length > 1\" style=\"min-width: 2rem;\">\n                        <SignerFilter :signers=\"signers\" @signer-change=\"onSignerSelectorChange\" />\n                    </div>\n                    <span v-if=\"assetType !== 'metadata'\" class=\"table-filter-item-container\" @click=\"onRefresh\">\n                        <Icon :class=\"{ 'animation-rotate': isRefreshing }\" type=\"ios-sync\" />\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div\n            :class=\"[\n                'table-header-container',\n                assetType !== 'metadata' ? (assetType === 'mosaic' ? 'mosaic-columns' : 'namespace-columns') : 'metadata-columns',\n            ]\"\n        >\n            <div\n                v-for=\"({ name, label }, index) in tableFields\"\n                :key=\"index\"\n                :class=\"['table-header-item', `${name}-header`]\"\n                @click=\"setSortedBy(name)\"\n            >\n                <span>{{ $t(label) }}</span>\n                <Icon\n                    v-if=\"sortedBy.fieldName === name\"\n                    class=\"sort-icon\"\n                    :type=\"sortedBy.direction === 'asc' ? 'md-arrow-dropup' : 'md-arrow-dropdown'\"\n                />\n            </div>\n            <!-- Enmpty header for the action button column -->\n            <div>&nbsp;</div>\n        </div>\n        <div class=\"table-body-container\">\n            <Spin v-if=\"isLoading\" size=\"large\" fix class=\"absolute\" />\n            <div v-if=\"displayedValues.length\" class=\"table-rows-container\">\n                <TableRow\n                    v-for=\"(rowValues, index) in currentPageRows\"\n                    :key=\"index\"\n                    :row-values=\"rowValues\"\n                    :asset-type=\"assetType\"\n                    :owned-asset-hex-ids=\"ownedAssetHexIds\"\n                    @on-show-alias-form=\"showAliasForm\"\n                    @on-show-extend-namespace-duration-form=\"showExtendNamespaceDurationForm\"\n                    @on-show-mosaic-supply-change-form=\"showModifyMosaicSupplyForm\"\n                    @on-show-metadata=\"showMetadataValue\"\n                />\n            </div>\n            <div v-else-if=\"!isLoading && (!displayedValues || displayedValues.length === 0)\" class=\"no-data-outer-container\">\n                <!--<div class=\"no-data-message-container\">\n                    <div>\n                        {{ assetType === 'mosaic' ? $t('no_data_mosaics') : $t('no_data_namespaces') }}\n                    </div>\n                </div>-->\n                <div class=\"no-data-inner-container\">\n                    <div v-for=\"item in nodata\" :key=\"item\">\n                        &nbsp;\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-footer-container\">\n            <Page class=\"page\" :total=\"displayedValues.length\" :page-size=\"pageSize\" @on-change=\"handlePageChange\" />\n        </div>\n        <ModalFormWrap\n            v-if=\"modalFormsVisibility.aliasTransaction\"\n            :visible=\"modalFormsVisibility.aliasTransaction\"\n            :title=\"aliasModalTitle\"\n            @close=\"closeModal('aliasTransaction')\"\n        >\n            <template v-slot:form>\n                <FormAliasTransaction\n                    :namespace-id=\"modalFormsProps.namespaceId\"\n                    :alias-target=\"modalFormsProps.aliasTarget\"\n                    :alias-action=\"modalFormsProps.aliasAction\"\n                    :asset-type=\"assetType\"\n                    @on-confirmation-success=\"closeModal('aliasTransaction')\"\n                />\n            </template>\n        </ModalFormWrap>\n\n        <ModalFormWrap\n            v-if=\"modalFormsVisibility.extendNamespaceDurationTransaction\"\n            :visible=\"modalFormsVisibility.extendNamespaceDurationTransaction\"\n            title=\"modal_title_extend_namespace_duration\"\n            @close=\"closeModal('extendNamespaceDurationTransaction')\"\n        >\n            <template v-slot:form>\n                <FormExtendNamespaceDurationTransaction\n                    :namespace-id=\"modalFormsProps.namespaceId\"\n                    @on-confirmation-success=\"closeModal('extendNamespaceDurationTransaction')\"\n                />\n            </template>\n        </ModalFormWrap>\n\n        <ModalFormWrap\n            v-if=\"modalFormsVisibility.mosaicSupplyChangeTransaction\"\n            :visible=\"modalFormsVisibility.mosaicSupplyChangeTransaction\"\n            title=\"modal_title_mosaic_supply_change\"\n            @close=\"closeModal('mosaicSupplyChangeTransaction')\"\n        >\n            <template v-slot:form>\n                <FormMosaicSupplyChangeTransaction\n                    :mosaic-hex-id=\"modalFormsProps.mosaicId.toHex()\"\n                    @on-confirmation-success=\"closeModal('mosaicSupplyChangeTransaction')\"\n                />\n            </template>\n        </ModalFormWrap>\n\n        <ModalMetadataDisplay\n            v-if=\"modalFormsVisibility.targetedMetadataValue\"\n            :visible=\"modalFormsVisibility.targetedMetadataValue\"\n            :metadata-list=\"targetedMetadataList\"\n            @close=\"closeModal('targetedMetadataValue')\"\n        />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { TableDisplayTs } from './TableDisplayTs';\nexport default class TableDisplay extends TableDisplayTs {}\n</script>\n<style lang=\"less\" scoped>\n@import './TableDisplay.less';\n</style>\n"]}]}