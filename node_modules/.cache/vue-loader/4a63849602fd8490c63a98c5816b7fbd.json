{"remainingRequest":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/views/pages/profiles/LoginPage.vue?vue&type=style&index=0&id=b753f2e0&lang=less&scoped=true&","dependencies":[{"path":"/home/hero/lared-wallet/src/views/pages/profiles/LoginPage.vue","mtime":1606213958977},{"path":"/home/hero/lared-wallet/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/less-loader/dist/cjs.js","mtime":1606233037860},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4vTG9naW5QYWdlLmxlc3MnOwo="},{"version":3,"sources":["LoginPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA","file":"LoginPage.vue","sourceRoot":"src/views/pages/profiles","sourcesContent":["<template>\n    <div class=\"login-profile-wrapper\">\n        <VideoBackground class=\"video-background-section\" :src=\"require('@/views/resources/videos/symbol_3d_rotate.mp4')\">\n            <ValidationObserver v-slot=\"{ handleSubmit }\" slim>\n                <form onsubmit=\"event.preventDefault()\">\n                    <div class=\"switch-language-container\">\n                        <LanguageSelector />\n                    </div>\n                    <div class=\"welcome-box\">\n                        <div class=\"banner-image\">\n                            <span class=\"top-welcome-text\">{{ $t('welcome_to_symbol') }}</span>\n                            <div class=\"bottom-welcome-text\">{{ $t('program_description_line1') }}</div>\n                            <div class=\"bottom-welcome-text\">{{ $t('program_description_line2') }}</div>\n                            <div class=\"bottom-welcome-text\">{{ $t('program_description_line3') }}</div>\n                        </div>\n                        <div class=\"login-card radius\">\n                            <div class=\"img-box\" />\n                            <p class=\"login-title\">\n                                {{ $t('login_to_symbol_account') }}\n                            </p>\n                            <p class=\"profile-name\">\n                                {{ $t('profile_name') }}\n                            </p>\n                            <ValidationProvider v-slot=\"{ errors }\" :name=\"$t('profile_name')\" :rules=\"`in:${profileNames}`\" slim>\n                                <ErrorTooltip field-name=\"profile_name\" :errors=\"errors\">\n                                    <input v-show=\"false\" v-model=\"formItems.currentProfileName\" />\n\n                                    <AutoComplete\n                                        v-model=\"formItems.currentProfileName\"\n                                        placeholder=\" \"\n                                        :class=\"['select-account', !profilesClassifiedByNetworkType ? 'un_click' : 'profile-name-input']\"\n                                    >\n                                        <div class=\"auto-complete-sub-container scroll\">\n                                            <div class=\"tips-in-sub-container\">\n                                                {{ $t(profilesClassifiedByNetworkType ? 'select_a_profile' : 'no_profiles_in_database') }}\n                                            </div>\n                                            <div v-if=\"profilesClassifiedByNetworkType\">\n                                                <div v-for=\"pair in profilesClassifiedByNetworkType\" :key=\"pair.networkType\">\n                                                    <div v-if=\"pair.profiles.length\">\n                                                        <span class=\"network-type-head-title\">{{\n                                                            getNetworkTypeLabel(pair.networkType)\n                                                        }}</span>\n                                                    </div>\n                                                    <Option\n                                                        v-for=\"(profile, index) in pair.profiles\"\n                                                        :key=\"`${profile.profileName}${index}`\"\n                                                        :value=\"profile.profileName\"\n                                                        :label=\"profile.profileName\"\n                                                    >\n                                                        <span>{{ profile.profileName }}</span>\n                                                    </Option>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </AutoComplete>\n                                </ErrorTooltip>\n                            </ValidationProvider>\n                            <p class=\"input-password\">\n                                {{ $t('password') }}\n                            </p>\n                            <ValidationProvider\n                                v-slot=\"{ errors }\"\n                                mode=\"lazy\"\n                                vid=\"password\"\n                                :name=\"$t('password')\"\n                                rules=\"required|min:8\"\n                            >\n                                <ErrorTooltip field-name=\"password\" :errors=\"errors\">\n                                    <input\n                                        v-model=\"formItems.password\"\n                                        v-focus\n                                        :class=\"[!profilesClassifiedByNetworkType ? 'un_click' : '']\"\n                                        :placeholder=\"$t('please_enter_your_account_password')\"\n                                        type=\"password\"\n                                        :disabled=\"!profilesClassifiedByNetworkType\"\n                                    />\n                                </ErrorTooltip>\n                            </ValidationProvider>\n\n                            <div class=\"password-tip\">\n                                <span class=\"prompt pointer\" @click=\"formItems.hasHint = !formItems.hasHint\">{{\n                                    $t('password_hint')\n                                }}</span>\n                                <span\n                                    class=\"pointer create-profile\"\n                                    @click=\"\n                                        $router.push({\n                                            name: 'profiles.importProfile.importStrategy',\n                                        })\n                                    \"\n                                >\n                                    {{ $t('create_a_new_account') }}?\n                                </span>\n                            </div>\n                            <div v-if=\"formItems.hasHint\" class=\"hint\">{{ $t('password_hint') }}: {{ getPasswordHint() }}</div>\n                            <button\n                                v-if=\"profilesClassifiedByNetworkType\"\n                                class=\"pointer button\"\n                                type=\"submit\"\n                                @click.stop=\"handleSubmit(submit)\"\n                            >\n                                {{ $t('login') }}\n                            </button>\n                            <div v-else class=\"pointer button\" @click=\"$router.push({ name: 'profiles.importProfile.importStrategy' })\">\n                                {{ $t('register') }}\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ValidationObserver>\n            <span class=\"version-panel\">{{ $t('version') }}: {{ packageVersion }}</span>\n            <span class=\"powered_by_label\">{{ $t('powered_by') }}</span>\n        </VideoBackground>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport LoginPageTs from './LoginPageTs';\nexport default class LoginPage extends LoginPageTs {}\n</script>\n<style lang=\"less\" scoped>\n@import './LoginPage.less';\n</style>\n"]}]}