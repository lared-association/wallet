{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/PeerSelector/PeerSelectorTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/PeerSelector/PeerSelectorTs.ts","mtime":1606213958957},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgTmV0d29ya1R5cGVIZWxwZXIgfSBmcm9tICdAL2NvcmUvdXRpbHMvTmV0d29ya1R5cGVIZWxwZXInOwppbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7IC8vQHRzLWlnbm9yZQoKaW1wb3J0IE1vZGFsTmV0d29ya05vdE1hdGNoaW5nUHJvZmlsZSBmcm9tICdAL3ZpZXdzL21vZGFscy9Nb2RhbE5ldHdvcmtOb3RNYXRjaGluZ1Byb2ZpbGUvTW9kYWxOZXR3b3JrTm90TWF0Y2hpbmdQcm9maWxlLnZ1ZSc7Cgp2YXIgUGVlclNlbGVjdG9yVHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoUGVlclNlbGVjdG9yVHMsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFBlZXJTZWxlY3RvclRzKTsKCiAgZnVuY3Rpb24gUGVlclNlbGVjdG9yVHMoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBlZXJTZWxlY3RvclRzKTsKCiAgICBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgX3RoaXMucG9wdGlwVmlzaWJsZSA9IGZhbHNlOwogICAgcmV0dXJuIF90aGlzOwogIH0gLy8vIHJlZ2lvbiBjb21wdXRlZCBwcm9wZXJ0aWVzIGdldHRlci9zZXR0ZXIKCgogIF9jcmVhdGVDbGFzcyhQZWVyU2VsZWN0b3JUcywgW3sKICAgIGtleTogInN3aXRjaFBlZXIiLAogICAgLy8vIGVuZC1yZWdpb24gY29tcHV0ZWQgcHJvcGVydGllcyBnZXR0ZXIvc2V0dGVyCgogICAgLyoqCiAgICAgKiBTd2l0Y2ggdGhlIGN1cnJlbnRseSBhY3RpdmUgcGVlcgogICAgICogQHBhcmFtIHBlZXIKICAgICAqLwogICAgdmFsdWU6IGZ1bmN0aW9uIHN3aXRjaFBlZXIodXJsKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCduZXR3b3JrL1NFVF9DVVJSRU5UX1BFRVInLCB1cmwpOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uUG9wVGlwU2hvdyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25Qb3BUaXBTaG93KCkgewogICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgfQogIH0sIHsKICAgIGtleTogImdvU2V0dGluZ3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdvU2V0dGluZ3MoKSB7CiAgICAgIHRoaXMucG9wdGlwVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3Byb2ZpbGUvdG9nZ2xlU2V0dGluZ3MnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkNsb3NlTmV0d29ya01vZGFsIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNsb3NlTmV0d29ya01vZGFsKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbmV0d29yay9TRVRfTkVUV09SS19JU19OT1RfTUFUQ0hJTkdfUFJPRklMRScsIGZhbHNlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJwZWVyc0xpc3QiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiBfLnNvcnRCeSh0aGlzLmtub3dOb2RlcywgZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gYS5pc0RlZmF1bHQgIT09IHRydWU7CiAgICAgIH0sIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGEudXJsOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJuZXR3b3JrVHlwZVRleHQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICghdGhpcy5pc0Nvbm5lY3RlZCkgewogICAgICAgIHJldHVybiB0aGlzLiR0KCdpbnZhbGlkX25vZGUnKS50b1N0cmluZygpOwogICAgICB9CgogICAgICByZXR1cm4gISF0aGlzLm5ldHdvcmtUeXBlID8gTmV0d29ya1R5cGVIZWxwZXIuZ2V0TmV0d29ya1R5cGVMYWJlbCh0aGlzLm5ldHdvcmtUeXBlKSA6IHRoaXMuJHQoJ2xvYWRpbmcnKS50b1N0cmluZygpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFBlZXJTZWxlY3RvclRzOwp9KFZ1ZSk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6IGZhbHNlCn0pXSwgUGVlclNlbGVjdG9yVHMucHJvdG90eXBlLCAiaXNFbWJlZGRlZCIsIHZvaWQgMCk7CgpQZWVyU2VsZWN0b3JUcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgTW9kYWxOZXR3b3JrTm90TWF0Y2hpbmdQcm9maWxlOiBNb2RhbE5ldHdvcmtOb3RNYXRjaGluZ1Byb2ZpbGUKICB9LAogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGN1cnJlbnRQZWVySW5mbzogJ25ldHdvcmsvY3VycmVudFBlZXJJbmZvJywKICAgIGlzQ29ubmVjdGVkOiAnbmV0d29yay9pc0Nvbm5lY3RlZCcsCiAgICBuZXR3b3JrVHlwZTogJ25ldHdvcmsvbmV0d29ya1R5cGUnLAogICAgcmVwb3NpdG9yeUZhY3Rvcnk6ICduZXR3b3JrL3JlcG9zaXRvcnlGYWN0b3J5JywKICAgIGdlbmVyYXRpb25IYXNoOiAnbmV0d29yay9nZW5lcmF0aW9uSGFzaCcsCiAgICBrbm93Tm9kZXM6ICduZXR3b3JrL2tub3dOb2RlcycsCiAgICBuZXR3b3JrSXNOb3RNYXRjaGluZ1Byb2ZpbGU6ICduZXR3b3JrL25ldHdvcmtJc05vdE1hdGNoaW5nUHJvZmlsZScKICB9KSkKfSldLCBQZWVyU2VsZWN0b3JUcyk7CmV4cG9ydCB7IFBlZXJTZWxlY3RvclRzIH07"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/PeerSelector/PeerSelectorTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,MAA3B;AAEA,SAAS,iBAAT,QAAkC,gCAAlC;AACA,OAAO,KAAK,CAAZ,MAAmB,QAAnB,C,CACA;;AACA,OAAO,8BAAP,MAA2C,kFAA3C;;AAgBA,IAAa,cAAb;AAAA;;AAAA;;AAAA,4BAAA;AAAA;;AAAA;;;AAuCW,UAAA,aAAA,GAAyB,KAAzB;AAvCX;AA4EC,GA5ED,CAyCI;;;AAzCJ;AAAA;AAyDI;;AAEA;;;;AA3DJ,+BA+DsB,GA/DtB,EA+DiC;AACzB,WAAK,MAAL,CAAY,QAAZ,CAAqB,0BAArB,EAAiD,GAAjD;AACH;AAjEL;AAAA;AAAA,mCAkEgB;AACR,WAAK,YAAL;AACH;AApEL;AAAA;AAAA,iCAqEc;AACN,WAAK,aAAL,GAAqB,KAArB;AACA,WAAK,MAAL,CAAY,MAAZ,CAAmB,wBAAnB;AACH;AAxEL;AAAA;AAAA,0CAyEuB;AACf,WAAK,MAAL,CAAY,QAAZ,CAAqB,6CAArB,EAAoE,KAApE;AACH;AA3EL;AAAA;AAAA,wBA0CiB;AACT,aAAO,CAAC,CAAC,MAAF,CACH,KAAK,SADF,EAEH,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,SAAF,KAAgB,IAAvB;AAAA,OAFG,EAGH,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,GAAT;AAAA,OAHG,CAAP;AAKH;AAhDL;AAAA;AAAA,wBAkDuB;AACf,UAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,eAAO,KAAK,EAAL,CAAQ,cAAR,EAAwB,QAAxB,EAAP;AACH;;AACD,aAAO,CAAC,CAAC,KAAK,WAAP,GAAqB,iBAAiB,CAAC,mBAAlB,CAAsC,KAAK,WAA3C,CAArB,GAA+E,KAAK,EAAL,CAAQ,SAAR,EAAmB,QAAnB,EAAtF;AACH;AAvDL;;AAAA;AAAA,EAAoC,GAApC,CAAA;;AAC8B,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,wBAAA,E,YAAA,E,KAAoB,CAApB,CAAA;;AADjB,cAAc,GAAA,UAAA,CAAA,CAd1B,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,8BAA8B,EAA9B;AAAF,GADL;AAEP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,eAAe,EAAE,yBADP;AAEV,IAAA,WAAW,EAAE,qBAFH;AAGV,IAAA,WAAW,EAAE,qBAHH;AAIV,IAAA,iBAAiB,EAAE,2BAJT;AAKV,IAAA,cAAc,EAAE,wBALN;AAMV,IAAA,SAAS,EAAE,mBAND;AAOV,IAAA,2BAA2B,EAAE;AAPnB,GAAD,CADT;AAFD,CAAD,CAciB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { NetworkType, RepositoryFactory } from 'symbol-sdk';\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { NodeModel } from '@/core/database/entities/NodeModel';\nimport { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';\nimport * as _ from 'lodash';\n//@ts-ignore\nimport ModalNetworkNotMatchingProfile from '@/views/modals/ModalNetworkNotMatchingProfile/ModalNetworkNotMatchingProfile.vue';\n\n@Component({\n    components: { ModalNetworkNotMatchingProfile },\n    computed: {\n        ...mapGetters({\n            currentPeerInfo: 'network/currentPeerInfo',\n            isConnected: 'network/isConnected',\n            networkType: 'network/networkType',\n            repositoryFactory: 'network/repositoryFactory',\n            generationHash: 'network/generationHash',\n            knowNodes: 'network/knowNodes',\n            networkIsNotMatchingProfile: 'network/networkIsNotMatchingProfile',\n        }),\n    },\n})\nexport class PeerSelectorTs extends Vue {\n    @Prop({ default: false }) isEmbedded: boolean;\n    /**\n     * Currently active endpoint\n     * @see {Store.Network}\n     * @var {Object}\n     */\n    public currentPeerInfo: NodeModel;\n    public networkIsNotMatchingProfile: boolean;\n    /**\n     * Whether the connection is up\n     * @see {Store.Network}\n     * @var {boolean}\n     */\n    public isConnected: boolean;\n\n    /**\n     * Current networkType\n     * @see {Store.Network}\n     * @var {NetworkType}\n     */\n    public networkType: NetworkType;\n\n    /**\n     * Current generationHash\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * Known peers\n     * @see {Store.Network}\n     * @var {string[]}\n     */\n    public knowNodes: NodeModel[];\n\n    public repositoryFactory: RepositoryFactory;\n\n    public poptipVisible: boolean = false;\n\n    /// region computed properties getter/setter\n    get peersList(): NodeModel[] {\n        return _.sortBy(\n            this.knowNodes,\n            (a) => a.isDefault !== true,\n            (a) => a.url,\n        );\n    }\n\n    get networkTypeText(): string {\n        if (!this.isConnected) {\n            return this.$t('invalid_node').toString();\n        }\n        return !!this.networkType ? NetworkTypeHelper.getNetworkTypeLabel(this.networkType) : this.$t('loading').toString();\n    }\n\n    /// end-region computed properties getter/setter\n\n    /**\n     * Switch the currently active peer\n     * @param peer\n     */\n    public switchPeer(url: string) {\n        this.$store.dispatch('network/SET_CURRENT_PEER', url);\n    }\n    onPopTipShow() {\n        this.$forceUpdate();\n    }\n    goSettings() {\n        this.poptipVisible = false;\n        this.$store.commit('profile/toggleSettings');\n    }\n    onCloseNetworkModal() {\n        this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', false);\n    }\n}\n"],"sourceRoot":""}]}