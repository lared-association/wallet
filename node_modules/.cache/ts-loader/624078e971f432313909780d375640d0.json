{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KLy8gZXh0ZXJuYWwgZGVwZW5kZW5jaWVzCgppbXBvcnQgeyBDb21wb25lbnQsIFByb3AsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7IC8vIGNvbmZpZ3VyYXRpb24KCnZhciBBbW91bnREaXNwbGF5VHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQW1vdW50RGlzcGxheVRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBbW91bnREaXNwbGF5VHMpOwoKICBmdW5jdGlvbiBBbW91bnREaXNwbGF5VHMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQW1vdW50RGlzcGxheVRzKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQW1vdW50RGlzcGxheVRzLCBbewogICAga2V5OiAiaW50ZWdlclBhcnQiLAogICAgLy8vIHJlZ2lvbiBjb21wdXRlZCBwcm9wZXJ0aWVzIGdldHRlci9zZXR0ZXIKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlKS50b0xvY2FsZVN0cmluZygpOwogICAgfQogIH0sIHsKICAgIGtleTogImZyYWN0aW9uYWxQYXJ0IiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgcmVzdCA9IHRoaXMudmFsdWUgLSBNYXRoLmZsb29yKHRoaXMudmFsdWUpOwoKICAgICAgaWYgKHJlc3QgPT09IDApIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIHZhciBkZWNpbWFscyA9IHRoaXMuZGVjaW1hbHMgPT09IHVuZGVmaW5lZCA/IHRoaXMubmV0d29ya0NvbmZpZ3VyYXRpb24ubWF4TW9zYWljRGl2aXNpYmlsaXR5IHx8IDYgOiB0aGlzLmRlY2ltYWxzOyAvLyByZW1vdmUgbGVmdG1vc3QtMCBhbmQgcmlnaHRtb3N0LTAKCiAgICAgIHJldHVybiBOdW1iZXIocmVzdC50b0ZpeGVkKGRlY2ltYWxzKSkudG9QcmVjaXNpb24oKS50b1N0cmluZygpLnJlcGxhY2UoL14wLywgJycpOwogICAgfQogICAgLyoqCiAgICAgKiBUaWNrZXIgZGlzcGxheWVkIGluIHRoZSB2aWV3CiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEB0eXBlIHtzdHJpbmd9CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZGlzcGxheWVkVGlja2VyIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5zaG93VGlja2VyICYmIHRoaXMudGlja2VyIHx8ICcnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFtb3VudERpc3BsYXlUczsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAwCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgInZhbHVlIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogdW5kZWZpbmVkCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgImRlY2ltYWxzIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogZmFsc2UKfSldLCBBbW91bnREaXNwbGF5VHMucHJvdG90eXBlLCAic2hvd1RpY2tlciIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6ICcnCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgInRpY2tlciIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6ICdub3JtYWwnCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgInNpemUiLCB2b2lkIDApOwoKQW1vdW50RGlzcGxheVRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wdXRlZDogT2JqZWN0LmFzc2lnbih7fSwgbWFwR2V0dGVycyh7CiAgICBuZXR3b3JrQ29uZmlndXJhdGlvbjogJ25ldHdvcmsvbmV0d29ya0NvbmZpZ3VyYXRpb24nCiAgfSkpCn0pXSwgQW1vdW50RGlzcGxheVRzKTsKZXhwb3J0IHsgQW1vdW50RGlzcGxheVRzIH07"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeA;;AACA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC;AAEA,SAAS,UAAT,QAA2B,MAA3B,C,CAEA;;AASA,IAAa,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAaI;AAbJ,wBAcmB;AACX,aAAO,IAAI,CAAC,KAAL,CAAW,KAAK,KAAhB,EAAuB,cAAvB,EAAP;AACH;AAhBL;AAAA;AAAA,wBAkBsB;AACd,UAAM,IAAI,GAAG,KAAK,KAAL,GAAa,IAAI,CAAC,KAAL,CAAW,KAAK,KAAhB,CAA1B;;AACA,UAAI,IAAI,KAAK,CAAb,EAAgB;AACZ,eAAO,EAAP;AACH;;AACD,UAAM,QAAQ,GAAG,KAAK,QAAL,KAAkB,SAAlB,GAA8B,KAAK,oBAAL,CAA0B,qBAA1B,IAAmD,CAAjF,GAAqF,KAAK,QAA3G,CALc,CAMd;;AACA,aAAO,MAAM,CAAC,IAAI,CAAC,OAAL,CAAa,QAAb,CAAD,CAAN,CAA+B,WAA/B,GAA6C,QAA7C,GAAwD,OAAxD,CAAgE,IAAhE,EAAsE,EAAtE,CAAP;AACH;AAED;;;;;;AA5BJ;AAAA;AAAA,wBAiCuB;AACf,aAAQ,KAAK,UAAL,IAAmB,KAAK,MAAzB,IAAoC,EAA3C;AACH;AAnCL;;AAAA;AAAA,EAAqC,GAArC,CAAA;;AAC0B,UAAA,CAAA,CAArB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAiB,CAAA,E,yBAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAEQ,UAAA,CAAA,CAA7B,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAyB,CAAA,E,yBAAA,E,UAAA,E,KAA6B,CAA7B,CAAA;;AAEJ,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,yBAAA,E,YAAA,E,KAAkB,CAAlB,CAAA;;AAEH,UAAA,CAAA,CAAtB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAkB,CAAA,E,yBAAA,E,QAAA,E,KAAe,CAAf,CAAA;;AAEM,UAAA,CAAA,CAA5B,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAwB,CAAA,E,yBAAA,E,MAAA,E,KAAkD,CAAlD,CAAA;;AATpB,eAAe,GAAA,UAAA,CAAA,CAP3B,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,oBAAoB,EAAE;AADZ,GAAD,CADT;AADD,CAAD,CAOkB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\nimport { mapGetters } from 'vuex';\n\n// configuration\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkConfiguration: 'network/networkConfiguration',\n        }),\n    },\n})\nexport class AmountDisplayTs extends Vue {\n    @Prop({ default: 0 }) value: number;\n\n    @Prop({ default: undefined }) decimals: number | undefined;\n\n    @Prop({ default: false }) showTicker: false;\n\n    @Prop({ default: '' }) ticker: string;\n\n    @Prop({ default: 'normal' }) size: 'normal' | 'smaller' | 'bigger' | 'biggest';\n\n    public networkConfiguration: NetworkConfigurationModel;\n\n    /// region computed properties getter/setter\n    get integerPart(): string {\n        return Math.floor(this.value).toLocaleString();\n    }\n\n    get fractionalPart(): string {\n        const rest = this.value - Math.floor(this.value);\n        if (rest === 0) {\n            return '';\n        }\n        const decimals = this.decimals === undefined ? this.networkConfiguration.maxMosaicDivisibility || 6 : this.decimals;\n        // remove leftmost-0 and rightmost-0\n        return Number(rest.toFixed(decimals)).toPrecision().toString().replace(/^0/, '');\n    }\n\n    /**\n     * Ticker displayed in the view\n     * @readonly\n     * @type {string}\n     */\n    get displayedTicker(): string {\n        return (this.showTicker && this.ticker) || '';\n    }\n\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}