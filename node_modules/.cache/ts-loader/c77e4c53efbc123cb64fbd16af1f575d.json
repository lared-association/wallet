{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlockTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlockTs.ts","mtime":1606213958973},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7IC8vIGludGVybmFsIGRlcGVuZGVuY2llcwovLyBjaGlsZCBjb21wb25lbnRzCi8vIEB0cy1pZ25vcmUKCmltcG9ydCBGb3JtUHJvZmlsZVVubG9jayBmcm9tICdAL3ZpZXdzL2Zvcm1zL0Zvcm1Qcm9maWxlVW5sb2NrL0Zvcm1Qcm9maWxlVW5sb2NrLnZ1ZSc7Cgp2YXIgTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKE1vZGFsRm9ybVByb2ZpbGVVbmxvY2tUcywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzKTsKCiAgZnVuY3Rpb24gTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1vZGFsRm9ybVByb2ZpbGVVbmxvY2tUcyk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE1vZGFsRm9ybVByb2ZpbGVVbmxvY2tUcywgW3sKICAgIGtleTogIm9uQWNjb3VudFVubG9ja2VkIiwKCiAgICAvKioKICAgICAqIEhvb2sgY2FsbGVkIHdoZW4gY2hpbGQgY29tcG9uZW50IEZvcm1Qcm9maWxlVW5sb2NrIGVtaXRzCiAgICAgKiB0aGUgJ3N1Y2Nlc3MnIGV2ZW50LgogICAgICogQHBhcmFtIHtQYXNzd29yZH0gcGFzc3dvcmQKICAgICAqIEByZXR1cm4ge3ZvaWR9CiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBvbkFjY291bnRVbmxvY2tlZChwYXlsb2FkKSB7CiAgICAgIC8vIC0gbG9nIGFib3V0IHVubG9jayBzdWNjZXNzCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdkaWFnbm9zdGljL0FERF9JTkZPJywgIkFjY291bnQgIi5jb25jYXQocGF5bG9hZC5hY2NvdW50LmFkZHJlc3MucGxhaW4oKSwgIiB1bmxvY2tlZCBzdWNjZXNzZnVsbHkuIikpOyAvLyAtIGVtaXQgc3VjY2VzcwoKICAgICAgdGhpcy4kZW1pdCgnc3VjY2VzcycsIHBheWxvYWQuYWNjb3VudC5wdWJsaWNBY2NvdW50KTsgLy8gLSBkaXNwYXRjaCBjYWxsYmFjawoKICAgICAgdGhpcy5zaG93ID0gZmFsc2U7CiAgICAgIHJldHVybiB0aGlzLm9uU3VjY2VzcyhwYXlsb2FkLmFjY291bnQsIHBheWxvYWQucGFzc3dvcmQpOwogICAgfQogICAgLyoqCiAgICAgKiBIb29rIGNhbGxlZCB3aGVuIGNoaWxkIGNvbXBvbmVudCBGb3JtUHJvZmlsZVVubG9jayBvcgogICAgICogSGFyZHdhcmVDb25maXJtYXRpb25CdXR0b24gZW1pdCB0aGUgJ2Vycm9yJyBldmVudC4KICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlCiAgICAgKiBAcmV0dXJuIHt2b2lkfQogICAgICovCgogIH0sIHsKICAgIGtleTogIm9uRXJyb3IiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uRXJyb3IoZXJyb3IpIHsKICAgICAgdGhpcy4kZW1pdCgnZXJyb3InLCBlcnJvcik7CiAgICB9CiAgfSwgewogICAga2V5OiAic2hvdyIsCgogICAgLyoqCiAgICAgKiBWaXNpYmlsaXR5IHN0YXRlCiAgICAgKiBAdHlwZSB7Ym9vbGVhbn0KICAgICAqLwogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnZpc2libGU7CiAgICB9CiAgICAvKioKICAgICAqIEVtaXRzIGNsb3NlIGV2ZW50CiAgICAgKi8KICAgICwKICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbCkgewogICAgICBpZiAoIXZhbCkgewogICAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBNb2RhbEZvcm1Qcm9maWxlVW5sb2NrVHM7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogZmFsc2UKfSldLCBNb2RhbEZvcm1Qcm9maWxlVW5sb2NrVHMucHJvdG90eXBlLCAidmlzaWJsZSIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgcmV0dXJuIHRydWU7CiAgfQp9KV0sIE1vZGFsRm9ybVByb2ZpbGVVbmxvY2tUcy5wcm90b3R5cGUsICJvblN1Y2Nlc3MiLCB2b2lkIDApOwoKTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBGb3JtUHJvZmlsZVVubG9jazogRm9ybVByb2ZpbGVVbmxvY2sKICB9Cn0pXSwgTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzKTsKZXhwb3J0IHsgTW9kYWxGb3JtUHJvZmlsZVVubG9ja1RzIH07"},{"version":3,"sources":["/home/hero/lared-wallet/src/views/modals/ModalFormProfileUnlock/ModalFormProfileUnlockTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC,C,CAEA;AACA;AACA;;AACA,OAAO,iBAAP,MAA8B,uDAA9B;;AAOA,IAAa,wBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AA4BI;;;;;;AA5BJ,sCAkC6B,OAlC7B,EAkC8E;AACtE;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,qBAArB,oBAAuD,OAAO,CAAC,OAAR,CAAgB,OAAhB,CAAwB,KAAxB,EAAvD,8BAFsE,CAItE;;AACA,WAAK,KAAL,CAAW,SAAX,EAAsB,OAAO,CAAC,OAAR,CAAgB,aAAtC,EALsE,CAOtE;;AACA,WAAK,IAAL,GAAY,KAAZ;AACA,aAAO,KAAK,SAAL,CAAe,OAAO,CAAC,OAAvB,EAAgC,OAAO,CAAC,QAAxC,CAAP;AACH;AAED;;;;;;;AA9CJ;AAAA;AAAA,4BAoDmB,KApDnB,EAoDgC;AACxB,WAAK,KAAL,CAAW,OAAX,EAAoB,KAApB;AACH;AAtDL;AAAA;;AAWI;;;;AAXJ,wBAeY;AACJ,aAAO,KAAK,OAAZ;AACH;AAED;;;AAnBJ;AAAA,sBAsBa,GAtBb,EAsBgB;AACR,UAAI,CAAC,GAAL,EAAU;AACN,aAAK,KAAL,CAAW,OAAX;AACH;AACJ;AA1BL;;AAAA;AAAA,EAA8C,GAA9C,CAAA;;AAII,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,aAAS;AADP,CAAD,CAGL,CAAA,E,kCAAA,E,SAAA,E,KAAiB,CAAjB,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,aAAS;AAAA,WAAM,IAAN;AAAA;AADP,CAAD,CAGL,CAAA,E,kCAAA,E,WAAA,E,KAAgD,CAAhD,CAAA;;AATS,wBAAwB,GAAA,UAAA,CAAA,CALpC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,iBAAiB,EAAjB;AADQ;AADL,CAAD,CAK2B,CAAA,EAAxB,wBAAwB,CAAxB;SAAA,wB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { Account, Password } from 'symbol-sdk';\n// internal dependencies\n// child components\n// @ts-ignore\nimport FormProfileUnlock from '@/views/forms/FormProfileUnlock/FormProfileUnlock.vue';\n\n@Component({\n    components: {\n        FormProfileUnlock,\n    },\n})\nexport class ModalFormProfileUnlockTs extends Vue {\n    @Prop({\n        default: false,\n    })\n    visible: boolean;\n\n    @Prop({\n        default: () => true,\n    })\n    onSuccess: (a: Account, p: Password) => boolean;\n\n    /**\n     * Visibility state\n     * @type {boolean}\n     */\n    get show(): boolean {\n        return this.visible;\n    }\n\n    /**\n     * Emits close event\n     */\n    set show(val) {\n        if (!val) {\n            this.$emit('close');\n        }\n    }\n\n    /**\n     * Hook called when child component FormProfileUnlock emits\n     * the 'success' event.\n     * @param {Password} password\n     * @return {void}\n     */\n    public onAccountUnlocked(payload: { account: Account; password: Password }) {\n        // - log about unlock success\n        this.$store.dispatch('diagnostic/ADD_INFO', `Account ${payload.account.address.plain()} unlocked successfully.`);\n\n        // - emit success\n        this.$emit('success', payload.account.publicAccount);\n\n        // - dispatch callback\n        this.show = false;\n        return this.onSuccess(payload.account, payload.password);\n    }\n\n    /**\n     * Hook called when child component FormProfileUnlock or\n     * HardwareConfirmationButton emit the 'error' event.\n     * @param {string} message\n     * @return {void}\n     */\n    public onError(error: string) {\n        this.$emit('error', error);\n    }\n}\n"],"sourceRoot":""}]}