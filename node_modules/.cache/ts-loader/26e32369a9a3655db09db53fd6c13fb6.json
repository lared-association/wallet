{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/MosaicSelector/MosaicSelectorTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/MosaicSelector/MosaicSelectorTs.ts","mtime":1606213958957},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsgLy8gaW50ZXJuYWwgZGVwZW5kZW5jaWVzCi8vIGNoaWxkIGNvbXBvbmVudHMKCmltcG9ydCB7IFZhbGlkYXRpb25Qcm92aWRlciB9IGZyb20gJ3ZlZS12YWxpZGF0ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBFcnJvclRvb2x0aXAgZnJvbSAnQC9jb21wb25lbnRzLy9FcnJvclRvb2x0aXAvRXJyb3JUb29sdGlwLnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBGb3JtTGFiZWwgZnJvbSAnQC9jb21wb25lbnRzLy9Gb3JtTGFiZWwvRm9ybUxhYmVsLnZ1ZSc7Cgp2YXIgTW9zYWljU2VsZWN0b3JUcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhNb3NhaWNTZWxlY3RvclRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNb3NhaWNTZWxlY3RvclRzKTsKCiAgZnVuY3Rpb24gTW9zYWljU2VsZWN0b3JUcygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNb3NhaWNTZWxlY3RvclRzKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTW9zYWljU2VsZWN0b3JUcywgW3sKICAgIGtleTogIm1vdW50ZWQiLAoKICAgIC8qKgogICAgICogSG9vayBjYWxsZWQgd2hlbiB0aGUgbGF5b3V0IGlzIG1vdW50ZWQKICAgICAqIEByZXR1cm4ge3ZvaWR9CiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICAvLyBpZiBhIHZhbHVlIGlzIHByb3ZpZGVkLCByZXR1cm4KICAgICAgaWYgKHRoaXMudmFsdWUgJiYgdGhpcy52YWx1ZS5sZW5ndGggPiAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIGVsc2UuLi4gc2V0IGRlZmF1bHQgdmFsdWUgdG8gbmV0d29yayBtb3NhaWMKCgogICAgICBpZiAodGhpcy5kZWZhdWx0TW9zYWljID09PSAnbmV0d29ya01vc2FpYycgJiYgdGhpcy5uZXR3b3JrTW9zYWljKSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZE1vc2FpYyA9IHRoaXMubmV0d29ya01vc2FpYy50b0hleCgpOwogICAgICB9IC8vIG90aGVyd2lzZS4uLiBzZXQgZGVmYXVsdCB2YWx1ZSB0byB0aGUgZmlyc3QgbW9zYWljIGZyb20gdGhlIHByb3BzCgoKICAgICAgaWYgKHRoaXMuZGVmYXVsdE1vc2FpYyA9PT0gJ2ZpcnN0SW5MaXN0JyAmJiB0aGlzLm1vc2FpY0hleElkcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkTW9zYWljID0gdGhpcy5tb3NhaWNIZXhJZHNbMF07CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJkaXNwbGF5ZWRNb3NhaWNzIiwKICAgIC8vLyByZWdpb24gY29tcHV0ZWQgcHJvcGVydGllcyBnZXR0ZXIvc2V0dGVyCgogICAgLyoqCiAgICAgKiBNb3NhaWNzIHNob3duIGFzIG9wdGlvbnMgaW4gdGhlIHNlbGVjdAogICAgICogQHJlYWRvbmx5CiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKi8KICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMubW9zYWljSGV4SWRzLm1hcChmdW5jdGlvbiAobW9zYWljSWRIZXgpIHsKICAgICAgICByZXR1cm4gX3RoaXMubW9zYWljcy5maW5kKGZ1bmN0aW9uIChtKSB7CiAgICAgICAgICByZXR1cm4gbS5tb3NhaWNJZEhleCA9PT0gbW9zYWljSWRIZXg7CiAgICAgICAgfSk7CiAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoeCkgewogICAgICAgIHJldHVybiB4OwogICAgICB9KTsKICAgIH0KICAgIC8qKgogICAgICogU2V0cyB0aGUgZGVmYXVsdCBpbnB1dCB2YWx1ZQogICAgICogQHR5cGUge3N0cmluZ30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJzZWxlY3RlZE1vc2FpYyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWU7CiAgICB9CiAgICAvKioKICAgICAqIEVtaXRzIGlucHV0IHZhbHVlIGNoYW5nZSB0byBwYXJlbnQgY29tcG9uZW50CiAgICAgKi8KICAgICwKICAgIHNldDogZnVuY3Rpb24gc2V0KGhleCkgewogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGhleCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTW9zYWljU2VsZWN0b3JUczsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAnJwp9KV0sIE1vc2FpY1NlbGVjdG9yVHMucHJvdG90eXBlLCAidmFsdWUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiBbXQp9KV0sIE1vc2FpY1NlbGVjdG9yVHMucHJvdG90eXBlLCAibW9zYWljSGV4SWRzIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogbnVsbAp9KV0sIE1vc2FpY1NlbGVjdG9yVHMucHJvdG90eXBlLCAibGFiZWwiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAnbmV0d29ya01vc2FpYycKfSldLCBNb3NhaWNTZWxlY3RvclRzLnByb3RvdHlwZSwgImRlZmF1bHRNb3NhaWMiLCB2b2lkIDApOwoKTW9zYWljU2VsZWN0b3JUcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBFcnJvclRvb2x0aXA6IEVycm9yVG9vbHRpcCwKICAgIEZvcm1MYWJlbDogRm9ybUxhYmVsCiAgfSwKICBjb21wdXRlZDogT2JqZWN0LmFzc2lnbih7fSwgbWFwR2V0dGVycyh7CiAgICBuZXR3b3JrTW9zYWljOiAnbW9zYWljL25ldHdvcmtNb3NhaWMnLAogICAgbmV0d29ya01vc2FpY05hbWU6ICdtb3NhaWMvbmV0d29ya01vc2FpY05hbWUnLAogICAgbW9zYWljczogJ21vc2FpYy9tb3NhaWNzJwogIH0pKQp9KV0sIE1vc2FpY1NlbGVjdG9yVHMpOwpleHBvcnQgeyBNb3NhaWNTZWxlY3RvclRzIH07"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/MosaicSelector/MosaicSelectorTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CACA;AACA;;AACA,SAAS,kBAAT,QAAmC,cAAnC,C,CACA;;AACA,OAAO,YAAP,MAAyB,6CAAzB,C,CACA;;AACA,OAAO,SAAP,MAAsB,uCAAtB;;AAiBA,IAAa,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AA0DI;;;;AA1DJ,8BA8DkB;AACV;AACA,UAAI,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,MAAX,GAAoB,CAAtC,EAAyC;AACrC;AACH,OAJS,CAMV;;;AACA,UAAI,KAAK,aAAL,KAAuB,eAAvB,IAA0C,KAAK,aAAnD,EAAkE;AAC9D,aAAK,cAAL,GAAsB,KAAK,aAAL,CAAmB,KAAnB,EAAtB;AACH,OATS,CAWV;;;AACA,UAAI,KAAK,aAAL,KAAuB,aAAvB,IAAwC,KAAK,YAAL,CAAkB,MAA9D,EAAsE;AAClE,aAAK,cAAL,GAAsB,KAAK,YAAL,CAAkB,CAAlB,CAAtB;AACH;AACJ;AA7EL;AAAA;AAgCI;;AAEA;;;;;AAlCJ,wBAuCkC;AAAA;;AAC1B,aAAO,KAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAC,WAAD;AAAA,eAAiB,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,UAAC,CAAD;AAAA,iBAAO,CAAC,CAAC,WAAF,KAAkB,WAAzB;AAAA,SAAlB,CAAjB;AAAA,OAAtB,EAAgG,MAAhG,CAAuG,UAAC,CAAD;AAAA,eAAO,CAAP;AAAA,OAAvG,CAAP;AACH;AAED;;;;;AA3CJ;AAAA;AAAA,wBA+C6B;AACrB,aAAO,KAAK,KAAZ;AACH;AAED;;;AAnDJ;AAAA,sBAsD8B,GAtD9B,EAsDyC;AACjC,WAAK,KAAL,CAAW,OAAX,EAAoB,GAApB;AACH;AAxDL;;AAAA;AAAA,EAAsC,GAAtC,CAAA;;AAI2B,UAAA,CAAA,CAAtB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAkB,CAAA,E,0BAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAKA,UAAA,CAAA,CAAtB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAkB,CAAA,E,0BAAA,E,cAAA,E,KAAuB,CAAvB,CAAA;;AAKE,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAoB,CAAA,E,0BAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAEW,UAAA,CAAA,CAAnC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAA+B,CAAA,E,0BAAA,E,eAAA,E,KAA+C,CAA/C,CAAA;;AAhB3B,gBAAgB,GAAA,UAAA,CAAA,CAd5B,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,kBAAkB,EAAlB,kBADQ;AAER,IAAA,YAAY,EAAZ,YAFQ;AAGR,IAAA,SAAS,EAAT;AAHQ,GADL;AAMP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,aAAa,EAAE,sBADL;AAEV,IAAA,iBAAiB,EAAE,0BAFT;AAGV,IAAA,OAAO,EAAE;AAHC,GAAD,CADT;AAND,CAAD,CAcmB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { MosaicId } from 'symbol-sdk';\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\n// child components\nimport { ValidationProvider } from 'vee-validate';\n// @ts-ignore\nimport ErrorTooltip from '@/components//ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport FormLabel from '@/components//FormLabel/FormLabel.vue';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\n\n@Component({\n    components: {\n        ValidationProvider,\n        ErrorTooltip,\n        FormLabel,\n    },\n    computed: {\n        ...mapGetters({\n            networkMosaic: 'mosaic/networkMosaic',\n            networkMosaicName: 'mosaic/networkMosaicName',\n            mosaics: 'mosaic/mosaics',\n        }),\n    },\n})\nexport class MosaicSelectorTs extends Vue {\n    /**\n     * Prop bound to the parent v-model\n     */\n    @Prop({ default: '' }) value: string;\n\n    /**\n     * Mosaics to display as options\n     */\n    @Prop({ default: [] }) mosaicHexIds: string[];\n\n    /**\n     * Field label hidden by default\n     */\n    @Prop({ default: null }) label: string;\n\n    @Prop({ default: 'networkMosaic' }) defaultMosaic: 'networkMosaic' | 'firstInList';\n    /**\n     * Networks currency mosaic\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * Networks currency mosaic name\n     */\n    public networkMosaicName: string;\n\n    /**\n     * All the known mosaics.\n     */\n    public mosaics: MosaicModel[];\n\n    /// region computed properties getter/setter\n\n    /**\n     * Mosaics shown as options in the select\n     * @readonly\n     * @protected\n     */\n    protected get displayedMosaics(): MosaicModel[] {\n        return this.mosaicHexIds.map((mosaicIdHex) => this.mosaics.find((m) => m.mosaicIdHex === mosaicIdHex)).filter((x) => x);\n    }\n\n    /**\n     * Sets the default input value\n     * @type {string}\n     */\n    public get selectedMosaic(): string {\n        return this.value;\n    }\n\n    /**\n     * Emits input value change to parent component\n     */\n    public set selectedMosaic(hex: string) {\n        this.$emit('input', hex);\n    }\n\n    /**\n     * Hook called when the layout is mounted\n     * @return {void}\n     */\n    public mounted(): void {\n        // if a value is provided, return\n        if (this.value && this.value.length > 0) {\n            return;\n        }\n\n        // else... set default value to network mosaic\n        if (this.defaultMosaic === 'networkMosaic' && this.networkMosaic) {\n            this.selectedMosaic = this.networkMosaic.toHex();\n        }\n\n        // otherwise... set default value to the first mosaic from the props\n        if (this.defaultMosaic === 'firstInList' && this.mosaicHexIds.length) {\n            this.selectedMosaic = this.mosaicHexIds[0];\n        }\n    }\n}\n"],"sourceRoot":""}]}