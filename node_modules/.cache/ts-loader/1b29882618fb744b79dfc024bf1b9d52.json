{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/QRCode/QRCodeActions/ContactQRAction/ContactQRActionTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/QRCode/QRCodeActions/ContactQRAction/ContactQRActionTs.ts","mtime":1606213958957},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KCmltcG9ydCB7IFZ1ZSwgQ29tcG9uZW50LCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IEFkZHJlc3MsIE5ldHdvcmtUeXBlIH0gZnJvbSAnc3ltYm9sLXNkayc7CmltcG9ydCB7IFFSQ29kZURldGFpbEl0ZW0gfSBmcm9tICdAL2NvbXBvbmVudHMvUVJDb2RlL1FSQ29kZUFjdGlvbnMvVGVtcGxhdGVRUkFjdGlvbi9UZW1wbGF0ZVFSQWN0aW9uVHMnOyAvLyBAdHMtaWdub3JlCgppbXBvcnQgVGVtcGxhdGVRUkFjdGlvbiBmcm9tICdAL2NvbXBvbmVudHMvUVJDb2RlL1FSQ29kZUFjdGlvbnMvVGVtcGxhdGVRUkFjdGlvbi9UZW1wbGF0ZVFSQWN0aW9uLnZ1ZSc7Cgp2YXIgQ29udGFjdFFSQWN0aW9uVHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQ29udGFjdFFSQWN0aW9uVHMsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENvbnRhY3RRUkFjdGlvblRzKTsKCiAgZnVuY3Rpb24gQ29udGFjdFFSQWN0aW9uVHMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29udGFjdFFSQWN0aW9uVHMpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhDb250YWN0UVJBY3Rpb25UcywgW3sKICAgIGtleTogIm9uU3VibWl0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdGhpcy5vblN1Y2Nlc3MoKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdkYXNoYm9hcmQudHJhbnNmZXInLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgcmVjaXBpZW50QWRkcmVzczogQWRkcmVzcy5jcmVhdGVGcm9tUHVibGljS2V5KHRoaXMucXJDb2RlLmFjY291bnRQdWJsaWNLZXksIHRoaXMucXJDb2RlLm5ldHdvcmtUeXBlKS5wbGFpbigpCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkZXRhaWxJdGVtcyIsCgogICAgLyoqCiAgICAgKiBHZXQgUVIgQ29kZSBkZXRhaWwgaXRlbXMKICAgICAqCiAgICAgKiBAcmV0dXJucyBRUkNvZGVEZXRhaWxJdGVtW10KICAgICAqLwogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciBpdGVtcyA9IFtdOwogICAgICBpdGVtcy5wdXNoKG5ldyBRUkNvZGVEZXRhaWxJdGVtKHRoaXMuJHQoJ3FyY29kZV9kZXRhaWxfaXRlbV90eXBlJykudG9TdHJpbmcoKSwgdGhpcy4kdCgncXJjb2RlX2RldGFpbF9pdGVtX3R5cGVfY29udGFjdHFyJykudG9TdHJpbmcoKSwgdHJ1ZSkpOwogICAgICBpdGVtcy5wdXNoKG5ldyBRUkNvZGVEZXRhaWxJdGVtKHRoaXMuJHQoJ3FyY29kZV9kZXRhaWxfaXRlbV9uZXR3b3JrX3R5cGUnKS50b1N0cmluZygpLCBOZXR3b3JrVHlwZVt0aGlzLnFyQ29kZS5uZXR3b3JrVHlwZV0sIHRydWUpKTsKICAgICAgaXRlbXMucHVzaChuZXcgUVJDb2RlRGV0YWlsSXRlbSh0aGlzLiR0KCdxcmNvZGVfZGV0YWlsX2l0ZW1fY29udGFjdF9uYW1lJykudG9TdHJpbmcoKSwgdGhpcy5xckNvZGUubmFtZSwgdHJ1ZSkpOwogICAgICBpdGVtcy5wdXNoKG5ldyBRUkNvZGVEZXRhaWxJdGVtKHRoaXMuJHQoJ3FyY29kZV9kZXRhaWxfaXRlbV9hZGRyZXNzJykudG9TdHJpbmcoKSwgQWRkcmVzcy5jcmVhdGVGcm9tUHVibGljS2V5KHRoaXMucXJDb2RlLmFjY291bnRQdWJsaWNLZXksIHRoaXMucXJDb2RlLm5ldHdvcmtUeXBlKS5wbGFpbigpLCB0cnVlKSk7CiAgICAgIHJldHVybiBpdGVtczsKICAgIH0KICB9XSk7CgogIHJldHVybiBDb250YWN0UVJBY3Rpb25UczsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiBudWxsCn0pXSwgQ29udGFjdFFSQWN0aW9uVHMucHJvdG90eXBlLCAicXJDb2RlIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogbnVsbAp9KV0sIENvbnRhY3RRUkFjdGlvblRzLnByb3RvdHlwZSwgIm9uU3VjY2VzcyIsIHZvaWQgMCk7CgpDb250YWN0UVJBY3Rpb25UcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgVGVtcGxhdGVRUkFjdGlvbjogVGVtcGxhdGVRUkFjdGlvbgogIH0KfSldLCBDb250YWN0UVJBY3Rpb25Ucyk7CmV4cG9ydCBkZWZhdWx0IENvbnRhY3RRUkFjdGlvblRzOw=="},{"version":3,"sources":["/home/hero/lared-wallet/src/components/QRCode/QRCodeActions/ContactQRAction/ContactQRActionTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,QAAqC,wBAArC;AAEA,SAAS,OAAT,EAAkB,WAAlB,QAAqC,YAArC;AACA,SAAS,gBAAT,QAAiC,uEAAjC,C,CACA;;AACA,OAAO,gBAAP,MAA6B,yEAA7B;;AAKA,IAAqB,iBAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAiCmB;AACX,WAAK,SAAL;AACA,WAAK,OAAL,CAAa,IAAb,CAAkB;AACd,QAAA,IAAI,EAAE,oBADQ;AAEd,QAAA,MAAM,EAAE;AAAE,UAAA,gBAAgB,EAAE,OAAO,CAAC,mBAAR,CAA4B,KAAK,MAAL,CAAY,gBAAxC,EAA0D,KAAK,MAAL,CAAY,WAAtE,EAAmF,KAAnF;AAApB;AAFM,OAAlB;AAIH;AAvCL;AAAA;;AAKI;;;;;AALJ,wBAU0B;AAClB,UAAM,KAAK,GAAuB,EAAlC;AACA,MAAA,KAAK,CAAC,IAAN,CACI,IAAI,gBAAJ,CACI,KAAK,EAAL,CAAQ,yBAAR,EAAmC,QAAnC,EADJ,EAEI,KAAK,EAAL,CAAQ,mCAAR,EAA6C,QAA7C,EAFJ,EAGI,IAHJ,CADJ;AAOA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAI,gBAAJ,CAAqB,KAAK,EAAL,CAAQ,iCAAR,EAA2C,QAA3C,EAArB,EAA4E,WAAW,CAAC,KAAK,MAAL,CAAY,WAAb,CAAvF,EAAkH,IAAlH,CAAX;AAEA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAI,gBAAJ,CAAqB,KAAK,EAAL,CAAQ,iCAAR,EAA2C,QAA3C,EAArB,EAA4E,KAAK,MAAL,CAAY,IAAxF,EAA8F,IAA9F,CAAX;AACA,MAAA,KAAK,CAAC,IAAN,CACI,IAAI,gBAAJ,CACI,KAAK,EAAL,CAAQ,4BAAR,EAAsC,QAAtC,EADJ,EAEI,OAAO,CAAC,mBAAR,CAA4B,KAAK,MAAL,CAAY,gBAAxC,EAA0D,KAAK,MAAL,CAAY,WAAtE,EAAmF,KAAnF,EAFJ,EAGI,IAHJ,CADJ;AAQA,aAAO,KAAP;AACH;AA/BL;;AAAA;AAAA,EAA+C,GAA/C,CAAA;;AAC6B,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAoB,CAAA,E,2BAAA,E,QAAA,E,KAA4B,CAA5B,CAAA;;AAEA,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAoB,CAAA,E,2BAAA,E,WAAA,E,KAA+B,CAA/B,CAAA;;AAHR,iBAAiB,GAAA,UAAA,CAAA,CAHrC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,gBAAgB,EAAhB;AAAF;AADL,CAAD,CAG4B,CAAA,EAAjB,iBAAiB,CAAjB;eAAA,iB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { ContactQR } from 'symbol-qr-library';\nimport { Address, NetworkType } from 'symbol-sdk';\nimport { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';\n// @ts-ignore\nimport TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';\n\n@Component({\n    components: { TemplateQRAction },\n})\nexport default class ContactQRActionTs extends Vue {\n    @Prop({ default: null }) readonly qrCode!: ContactQR;\n\n    @Prop({ default: null }) readonly onSuccess: () => void;\n\n    /**\n     * Get QR Code detail items\n     *\n     * @returns QRCodeDetailItem[]\n     */\n    public get detailItems(): QRCodeDetailItem[] {\n        const items: QRCodeDetailItem[] = [];\n        items.push(\n            new QRCodeDetailItem(\n                this.$t('qrcode_detail_item_type').toString(),\n                this.$t('qrcode_detail_item_type_contactqr').toString(),\n                true,\n            ),\n        );\n        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));\n\n        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_contact_name').toString(), this.qrCode.name, true));\n        items.push(\n            new QRCodeDetailItem(\n                this.$t('qrcode_detail_item_address').toString(),\n                Address.createFromPublicKey(this.qrCode.accountPublicKey, this.qrCode.networkType).plain(),\n                true,\n            ),\n        );\n\n        return items;\n    }\n\n    public onSubmit() {\n        this.onSuccess();\n        this.$router.push({\n            name: 'dashboard.transfer',\n            params: { recipientAddress: Address.createFromPublicKey(this.qrCode.accountPublicKey, this.qrCode.networkType).plain() },\n        });\n    }\n}\n"],"sourceRoot":""}]}