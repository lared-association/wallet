{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/hero/lared-wallet/src/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7IC8vIGV4dGVuYWwgZGVwZW5kZW5jaWVzCgppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSwgUHJvcCB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOyAvLyBjaGlsZCBjb21wb25lbnRzCgppbXBvcnQgTWF4RmVlU2VsZWN0b3IgZnJvbSAnQC9jb21wb25lbnRzL01heEZlZVNlbGVjdG9yL01heEZlZVNlbGVjdG9yLnZ1ZSc7CmltcG9ydCBGb3JtUm93IGZyb20gJ0AvY29tcG9uZW50cy9Gb3JtUm93L0Zvcm1Sb3cudnVlJzsKCnZhciBNYXhGZWVBbmRTdWJtaXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoTWF4RmVlQW5kU3VibWl0LCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNYXhGZWVBbmRTdWJtaXQpOwoKICBmdW5jdGlvbiBNYXhGZWVBbmRTdWJtaXQoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWF4RmVlQW5kU3VibWl0KTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTWF4RmVlQW5kU3VibWl0LCBbewogICAga2V5OiAibWF4RmVlIiwKCiAgICAvKioKICAgICAqIEdldCBtYXggZmVlIHZhbHVlIGZyb20gdGhlIHZhbHVlIHByb3AKICAgICAqIEByZWFkb25seQogICAgICogQHByb3RlY3RlZAogICAgICogQHR5cGUge251bWJlcn0KICAgICAqLwogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnZhbHVlOwogICAgfQogICAgLyoqCiAgICAgKiBFbWl0IGNob3NlbiBtYXggZmVlIHZhbHVlIHRvIHRoZSBwYXJlbnQgY29tcG9uZW50CiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKi8KICAgICwKICAgIHNldDogZnVuY3Rpb24gc2V0KGNob3Nlbk1heEZlZSkgewogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGNob3Nlbk1heEZlZSk7CiAgICB9CiAgICAvKioKICAgICAqIFdoZXRoZXIgdGhlcmUgYXJlIGFueSB3YXJuaW5ncwogICAgICovCgogIH0sIHsKICAgIGtleTogImFueVdhcm5pbmdzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5pc0ZlZUxvd2VyVGhhblJlY29tbWVuZGVkRmVlOwogICAgfQogICAgLyoqCiAgICAgKiBXaGV0aGVyIHNlbGVjdGVkIGZlZSBpcyBsb3dlciB0aGFuIHJlY29tbWVuZGVkIGZlZQogICAgICovCgogIH0sIHsKICAgIGtleTogImlzRmVlTG93ZXJUaGFuUmVjb21tZW5kZWRGZWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICh0aGlzLmNhbGN1bGF0ZWRSZWNvbW1lbmRlZEZlZSA+IDAgJiYgdGhpcy5tYXhGZWUgIT09IDEgJiYgdGhpcy5tYXhGZWUgIT09IDIpIHsKICAgICAgICByZXR1cm4gdGhpcy5tYXhGZWUgPCB0aGlzLmNhbGN1bGF0ZWRSZWNvbW1lbmRlZEZlZTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE1heEZlZUFuZFN1Ym1pdDsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAwLAogIHJlcXVpcmVkOiB0cnVlCn0pXSwgTWF4RmVlQW5kU3VibWl0LnByb3RvdHlwZSwgInZhbHVlIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogZmFsc2UKfSldLCBNYXhGZWVBbmRTdWJtaXQucHJvdG90eXBlLCAiaGlkZVN1Ym1pdCIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6IGZhbHNlCn0pXSwgTWF4RmVlQW5kU3VibWl0LnByb3RvdHlwZSwgImRpc2FibGVTdWJtaXQiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAwCn0pXSwgTWF4RmVlQW5kU3VibWl0LnByb3RvdHlwZSwgImNhbGN1bGF0ZWRSZWNvbW1lbmRlZEZlZSIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6IDAKfSldLCBNYXhGZWVBbmRTdWJtaXQucHJvdG90eXBlLCAiY2FsY3VsYXRlZEhpZ2hlc3RGZWUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiB0cnVlCn0pXSwgTWF4RmVlQW5kU3VibWl0LnByb3RvdHlwZSwgInNob3dXYXJuaW5ncyIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICAiZGVmYXVsdCI6ICdzZW5kJwp9KV0sIE1heEZlZUFuZFN1Ym1pdC5wcm90b3R5cGUsICJzdWJtaXRCdXR0b25UZXh0Iiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogJ2ludmVydGVkLWJ1dHRvbicKfSldLCBNYXhGZWVBbmRTdWJtaXQucHJvdG90eXBlLCAic3VibWl0QnV0dG9uQ2xhc3NlcyIsIHZvaWQgMCk7CgpNYXhGZWVBbmRTdWJtaXQgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIE1heEZlZVNlbGVjdG9yOiBNYXhGZWVTZWxlY3RvciwKICAgIEZvcm1Sb3c6IEZvcm1Sb3cKICB9Cn0pXSwgTWF4RmVlQW5kU3VibWl0KTsKZXhwb3J0IGRlZmF1bHQgTWF4RmVlQW5kU3VibWl0Ow=="},{"version":3,"sources":["/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAiCA;;AACA,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC,C,CAEA;;AACA,OAAO,cAAP,MAA2B,gDAA3B;AACA,OAAO,OAAP,MAAoB,kCAApB;;AAGA,IAAqB,eAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AA4CI;;;;;;AA5CJ,wBAkDwB;AAChB,aAAO,KAAK,KAAZ;AACH;AAED;;;;AAtDJ;AAAA,sBA0DyB,YA1DzB,EA0DqC;AAC7B,WAAK,KAAL,CAAW,OAAX,EAAoB,YAApB;AACH;AAED;;;;AA9DJ;AAAA;AAAA,wBAiE6B;AACrB,aAAO,KAAK,4BAAZ;AACH;AAED;;;;AArEJ;AAAA;AAAA,wBAwE8C;AACtC,UAAI,KAAK,wBAAL,GAAgC,CAAhC,IAAqC,KAAK,MAAL,KAAgB,CAArD,IAA0D,KAAK,MAAL,KAAgB,CAA9E,EAAiF;AAC7E,eAAO,KAAK,MAAL,GAAc,KAAK,wBAA1B;AACH;;AACD,aAAO,KAAP;AACH;AA7EL;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAK0C,UAAA,CAAA,CAArC,IAAI,CAAC;AAAE,aAAS,CAAX;AAAc,EAAA,QAAQ,EAAE;AAAxB,CAAD,CAAiC,CAAA,E,yBAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAMZ,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,yBAAA,E,YAAA,E,KAAoB,CAApB,CAAA;;AAMA,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,yBAAA,E,eAAA,E,KAAuB,CAAvB,CAAA;;AAKJ,UAAA,CAAA,CAArB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAiB,CAAA,E,yBAAA,E,0BAAA,E,KAAiC,CAAjC,CAAA;;AAKA,UAAA,CAAA,CAArB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAiB,CAAA,E,yBAAA,E,sBAAA,E,KAA6B,CAA7B,CAAA;;AAKG,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAoB,CAAA,E,yBAAA,E,cAAA,E,KAAsB,CAAtB,CAAA;;AAKE,UAAA,CAAA,CAA1B,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAsB,CAAA,E,yBAAA,E,kBAAA,E,KAAyB,CAAzB,CAAA;;AAKW,UAAA,CAAA,CAArC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAiC,CAAA,E,yBAAA,E,qBAAA,E,KAA4B,CAA5B,CAAA;;AA1CrB,eAAe,GAAA,UAAA,CAAA,CADnC,SAAS,CAAC;AAAE,EAAA,UAAU,EAAE;AAAE,IAAA,cAAc,EAAd,cAAF;AAAkB,IAAA,OAAO,EAAP;AAAlB;AAAd,CAAD,CAC0B,CAAA,EAAf,eAAe,CAAf;eAAA,e","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// extenal dependencies\nimport { Component, Vue, Prop } from 'vue-property-decorator';\n\n// child components\nimport MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';\nimport FormRow from '@/components/FormRow/FormRow.vue';\n\n@Component({ components: { MaxFeeSelector, FormRow } })\nexport default class MaxFeeAndSubmit extends Vue {\n    /**\n     * Max fee value, bound to parent v-model\n     * @type {number}\n     */\n    @Prop({ default: 0, required: true }) value: number;\n\n    /**\n     * Whether form submit button is hidden\n     * @type {boolean}\n     */\n    @Prop({ default: false }) hideSubmit: boolean;\n\n    /**\n     * Whether form submit button is disabled\n     * @type {boolean}\n     */\n    @Prop({ default: false }) disableSubmit: boolean;\n\n    /**\n     * Dynamically calculated recommended fee\n     */\n    @Prop({ default: 0 }) calculatedRecommendedFee: number;\n\n    /**\n     * Dynamically calculated highest fee\n     */\n    @Prop({ default: 0 }) calculatedHighestFee: number;\n\n    /**\n     * Whether warnings are visible\n     */\n    @Prop({ default: true }) showWarnings: boolean;\n\n    /**\n     * Submit button text\n     */\n    @Prop({ default: 'send' }) submitButtonText: string;\n\n    /**\n     * Submit button classes\n     */\n    @Prop({ default: 'inverted-button' }) submitButtonClasses: string;\n\n    /**\n     * Get max fee value from the value prop\n     * @readonly\n     * @protected\n     * @type {number}\n     */\n    protected get maxFee(): number {\n        return this.value;\n    }\n\n    /**\n     * Emit chosen max fee value to the parent component\n     * @protected\n     */\n    protected set maxFee(chosenMaxFee) {\n        this.$emit('input', chosenMaxFee);\n    }\n\n    /**\n     * Whether there are any warnings\n     */\n    protected get anyWarnings(): boolean {\n        return this.isFeeLowerThanRecommendedFee;\n    }\n\n    /**\n     * Whether selected fee is lower than recommended fee\n     */\n    protected get isFeeLowerThanRecommendedFee() {\n        if (this.calculatedRecommendedFee > 0 && this.maxFee !== 1 && this.maxFee !== 2) {\n            return this.maxFee < this.calculatedRecommendedFee;\n        }\n        return false;\n    }\n}\n"],"sourceRoot":""}]}