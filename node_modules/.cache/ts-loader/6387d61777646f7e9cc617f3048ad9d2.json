{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/pages/profiles/create-profile/CreateProfileTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/pages/profiles/create-profile/CreateProfileTs.ts","mtime":1606213958977},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL2hvbWUvaGVyby9sYXJlZC13YWxsZXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7ICJAYmFiZWwvaGVscGVycyAtIHR5cGVvZiI7IGlmICh0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09ICJzeW1ib2wiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gImZ1bmN0aW9uIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09ICJmdW5jdGlvbiIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH0KCmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9CgpmdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgewogIGZ1bmN0aW9uIGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsKICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7CiAgICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOwogICAgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7CgogICAgdHJ5IHsKICAgICAgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9IGNhdGNoIChlKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9CgogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksCiAgICAgICAgcmVzdWx0OwoKICAgIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkgewogICAgICB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOwoKICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7CiAgfTsKfQoKZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gIm9iamVjdCIgfHwgdHlwZW9mIGNhbGwgPT09ICJmdW5jdGlvbiIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9CgpmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZCIpOyB9IHJldHVybiBzZWxmOyB9CgpmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9CgppbXBvcnQgeyBfX2F3YWl0ZXIsIF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7Cgp2YXIgQ3JlYXRlUHJvZmlsZVRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKENyZWF0ZVByb2ZpbGVUcywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ3JlYXRlUHJvZmlsZVRzKTsKCiAgZnVuY3Rpb24gQ3JlYXRlUHJvZmlsZVRzKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDcmVhdGVQcm9maWxlVHMpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAvKioKICAgICAqIExpc3Qgb2Ygc3RlcHMKICAgICAqIEB2YXIge3N0cmluZ1tdfQogICAgICovCgogICAgX3RoaXMuU3RlcEJhclRpdGxlTGlzdCA9IFsnY3JlYXRlX3Byb2ZpbGUnLCAnZ2VuZXJhdGVfbW5lbW9uaWMnLCAnYmFja3VwX21uZW1vbmljX3BocmFzZScsICd2ZXJpZnlfTW5lbW9uaWNfcGhyYXNlJywgJ2ZpbmlzaCddOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBIb29rIGNhbGxlZCB3aGVuIHRoZSBwYWdlIGlzIG1vdW50ZWQKICAgKiBAcmV0dXJuIHt2b2lkfQogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKENyZWF0ZVByb2ZpbGVUcywgW3sKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3RlbXBvcmFyeS9pbml0aWFsaXplJyk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Q3VycmVudFN0ZXAiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEN1cnJlbnRTdGVwKCkgewogICAgICBzd2l0Y2ggKHRoaXMuJHJvdXRlLm5hbWUpIHsKICAgICAgICBkZWZhdWx0OgogICAgICAgIGNhc2UgJ3Byb2ZpbGVzLmNyZWF0ZVByb2ZpbGUuaW5mbyc6CiAgICAgICAgICByZXR1cm4gMDsKCiAgICAgICAgY2FzZSAncHJvZmlsZXMuY3JlYXRlUHJvZmlsZS5nZW5lcmF0ZU1uZW1vbmljJzoKICAgICAgICAgIHJldHVybiAxOwoKICAgICAgICBjYXNlICdwcm9maWxlcy5jcmVhdGVQcm9maWxlLnNob3dNbmVtb25pYyc6CiAgICAgICAgICByZXR1cm4gMjsKCiAgICAgICAgY2FzZSAncHJvZmlsZXMuY3JlYXRlUHJvZmlsZS52ZXJpZnlNbmVtb25pYyc6CiAgICAgICAgICByZXR1cm4gMzsKCiAgICAgICAgY2FzZSAncHJvZmlsZXMuY3JlYXRlUHJvZmlsZS5maW5hbGl6ZSc6CiAgICAgICAgICByZXR1cm4gNDsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImdldFN0ZXBDbGFzc05hbWUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN0ZXBDbGFzc05hbWUoaW5kZXgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0Q3VycmVudFN0ZXAoKSA9PSBpbmRleCA/ICdhY3RpdmUnIDogdGhpcy5nZXRDdXJyZW50U3RlcCgpID4gaW5kZXggPyAnZG9uZScgOiAnJzsKICAgIH0KICB9XSk7CgogIHJldHVybiBDcmVhdGVQcm9maWxlVHM7Cn0oVnVlKTsKCkNyZWF0ZVByb2ZpbGVUcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIENyZWF0ZVByb2ZpbGVUcyk7CmV4cG9ydCBkZWZhdWx0IENyZWF0ZVByb2ZpbGVUczs="},{"version":3,"sources":["/home/hero/lared-wallet/src/views/pages/profiles/create-profile/CreateProfileTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;;AAGA,IAAqB,eAArB;AAAA;;AAAA;;AAAA,6BAAA;AAAA;;AAAA;;;AACI;;;;;AAIO,UAAA,gBAAA,GAAmB,CAAC,gBAAD,EAAmB,mBAAnB,EAAwC,wBAAxC,EAAkE,wBAAlE,EAA4F,QAA5F,CAAnB;AALX;AAkCC;AA3BG;;;;;;AAPJ;AAAA;AAAA,8BAWiB;;;;;;;AACT,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,sBAArB,CAAN;;;;;;;;;AACH;AAbL;AAAA;AAAA,qCAeyB;AACjB,cAAQ,KAAK,MAAL,CAAY,IAApB;AACI;AACA,aAAK,6BAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,yCAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,qCAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,uCAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,iCAAL;AACI,iBAAO,CAAP;AAXR;AAaH;AA7BL;AAAA;AAAA,qCA+B4B,KA/B5B,EA+ByC;AACjC,aAAO,KAAK,cAAL,MAAyB,KAAzB,GAAiC,QAAjC,GAA4C,KAAK,cAAL,KAAwB,KAAxB,GAAgC,MAAhC,GAAyC,EAA5F;AACH;AAjCL;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAAqB,eAAe,GAAA,UAAA,CAAA,CADnC,SACmC,CAAA,EAAf,eAAe,CAAf;eAAA,e","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class CreateProfileTs extends Vue {\n    /**\n     * List of steps\n     * @var {string[]}\n     */\n    public StepBarTitleList = ['create_profile', 'generate_mnemonic', 'backup_mnemonic_phrase', 'verify_Mnemonic_phrase', 'finish'];\n\n    /**\n     * Hook called when the page is mounted\n     * @return {void}\n     */\n    async mounted() {\n        await this.$store.dispatch('temporary/initialize');\n    }\n\n    public getCurrentStep(): number {\n        switch (this.$route.name) {\n            default:\n            case 'profiles.createProfile.info':\n                return 0;\n            case 'profiles.createProfile.generateMnemonic':\n                return 1;\n            case 'profiles.createProfile.showMnemonic':\n                return 2;\n            case 'profiles.createProfile.verifyMnemonic':\n                return 3;\n            case 'profiles.createProfile.finalize':\n                return 4;\n        }\n    }\n\n    public getStepClassName(index: number): string {\n        return this.getCurrentStep() == index ? 'active' : this.getCurrentStep() > index ? 'done' : '';\n    }\n}\n"],"sourceRoot":""}]}