{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/index.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/index.ts","mtime":1611927227447},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport AppInfoStore from '@/store/AppInfo';\nimport DatabaseStore from '@/store/Database';\nimport NetworkStore from '@/store/Network';\nimport ProfileStore from '@/store/Profile';\nimport AccountStore from '@/store/Account';\nimport DiagnosticStore from '@/store/Diagnostic';\nimport NotificationStore from '@/store/Notification';\nimport TemporaryStore from '@/store/Temporary';\nimport MetadataStore from '@/store/Metadata';\nimport MosaicStore from '@/store/Mosaic';\nimport BlockStore from '@/store/Block';\nimport NamespaceStore from '@/store/Namespace';\nimport TransactionStore from '@/store/Transaction';\nimport StatisticsStore from '@/store/Statistics';\nimport CommunityStore from '@/store/Community';\nimport HarvestingStore from '@/store/Harvesting';\nimport RestrictionStore from '@/store/Restriction';\nimport { onPeerConnection } from '@/store/plugins/onPeerConnection';\n// use AwaitLock for initialization routines\nimport { AwaitLock } from '@/store/AwaitLock';\nimport AddressBook from '@/store/AddressBook';\nimport AggregateTransaction from '@/store/AggregateTransaction';\n\nconst Lock = AwaitLock.create();\n\nVue.use(Vuex);\n\n/**\n * Application Store\n *\n * This store initializes peer connection\n */\nconst AppStore = new Vuex.Store({\n    strict: false,\n    modules: {\n        app: AppInfoStore,\n        db: DatabaseStore,\n        network: NetworkStore,\n        profile: ProfileStore,\n        account: AccountStore,\n        diagnostic: DiagnosticStore,\n        notification: NotificationStore,\n        temporary: TemporaryStore,\n        metadata: MetadataStore,\n        mosaic: MosaicStore,\n        namespace: NamespaceStore,\n        transaction: TransactionStore,\n        statistics: StatisticsStore,\n        community: CommunityStore,\n        block: BlockStore,\n        addressBook: AddressBook,\n        aggregateTransaction: AggregateTransaction,\n        harvesting: HarvestingStore,\n        restriction: RestrictionStore,\n    },\n    plugins: [onPeerConnection],\n    actions: {\n        async initialize({ dispatch, getters }) {\n            const callback = async () => {\n                await dispatch('app/initialize');\n                await dispatch('db/initialize');\n                await dispatch('diagnostic/initialize');\n                await dispatch('notification/initialize');\n                // Network init must happen before Mosaic init because network currency Ids\n                // are supplied to MosaicService from the network configuration\n                await dispatch('network/initialize');\n                await dispatch('metadata/initialize');\n                await dispatch('mosaic/initialize');\n                await dispatch('namespace/initialize');\n                await dispatch('transaction/initialize');\n                await dispatch('addressBook/initialize');\n                await dispatch('harvesting/initialize');\n                await dispatch('restriction/initialize');\n            };\n\n            // aquire async lock until initialized\n            await Lock.initialize(callback, { getters });\n        },\n        // Uninitialize the stores (call on app destroyed).\n        async uninitialize({ dispatch }) {\n            await Promise.all([\n                dispatch('app/uninitialize'),\n                dispatch('network/uninitialize'),\n                dispatch('mosaic/uninitialize'),\n                dispatch('transaction/uninitialize'),\n                dispatch('profile/uninitialize'),\n                dispatch('account/uninitialize'),\n                dispatch('metadata/uninitialize'),\n                dispatch('namespace/uninitialize'),\n                dispatch('notification/uninitialize'),\n                dispatch('temporary/uninitialize'),\n                dispatch('diagnostic/uninitialize'),\n                dispatch('harvesting/uninitialize'),\n                dispatch('restriction/uninitialize'),\n            ]);\n        },\n    },\n});\n\nexport default AppStore;\n"],"sourceRoot":""}]}