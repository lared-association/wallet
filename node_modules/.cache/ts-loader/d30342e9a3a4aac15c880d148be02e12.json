{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/services/NamespaceService.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/services/NamespaceService.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgTmFtZXNwYWNlTW9kZWwgfSBmcm9tICdAL2NvcmUvZGF0YWJhc2UvZW50aXRpZXMvTmFtZXNwYWNlTW9kZWwnOwppbXBvcnQgeyBvZiB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBmbGF0TWFwLCBtYXAsIHRhcCwgY29tYmluZUFsbCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKaW1wb3J0IHsgT2JzZXJ2YWJsZUhlbHBlcnMgfSBmcm9tICdAL2NvcmUvdXRpbHMvT2JzZXJ2YWJsZUhlbHBlcnMnOwppbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7CmltcG9ydCB7IFRpbWVIZWxwZXJzIH0gZnJvbSAnQC9jb3JlL3V0aWxzL1RpbWVIZWxwZXJzJzsKaW1wb3J0IHsgTmFtZXNwYWNlTW9kZWxTdG9yYWdlIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL3N0b3JhZ2UvTmFtZXNwYWNlTW9kZWxTdG9yYWdlJzsKLyoqCiAqIFRoZSBzZXJ2aWNlIGluIGNoYXJnZSBvZiBsb2FkaW5nIGFuZCBjYWNoaW5nIGFueXRoaW5nIHJlbGF0ZWQgdG8gTmFtZXBzYWNlcyBmcm9tIFJlc3QuCiAqIFRoZSBjYWNoZSBpcyBkb25lIGJ5IHN0b3JpbmcgdGhlIHBheWxvYWRzIGluIFNpbXBsZU9iamVjdFN0b3JhZ2UuCiAqLwoKZXhwb3J0IHZhciBOYW1lc3BhY2VTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBOYW1lc3BhY2VTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5hbWVzcGFjZVNlcnZpY2UpOwoKICAgIC8qKgogICAgICogVGhlIG5hbWVzcGFjZSBpbmZvcm1hdGlvbiBsb2NhbCBjYWNoZS4KICAgICAqLwogICAgdGhpcy5uYW1lc3BhY2VNb2RlbFN0b3JhZ2UgPSBOYW1lc3BhY2VNb2RlbFN0b3JhZ2UuSU5TVEFOQ0U7CiAgfQogIC8qKgogICAqIFRoaXMgbWV0aG9kIGxvYWRzIGFuZCBjYWNoZXMgdGhlIG5hbWVzcGFjZSBpbmZvcm1hdGlvbiBmb3IgdGhlIGdpdmVuIGFjY291bnRzLgogICAqIFRoZSByZXR1cm5lZCBPYnNlcnZhYmxlIHdpbGwgYW5ub3VuY2UgdGhlIGNhY2hlZCBpbmZvcm1hdGlvbiBmaXJzdCwgdGhlbiB0aGUgcmVzdCByZXR1cm5lZAogICAqIGluZm9ybWF0aW9uIChpZiBwb3NzaWJsZSkuCiAgICoKICAgKiBAcGFyYW0gcmVwb3NpdG9yeUZhY3RvcnkgdGhlIHJlcG9zaXRvcnkgZmFjdG9yeQogICAqIEBwYXJhbSBnZW5lcmF0aW9uSGFzaCB0aGUgY3VycmVudCBuZXR3b3JrIGdlbmVyYXRpb24gaGFzaC4KICAgKiBAcGFyYW0gYWRkcmVzc2VzIHRoZSBjdXJyZW50IGFkZHJlc3Nlcy4KICAgKi8KCgogIF9jcmVhdGVDbGFzcyhOYW1lc3BhY2VTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0TmFtZXNwYWNlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TmFtZXNwYWNlcyhyZXBvc2l0b3J5RmFjdG9yeSwgZ2VuZXJhdGlvbkhhc2gsIGFkZHJlc3NlcykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKCFhZGRyZXNzZXMubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIG9mKFtdKTsKICAgICAgfQoKICAgICAgdmFyIG5hbWVzcGFjZU1vZGVsTGlzdCA9IHRoaXMubmFtZXNwYWNlTW9kZWxTdG9yYWdlLmdldChnZW5lcmF0aW9uSGFzaCkgfHwgW107CiAgICAgIHZhciBuYW1lc3BhY2VSZXBvc2l0b3J5ID0gcmVwb3NpdG9yeUZhY3RvcnkuY3JlYXRlTmFtZXNwYWNlUmVwb3NpdG9yeSgpOwogICAgICByZXR1cm4gYWRkcmVzc2VzLm1hcChmdW5jdGlvbiAoYWRkcmVzcykgewogICAgICAgIHJldHVybiBuYW1lc3BhY2VSZXBvc2l0b3J5LnNlYXJjaCh7CiAgICAgICAgICBvd25lckFkZHJlc3M6IGFkZHJlc3MKICAgICAgICB9KS5waXBlKGZsYXRNYXAoZnVuY3Rpb24gKG5hbWVzcGFjZUluZm9zKSB7CiAgICAgICAgICByZXR1cm4gbmFtZXNwYWNlUmVwb3NpdG9yeS5nZXROYW1lc3BhY2VzTmFtZXMobmFtZXNwYWNlSW5mb3MuZGF0YS5tYXAoZnVuY3Rpb24gKGluZm8pIHsKICAgICAgICAgICAgcmV0dXJuIGluZm8uaWQ7CiAgICAgICAgICB9KSkucGlwZShtYXAoZnVuY3Rpb24gKG5hbWVzKSB7CiAgICAgICAgICAgIHJldHVybiBuYW1lc3BhY2VJbmZvcy5kYXRhLm1hcChmdW5jdGlvbiAobmFtZXNwYWNlSW5mbykgewogICAgICAgICAgICAgIHZhciByZWZlcmVuY2UgPSBfLmZpcnN0KG5hbWVzLmZpbHRlcihmdW5jdGlvbiAobikgewogICAgICAgICAgICAgICAgcmV0dXJuIG4ubmFtZXNwYWNlSWQudG9IZXgoKSA9PT0gbmFtZXNwYWNlSW5mby5pZC50b0hleCgpOwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBOYW1lc3BhY2VNb2RlbChuYW1lc3BhY2VJbmZvLCBOYW1lc3BhY2VTZXJ2aWNlLmdldEZ1bGxOYW1lRnJvbU5hbWVzcGFjZU5hbWVzKHJlZmVyZW5jZSwgbmFtZXMpKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KSk7CiAgICAgICAgfSkpLnBpcGUodGFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMubmFtZXNwYWNlTW9kZWxTdG9yYWdlLnNldChnZW5lcmF0aW9uSGFzaCwgZCk7CiAgICAgICAgfSksIE9ic2VydmFibGVIZWxwZXJzLmRlZmF1bHRGaXJzdChuYW1lc3BhY2VNb2RlbExpc3QpKTsKICAgICAgfSkucmVkdWNlKGZ1bmN0aW9uIChwcmV2aW91cykgewogICAgICAgIHJldHVybiBwcmV2aW91cy5waXBlKGNvbWJpbmVBbGwoKSk7CiAgICAgIH0pOwogICAgfQogIH1dLCBbewogICAga2V5OiAiZ2V0RXhwaXJhdGlvbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RXhwaXJhdGlvbihuZXR3b3JrQ29uZmlndXJhdGlvbiwgY3VycmVudEhlaWdodCwgZW5kSGVpZ2h0KSB7CiAgICAgIHZhciBibG9ja0dlbmVyYXRpb25UYXJnZXRUaW1lID0gbmV0d29ya0NvbmZpZ3VyYXRpb24uYmxvY2tHZW5lcmF0aW9uVGFyZ2V0VGltZTsKICAgICAgdmFyIG5hbWVzcGFjZUdyYWNlUGVyaW9kQmxvY2tzID0gTWF0aC5mbG9vcihuZXR3b3JrQ29uZmlndXJhdGlvbi5uYW1lc3BhY2VHcmFjZVBlcmlvZER1cmF0aW9uIC8gYmxvY2tHZW5lcmF0aW9uVGFyZ2V0VGltZSk7CiAgICAgIHZhciBleHBpcmVkID0gY3VycmVudEhlaWdodCA+IGVuZEhlaWdodCAtIG5hbWVzcGFjZUdyYWNlUGVyaW9kQmxvY2tzOwogICAgICB2YXIgZXhwaXJlZEluID0gZW5kSGVpZ2h0IC0gbmFtZXNwYWNlR3JhY2VQZXJpb2RCbG9ja3MgLSBjdXJyZW50SGVpZ2h0OwogICAgICB2YXIgZGVsZXRlZEluID0gZW5kSGVpZ2h0IC0gY3VycmVudEhlaWdodDsKICAgICAgdmFyIGV4cGlyYXRpb24gPSBleHBpcmVkID8gVGltZUhlbHBlcnMuZHVyYXRpb25Ub1JlbGF0aXZlVGltZShleHBpcmVkSW4sIGJsb2NrR2VuZXJhdGlvblRhcmdldFRpbWUpIDogVGltZUhlbHBlcnMuZHVyYXRpb25Ub1JlbGF0aXZlVGltZShkZWxldGVkSW4sIGJsb2NrR2VuZXJhdGlvblRhcmdldFRpbWUpOwogICAgICByZXR1cm4gewogICAgICAgIGV4cGlyZWQ6IGV4cGlyZWQsCiAgICAgICAgZXhwaXJhdGlvbjogZXhwaXJhdGlvbgogICAgICB9OwogICAgfQogICAgLyoqCiAgICAgKiBDb25zdHJ1Y3RzIGEgbmFtZXNwYWNlIGZ1bGxOYW1lIGZyb20gbmFtZXNwYWNlIG5hbWVzCiAgICAgKiBAc3RhdGljCiAgICAgKiBAcGFyYW0ge05hbWVzcGFjZU5hbWV9IHJlZmVyZW5jZQogICAgICogQHBhcmFtIHtOYW1lc3BhY2VOYW1lW119IG5hbWVzcGFjZU5hbWVzCiAgICAgKiBAcmV0dXJucyB0aGUgZnVsbCBuYW1lc3BhY2UgbmFtZS4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRGdWxsTmFtZUZyb21OYW1lc3BhY2VOYW1lcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RnVsbE5hbWVGcm9tTmFtZXNwYWNlTmFtZXMocmVmZXJlbmNlLCBuYW1lc3BhY2VOYW1lcykgewogICAgICBpZiAoIXJlZmVyZW5jZSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgaWYgKCFyZWZlcmVuY2UucGFyZW50SWQpIHsKICAgICAgICByZXR1cm4gcmVmZXJlbmNlLm5hbWU7CiAgICAgIH0KCiAgICAgIHZhciBwYXJlbnQgPSBuYW1lc3BhY2VOYW1lcy5maW5kKGZ1bmN0aW9uIChuYW1lc3BhY2VOYW1lKSB7CiAgICAgICAgcmV0dXJuIG5hbWVzcGFjZU5hbWUubmFtZXNwYWNlSWQudG9IZXgoKSA9PT0gcmVmZXJlbmNlLnBhcmVudElkLnRvSGV4KCk7CiAgICAgIH0pOwoKICAgICAgaWYgKHBhcmVudCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIHJlZmVyZW5jZS5uYW1lOwogICAgICB9CgogICAgICB2YXIgcGFyZW50TmFtZSA9IE5hbWVzcGFjZVNlcnZpY2UuZ2V0RnVsbE5hbWVGcm9tTmFtZXNwYWNlTmFtZXMocGFyZW50LCBuYW1lc3BhY2VOYW1lcyk7CiAgICAgIHJldHVybiAiIi5jb25jYXQocGFyZW50TmFtZSwgIi4iKS5jb25jYXQocmVmZXJlbmNlLm5hbWUpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE5hbWVzcGFjZVNlcnZpY2U7Cn0oKTs="},{"version":3,"sources":["/home/hero/lared-wallet/src/services/NamespaceService.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { NamespaceModel } from '@/core/database/entities/NamespaceModel';\nimport { Address, NamespaceName, RepositoryFactory } from 'symbol-sdk';\nimport { Observable, of } from 'rxjs';\nimport { flatMap, map, tap, combineAll } from 'rxjs/operators';\nimport { ObservableHelpers } from '@/core/utils/ObservableHelpers';\nimport * as _ from 'lodash';\nimport { TimeHelpers } from '@/core/utils/TimeHelpers';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\nimport { NamespaceModelStorage } from '@/core/database/storage/NamespaceModelStorage';\n\n/**\n * The service in charge of loading and caching anything related to Namepsaces from Rest.\n * The cache is done by storing the payloads in SimpleObjectStorage.\n */\nexport class NamespaceService {\n    /**\n     * The namespace information local cache.\n     */\n    private readonly namespaceModelStorage = NamespaceModelStorage.INSTANCE;\n\n    /**\n     * This method loads and caches the namespace information for the given accounts.\n     * The returned Observable will announce the cached information first, then the rest returned\n     * information (if possible).\n     *\n     * @param repositoryFactory the repository factory\n     * @param generationHash the current network generation hash.\n     * @param addresses the current addresses.\n     */\n    public getNamespaces(repositoryFactory: RepositoryFactory, generationHash: string, addresses: Address[]): Observable<NamespaceModel[]> {\n        if (!addresses.length) {\n            return of([]);\n        }\n\n        const namespaceModelList = this.namespaceModelStorage.get(generationHash) || [];\n        const namespaceRepository = repositoryFactory.createNamespaceRepository();\n\n        return addresses\n            .map(\n                (address: Address): Observable<NamespaceModel[]> => {\n                    return namespaceRepository\n                        .search({ ownerAddress: address })\n                        .pipe(\n                            flatMap((namespaceInfos) => {\n                                return namespaceRepository.getNamespacesNames(namespaceInfos.data.map((info) => info.id)).pipe(\n                                    map((names) => {\n                                        return namespaceInfos.data.map((namespaceInfo) => {\n                                            const reference = _.first(\n                                                names.filter((n) => n.namespaceId.toHex() === namespaceInfo.id.toHex()),\n                                            );\n                                            return new NamespaceModel(\n                                                namespaceInfo,\n                                                NamespaceService.getFullNameFromNamespaceNames(reference, names),\n                                            );\n                                        });\n                                    }),\n                                );\n                            }),\n                        )\n                        .pipe(\n                            tap((d: NamespaceModel[]) => this.namespaceModelStorage.set(generationHash, d)),\n                            ObservableHelpers.defaultFirst(namespaceModelList),\n                        );\n                },\n            )\n            .reduce((previous) => previous.pipe(combineAll()));\n    }\n\n    public static getExpiration(\n        networkConfiguration: NetworkConfigurationModel,\n        currentHeight: number,\n        endHeight: number,\n    ): { expiration: string; expired: boolean } {\n        const blockGenerationTargetTime = networkConfiguration.blockGenerationTargetTime;\n        const namespaceGracePeriodBlocks = Math.floor(networkConfiguration.namespaceGracePeriodDuration / blockGenerationTargetTime);\n        const expired = currentHeight > endHeight - namespaceGracePeriodBlocks;\n        const expiredIn = endHeight - namespaceGracePeriodBlocks - currentHeight;\n        const deletedIn = endHeight - currentHeight;\n        const expiration = expired\n            ? TimeHelpers.durationToRelativeTime(expiredIn, blockGenerationTargetTime)\n            : TimeHelpers.durationToRelativeTime(deletedIn, blockGenerationTargetTime);\n        return { expired, expiration };\n    }\n\n    /**\n     * Constructs a namespace fullName from namespace names\n     * @static\n     * @param {NamespaceName} reference\n     * @param {NamespaceName[]} namespaceNames\n     * @returns the full namespace name.\n     */\n    public static getFullNameFromNamespaceNames(reference: NamespaceName, namespaceNames: NamespaceName[]): string {\n        if (!reference) {\n            return '';\n        }\n        if (!reference.parentId) {\n            return reference.name;\n        }\n\n        const parent = namespaceNames.find((namespaceName) => namespaceName.namespaceId.toHex() === reference.parentId.toHex());\n        if (parent === undefined) {\n            return reference.name;\n        }\n        const parentName = NamespaceService.getFullNameFromNamespaceNames(parent, namespaceNames);\n        return `${parentName}.${reference.name}`;\n    }\n}\n"],"sourceRoot":""}]}