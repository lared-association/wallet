{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeDisplay/QRCodeDisplayTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeDisplay/QRCodeDisplayTs.ts","mtime":1611927202869},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKaW1wb3J0IHsgVnVlLCBDb21wb25lbnQsIFByb3AgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgUVJDb2RlIH0gZnJvbSAnc3ltYm9sLXFyLWxpYnJhcnknOwppbXBvcnQgeyBvZiB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBwbHVjaywgY29uY2F0TWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwppbXBvcnQgeyBVSUhlbHBlcnMgfSBmcm9tICdAL2NvcmUvdXRpbHMvVUlIZWxwZXJzJzsgLy8gcmVzb3VyY2VzCi8vIEB0cy1pZ25vcmUKCmltcG9ydCBmYWlsdXJlSWNvbiBmcm9tICdAL3ZpZXdzL3Jlc291cmNlcy9pbWcvbW9uaXRvci9mYWlsdXJlLnBuZyc7Cgp2YXIgUVJDb2RlRGlzcGxheVRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKFFSQ29kZURpc3BsYXlUcywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUVJDb2RlRGlzcGxheVRzKTsKCiAgZnVuY3Rpb24gUVJDb2RlRGlzcGxheVRzKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFFSQ29kZURpc3BsYXlUcyk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFFSQ29kZURpc3BsYXlUcywgW3sKICAgIGtleTogImNvcHlBc1RleHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvcHlBc1RleHQoKSB7CiAgICAgIHZhciBfYTsKCiAgICAgIFVJSGVscGVycy5jb3B5VG9DbGlwYm9hcmQoKF9hID0gdGhpcy5xckNvZGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50b0pTT04oKSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUVJDb2RlRGlzcGxheVRzOwp9KFZ1ZSk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiBudWxsLAogIHR5cGU6IE9iamVjdAp9KV0sIFFSQ29kZURpc3BsYXlUcy5wcm90b3R5cGUsICJxckNvZGUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgZGVmYXVsdDogJycKfSldLCBRUkNvZGVEaXNwbGF5VHMucHJvdG90eXBlLCAiaGVhZGVyIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIGRlZmF1bHQ6ICdzeW1ib2xfd2FsbGV0X3FyY29kZS5wbmcnCn0pXSwgUVJDb2RlRGlzcGxheVRzLnByb3RvdHlwZSwgImRvd25sb2FkTmFtZSIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiAncXJfY29kZScKfSldLCBRUkNvZGVEaXNwbGF5VHMucHJvdG90eXBlLCAiYWx0Iiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIGRlZmF1bHQ6IGZhbHNlCn0pXSwgUVJDb2RlRGlzcGxheVRzLnByb3RvdHlwZSwgInNob3dEb3dubG9hZCIsIHZvaWQgMCk7CgpRUkNvZGVEaXNwbGF5VHMgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIHN1YnNjcmlwdGlvbnM6IGZ1bmN0aW9uIHN1YnNjcmlwdGlvbnMoKSB7CiAgICB2YXIgcXJDb2RlQmFzZTY0JCA9IHRoaXMuJHdhdGNoQXNPYnNlcnZhYmxlKCdxckNvZGUnLCB7CiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfSkucGlwZShwbHVjaygnbmV3VmFsdWUnKSwgY29uY2F0TWFwKGZ1bmN0aW9uIChhcmdzKSB7CiAgICAgIHJldHVybiBhcmdzIGluc3RhbmNlb2YgUVJDb2RlID8gYXJncy50b0Jhc2U2NCgpIDogb2YoZmFpbHVyZUljb24pOwogICAgfSkpOwogICAgcmV0dXJuIHsKICAgICAgcXJDb2RlQmFzZTY0JDogcXJDb2RlQmFzZTY0JAogICAgfTsKICB9Cn0pXSwgUVJDb2RlRGlzcGxheVRzKTsKZXhwb3J0IGRlZmF1bHQgUVJDb2RlRGlzcGxheVRzOw=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeDisplay/QRCodeDisplayTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,EAAT,QAA+B,MAA/B;AAEA,SAAS,KAAT,EAAgB,SAAhB,QAAiC,gBAAjC;AACA,SAAS,SAAT,QAA0B,wBAA1B,C,CACA;AACA;;AACA,OAAO,WAAP,MAAwB,2CAAxB;;AAaA,IAAqB,eAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAiCqB;;;AACb,MAAA,SAAS,CAAC,eAAV,CAAyB,CAAA,EAAA,GAAC,KAAK,MAAN,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,MAAF,EAArC;AACH;AAnCL;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAKI,UAAA,CAAA,CAJC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE,IADP;AAEF,EAAA,IAAI,EAAE;AAFJ,CAAD,CAIL,CAAA,E,yBAAA,E,QAAA,E,KAAsB,CAAtB,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,yBAAA,E,QAAA,E,KAAsB,CAAtB,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,yBAAA,E,cAAA,E,KAA4B,CAA5B,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,yBAAA,E,KAAA,E,KAAmB,CAAnB,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,yBAAA,E,cAAA,E,KAA6B,CAA7B,CAAA;;AAzBiB,eAAe,GAAA,UAAA,CAAA,CAXnC,SAAS,CAAC;AACP,EAAA,aADO,2BACM;AACT,QAAM,aAAa,GAAG,KAAK,kBAAL,CAAwB,QAAxB,EAAkC;AACpD,MAAA,SAAS,EAAE;AADyC,KAAlC,EAEnB,IAFmB,CAGlB,KAAK,CAAC,UAAD,CAHa,EAIlB,SAAS,CAAC,UAAC,IAAD;AAAA,aAAW,IAAI,YAAY,MAAhB,GAAyB,IAAI,CAAC,QAAL,EAAzB,GAA2C,EAAE,CAAC,WAAD,CAAxD;AAAA,KAAD,CAJS,CAAtB;AAMA,WAAO;AAAE,MAAA,aAAa,EAAb;AAAF,KAAP;AACH;AATM,CAAD,CAW0B,CAAA,EAAf,eAAe,CAAf;eAAA,e","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { QRCode } from 'symbol-qr-library';\nimport { of, Observable } from 'rxjs';\nimport { PropType } from 'vue/types/options';\nimport { pluck, concatMap } from 'rxjs/operators';\nimport { UIHelpers } from '@/core/utils/UIHelpers';\n// resources\n// @ts-ignore\nimport failureIcon from '@/views/resources/img/monitor/failure.png';\n\n@Component({\n    subscriptions() {\n        const qrCodeBase64$ = this.$watchAsObservable('qrCode', {\n            immediate: true,\n        }).pipe(\n            pluck('newValue'),\n            concatMap((args) => (args instanceof QRCode ? args.toBase64() : of(failureIcon))),\n        );\n        return { qrCodeBase64$ };\n    },\n})\nexport default class QRCodeDisplayTs extends Vue {\n    @Prop({\n        default: null,\n        type: Object as PropType<QRCode>,\n    })\n    public qrCode: QRCode;\n\n    @Prop({\n        default: '',\n    })\n    public header: string;\n\n    @Prop({\n        default: 'symbol_wallet_qrcode.png',\n    })\n    public downloadName: string;\n\n    @Prop({\n        default: 'qr_code',\n    })\n    public alt: string;\n\n    @Prop({\n        default: false,\n    })\n    public showDownload: boolean;\n\n    /**\n     * base64 representation of qrcode\n     * @type Obervable<string>\n     */\n    public qrCodeBase64$: Observable<string>;\n\n    public copyAsText() {\n        UIHelpers.copyToClipboard(this.qrCode?.toJSON());\n    }\n}\n"],"sourceRoot":""}]}