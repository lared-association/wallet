{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormProfileCreation/FormProfileCreationTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormProfileCreation/FormProfileCreationTs.ts","mtime":1611927204878},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormProfileCreation/FormProfileCreationTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { Password } from 'symbol-sdk';\n// internal dependencies\nimport { ValidationRuleset } from '@/core/validation/ValidationRuleset';\nimport { NotificationType } from '@/core/utils/NotificationType';\nimport { ProfileService } from '@/services/ProfileService';\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\n// child components\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport FormWrapper from '@/components/FormWrapper/FormWrapper.vue';\n// @ts-ignore\nimport FormRow from '@/components/FormRow/FormRow.vue';\nimport { NetworkTypeHelper } from '@/core/utils/NetworkTypeHelper';\nimport { FilterHelpers } from '@/core/utils/FilterHelpers';\n\n/// end-region custom types\n\n@Component({\n    components: {\n        ValidationObserver,\n        ValidationProvider,\n        ErrorTooltip,\n        FormWrapper,\n        FormRow,\n    },\n    computed: {\n        ...mapGetters({\n            generationHash: 'network/generationHash',\n            currentProfile: 'profile/currentProfile',\n        }),\n    },\n})\nexport class FormProfileCreationTs extends Vue {\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {string}\n     */\n    public currentProfile: ProfileModel;\n\n    /**\n     * Currently active network type\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * Accounts repository\n     * @var {ProfileService}\n     */\n    public accountService = new ProfileService();\n\n    /**\n     * Validation rules\n     * @var {ValidationRuleset}\n     */\n    public validationRules = ValidationRuleset;\n\n    /**\n     * Form fields\n     * @var {Object}\n     */\n    public formItems = {\n        profileName: '',\n        password: '',\n        passwordAgain: '',\n        hint: '',\n        networkType: this.$store.getters['network/networkType'],\n    };\n\n    /**\n     * Network types\n     * @var {NetworkNodeEntry[]}\n     */\n    public networkTypeList = NetworkTypeHelper.networkTypeList;\n\n    /**\n     * Type the ValidationObserver refs\n     * @type {{\n     *     observer: InstanceType<typeof ValidationObserver>\n     *   }}\n     */\n    public $refs!: {\n        observer: InstanceType<typeof ValidationObserver>;\n    };\n\n    /// region computed properties getter/setter\n    get nextPage() {\n        return this.$route.meta.nextPage;\n    }\n\n    /// end-region computed properties getter/setter\n\n    /**\n     * Submit action, validates form and creates account in storage\n     * @return {void}\n     */\n    public submit() {\n        // @VEE\n        this.persistAccountAndContinue();\n        this.resetValidations();\n    }\n\n    /**\n     *  resets form validation\n     */\n\n    public resetValidations(): void {\n        this.$refs && this.$refs.observer && this.$refs.observer.reset();\n    }\n\n    /**\n     * Persist created account and redirect to next step\n     * @return {void}\n     */\n    private persistAccountAndContinue() {\n        // -  password stored as hash (never plain.)\n        const passwordHash = ProfileService.getPasswordHash(new Password(this.formItems.password));\n\n        const account: ProfileModel = {\n            profileName: this.formItems.profileName,\n            accounts: [],\n            seed: '',\n            password: passwordHash,\n            hint: this.formItems.hint,\n            networkType: this.formItems.networkType,\n            generationHash: this.generationHash,\n            termsAndConditionsApproved: false,\n        };\n        // use repository for storage\n        this.accountService.saveProfile(account);\n\n        // execute store actions\n        this.$store.dispatch('profile/SET_CURRENT_PROFILE', account);\n        this.$store.dispatch('temporary/SET_PASSWORD', this.formItems.password);\n        this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);\n\n        // flush and continue\n        this.$router.push({ name: this.nextPage });\n    }\n\n    /**\n     * filter tags\n     */\n    public stripTagsProfile() {\n        this.formItems.profileName = FilterHelpers.stripFilter(this.formItems.profileName);\n        this.formItems.hint = FilterHelpers.stripFilter(this.formItems.hint);\n    }\n}\n"],"sourceRoot":""}]}