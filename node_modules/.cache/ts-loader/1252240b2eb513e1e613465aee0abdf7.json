{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicAmountDisplay/MosaicAmountDisplayTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicAmountDisplay/MosaicAmountDisplayTs.ts","mtime":1611927202334},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicAmountDisplay/MosaicAmountDisplayTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { mapGetters } from 'vuex';\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { MosaicId, NamespaceId } from 'symbol-sdk';\n// internal dependencies\n// configuration\n// child components\n// @ts-ignore\nimport AmountDisplay from '@/components/AmountDisplay/AmountDisplay.vue';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\nimport { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\n@Component({\n    components: { AmountDisplay },\n    computed: {\n        ...mapGetters({\n            mosaics: 'mosaic/mosaics',\n            networkCurrency: 'mosaic/networkCurrency',\n            networkConfiguration: 'network/networkConfiguration',\n        }),\n    },\n})\nexport class MosaicAmountDisplayTs extends Vue {\n    @Prop({\n        default: null,\n    })\n    id: MosaicId | NamespaceId;\n\n    @Prop({\n        default: null,\n    })\n    relativeAmount: number;\n\n    @Prop({\n        default: null,\n    })\n    absoluteAmount: number;\n\n    @Prop({\n        default: 'green',\n    })\n    color: 'red' | 'green';\n\n    @Prop({\n        default: 'normal',\n    })\n    size: 'normal' | 'smaller' | 'bigger' | 'biggest';\n\n    @Prop({\n        default: false,\n    })\n    showTicker: false;\n\n    private mosaics: MosaicModel[];\n\n    private networkCurrency: NetworkCurrencyModel;\n\n    private networkConfiguration: NetworkConfigurationModel;\n\n    /// region computed properties getter/setter\n\n    private useNetwork(): boolean {\n        if (!this.id) {\n            return !!this.networkCurrency;\n        }\n        if (this.networkCurrency && this.id.toHex() === this.networkCurrency.mosaicIdHex) {\n            return true;\n        }\n        if (this.networkCurrency && this.id.toHex() === this.networkCurrency.namespaceIdHex) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Mosaic divisibility from database\n     * @return {number}\n     */\n    protected get divisibility(): number {\n        if (this.useNetwork()) {\n            return this.networkCurrency.divisibility;\n        }\n        // TODO improve how to resolve the mosaic id when the known value is a namespace id.\n        // Note that if the transaction is old, the namespace id of the mosaic may have been expired!\n        const mosaic = this.mosaics.find((m) => m.mosaicIdHex === this.id.toHex());\n        return mosaic ? mosaic.divisibility : this.networkConfiguration.maxMosaicDivisibility;\n    }\n\n    public get amount(): number {\n        if (this.absoluteAmount) {\n            return this.absoluteAmount / Math.pow(10, this.divisibility);\n        } else {\n            return this.relativeAmount || 0;\n        }\n    }\n\n    public get ticker(): string {\n        if (!this.showTicker) {\n            return '';\n        }\n\n        if (this.useNetwork()) {\n            return this.networkCurrency.ticker || '';\n        }\n\n        const mosaic = this.mosaics.find((m) => m.mosaicIdHex === this.id.toHex());\n        return (mosaic && mosaic.name) || this.id.toHex();\n    }\n\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}