{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/services/AssetTableService/MetadataTableService.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/services/AssetTableService/MetadataTableService.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KLy8gaW50ZXJuYWwgZGVwZW5kZW5jaWVzCmltcG9ydCB7IEFzc2V0VGFibGVTZXJ2aWNlIH0gZnJvbSAnLi9Bc3NldFRhYmxlU2VydmljZSc7CmV4cG9ydCB2YXIgTWV0YWRhdGFUYWJsZVNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Bc3NldFRhYmxlU2VydmljZSkgewogIF9pbmhlcml0cyhNZXRhZGF0YVRhYmxlU2VydmljZSwgX0Fzc2V0VGFibGVTZXJ2aWNlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNZXRhZGF0YVRhYmxlU2VydmljZSk7CgogIGZ1bmN0aW9uIE1ldGFkYXRhVGFibGVTZXJ2aWNlKGN1cnJlbnRIZWlnaHQsIG1ldGFkYXRhcywgbmV0d29ya0NvbmZpZ3VyYXRpb24pIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWV0YWRhdGFUYWJsZVNlcnZpY2UpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY3VycmVudEhlaWdodCk7CiAgICBfdGhpcy5tZXRhZGF0YXMgPSBtZXRhZGF0YXM7CiAgICBfdGhpcy5uZXR3b3JrQ29uZmlndXJhdGlvbiA9IG5ldHdvcmtDb25maWd1cmF0aW9uOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBSZXR1cm4gdGFibGUgZmllbGRzIHRvIGJlIGRpc3BsYXllZCBpbiBhIHRhYmxlIGhlYWRlcgogICAqIEByZXR1cm5zIHtUYWJsZUZpZWxkW119CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoTWV0YWRhdGFUYWJsZVNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRUYWJsZUZpZWxkcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VGFibGVGaWVsZHMoKSB7CiAgICAgIHJldHVybiBbewogICAgICAgIG5hbWU6ICd0YXJnZXRBZGRyZXNzJywKICAgICAgICBsYWJlbDogJ3RhYmxlX2hlYWRlcl90YXJnZXRfYWRkcmVzcycKICAgICAgfSwgewogICAgICAgIG5hbWU6ICd0YXJnZXRJRCcsCiAgICAgICAgbGFiZWw6ICd0YWJsZV9oZWFkZXJfdGFyZ2V0X2lkJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ3RhcmdldFR5cGUnLAogICAgICAgIGxhYmVsOiAndGFibGVfaGVhZGVyX3RhcmdldF90eXBlJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ3Njb3BlZE1ldGFkYXRhS2V5JywKICAgICAgICBsYWJlbDogJ3RhYmxlX2hlYWRlcl9zY29wZWRfa2V5JwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ3N0YXR1cycsCiAgICAgICAgbGFiZWw6ICd0YWJsZV9oZWFkZXJfc3RhdHVzJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ2NoYW5nZVRpbWVzJywKICAgICAgICBsYWJlbDogJ3RhYmxlX2hlYWRlcl9jaGFuZ2VfdGltZXMnCiAgICAgIH1dOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFRhYmxlUm93cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VGFibGVSb3dzKCkgewogICAgICB2YXIgbWV0YWRhdGFzID0gdGhpcy5tZXRhZGF0YXM7CiAgICAgIHJldHVybiBtZXRhZGF0YXMubWFwKGZ1bmN0aW9uIChtZXRhZGF0YU1vZGVsKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGhleElkOiBtZXRhZGF0YU1vZGVsLm1ldGFkYXRhSWQsCiAgICAgICAgICBzY29wZWRNZXRhZGF0YUtleTogbWV0YWRhdGFNb2RlbC5zY29wZWRNZXRhZGF0YUtleSwKICAgICAgICAgIHRhcmdldEFkZHJlc3M6IG1ldGFkYXRhTW9kZWwudGFyZ2V0QWRkcmVzcywKICAgICAgICAgIHRhcmdldElkOiBtZXRhZGF0YU1vZGVsLnRhcmdldElkLAogICAgICAgICAgdmFsdWU6IG1ldGFkYXRhTW9kZWwudmFsdWUKICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBNZXRhZGF0YVRhYmxlU2VydmljZTsKfShBc3NldFRhYmxlU2VydmljZSk7"},{"version":3,"sources":["/home/hero/lared-wallet/src/services/AssetTableService/MetadataTableService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAgBA;AACA,SAAS,iBAAT,QAA8C,qBAA9C;AAIA,WAAa,oBAAb;AAAA;;AAAA;;AACI,gCACI,aADJ,EAEqB,SAFrB,EAGqB,oBAHrB,EAGoE;AAAA;;AAAA;;AAEhE,8BAAM,aAAN;AAHiB,UAAA,SAAA,GAAA,SAAA;AACA,UAAA,oBAAA,GAAA,oBAAA;AAA+C;AAGnE;AAED;;;;;;AATJ;AAAA;AAAA,qCAayB;AACjB,aAAO,CACH;AAAE,QAAA,IAAI,EAAE,eAAR;AAAyB,QAAA,KAAK,EAAE;AAAhC,OADG,EAEH;AAAE,QAAA,IAAI,EAAE,UAAR;AAAoB,QAAA,KAAK,EAAE;AAA3B,OAFG,EAGH;AAAE,QAAA,IAAI,EAAE,YAAR;AAAsB,QAAA,KAAK,EAAE;AAA7B,OAHG,EAIH;AAAE,QAAA,IAAI,EAAE,mBAAR;AAA6B,QAAA,KAAK,EAAE;AAApC,OAJG,EAKH;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,KAAK,EAAE;AAAzB,OALG,EAMH;AAAE,QAAA,IAAI,EAAE,aAAR;AAAuB,QAAA,KAAK,EAAE;AAA9B,OANG,CAAP;AAQH;AAtBL;AAAA;AAAA,mCAwBuB;AACf,UAAM,SAAS,GAAoB,KAAK,SAAxC;AAEA,aAAO,SAAS,CAAC,GAAV,CAAc,UAAC,aAAD,EAAkB;AACnC,eAAO;AACH,UAAA,KAAK,EAAE,aAAa,CAAC,UADlB;AAEH,UAAA,iBAAiB,EAAE,aAAa,CAAC,iBAF9B;AAGH,UAAA,aAAa,EAAE,aAAa,CAAC,aAH1B;AAIH,UAAA,QAAQ,EAAE,aAAa,CAAC,QAJrB;AAKH,UAAA,KAAK,EAAE,aAAa,CAAC;AALlB,SAAP;AAOH,OARM,CAAP;AASH;AApCL;;AAAA;AAAA,EAA0C,iBAA1C","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// internal dependencies\nimport { AssetTableService, TableField } from './AssetTableService';\nimport { MetadataModel } from '@/core/database/entities/MetadataModel';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\nexport class MetadataTableService extends AssetTableService {\n    constructor(\n        currentHeight: number,\n        private readonly metadatas: MetadataModel[],\n        private readonly networkConfiguration: NetworkConfigurationModel,\n    ) {\n        super(currentHeight);\n    }\n\n    /**\n     * Return table fields to be displayed in a table header\n     * @returns {TableField[]}\n     */\n    public getTableFields(): TableField[] {\n        return [\n            { name: 'targetAddress', label: 'table_header_target_address' },\n            { name: 'targetID', label: 'table_header_target_id' },\n            { name: 'targetType', label: 'table_header_target_type' },\n            { name: 'scopedMetadataKey', label: 'table_header_scoped_key' },\n            { name: 'status', label: 'table_header_status' },\n            { name: 'changeTimes', label: 'table_header_change_times' },\n        ];\n    }\n\n    public getTableRows(): any[] {\n        const metadatas: MetadataModel[] = this.metadatas;\n\n        return metadatas.map((metadataModel) => {\n            return {\n                hexId: metadataModel.metadataId,\n                scopedMetadataKey: metadataModel.scopedMetadataKey,\n                targetAddress: metadataModel.targetAddress,\n                targetId: metadataModel.targetId,\n                value: metadataModel.value,\n            };\n        });\n    }\n}\n"],"sourceRoot":""}]}