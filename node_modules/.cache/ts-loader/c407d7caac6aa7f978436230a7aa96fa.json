{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/transactions/ViewAliasTransaction.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/transactions/ViewAliasTransaction.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgQWRkcmVzcywgQWRkcmVzc0FsaWFzVHJhbnNhY3Rpb24sIEFsaWFzQWN0aW9uLCBNb3NhaWNBbGlhc1RyYW5zYWN0aW9uIH0gZnJvbSAnc3ltYm9sLXNkayc7IC8vIGludGVybmFsIGRlcGVuZGVuY2llcwoKaW1wb3J0IHsgVHJhbnNhY3Rpb25WaWV3IH0gZnJvbSAnLi9UcmFuc2FjdGlvblZpZXcnOyAvLy8gZW5kLXJlZ2lvbiBjdXN0b20gdHlwZXMKCmV4cG9ydCB2YXIgVmlld0FsaWFzVHJhbnNhY3Rpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9UcmFuc2FjdGlvblZpZXcpIHsKICBfaW5oZXJpdHMoVmlld0FsaWFzVHJhbnNhY3Rpb24sIF9UcmFuc2FjdGlvblZpZXcpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFZpZXdBbGlhc1RyYW5zYWN0aW9uKTsKCiAgZnVuY3Rpb24gVmlld0FsaWFzVHJhbnNhY3Rpb24oKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmlld0FsaWFzVHJhbnNhY3Rpb24pOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhWaWV3QWxpYXNUcmFuc2FjdGlvbiwgW3sKICAgIGtleTogInJlc29sdmVEZXRhaWxJdGVtcyIsCgogICAgLyoqCiAgICAgKiBEaXNwbGF5ZWQgaXRlbXMKICAgICAqLwogICAgdmFsdWU6IGZ1bmN0aW9uIHJlc29sdmVEZXRhaWxJdGVtcygpIHsKICAgICAgdmFyIHRyYW5zYWN0aW9uID0gdGhpcy50cmFuc2FjdGlvbjsKICAgICAgdmFyIG5hbWVzcGFjZUlkID0gdHJhbnNhY3Rpb24ubmFtZXNwYWNlSWQ7CiAgICAgIHZhciBhbGlhc1RhcmdldDsKCiAgICAgIGlmICh0cmFuc2FjdGlvbiBpbnN0YW5jZW9mIEFkZHJlc3NBbGlhc1RyYW5zYWN0aW9uKSB7CiAgICAgICAgYWxpYXNUYXJnZXQgPSB0cmFuc2FjdGlvbi5hZGRyZXNzOwogICAgICB9CgogICAgICBpZiAodHJhbnNhY3Rpb24gaW5zdGFuY2VvZiBNb3NhaWNBbGlhc1RyYW5zYWN0aW9uKSB7CiAgICAgICAgYWxpYXNUYXJnZXQgPSB0cmFuc2FjdGlvbi5tb3NhaWNJZDsKICAgICAgfQoKICAgICAgdmFyIGRpc3BsYXlOYW1lID0gbmFtZXNwYWNlSWQuZnVsbE5hbWUgPyAiIi5jb25jYXQobmFtZXNwYWNlSWQuZnVsbE5hbWUsICIgKCIpLmNvbmNhdChuYW1lc3BhY2VJZC50b0hleCgpLCAiKSIpIDogbmFtZXNwYWNlSWQudG9IZXgoKTsKICAgICAgdmFyIHRhcmdldEtleSA9IGFsaWFzVGFyZ2V0IGluc3RhbmNlb2YgQWRkcmVzcyA/ICdhZGRyZXNzJyA6ICdtb3NhaWMnOwogICAgICB2YXIgdGFyZ2V0VmFsdWUgPSBhbGlhc1RhcmdldCBpbnN0YW5jZW9mIEFkZHJlc3MgPyBhbGlhc1RhcmdldC5wcmV0dHkoKSA6IGFsaWFzVGFyZ2V0LnRvSGV4KCk7CiAgICAgIHZhciBhbGlhc0FjdGlvbiA9IHRoaXMudHJhbnNhY3Rpb24uYWxpYXNBY3Rpb247CiAgICAgIHJldHVybiBbewogICAgICAgIGtleTogJ25hbWVzcGFjZScsCiAgICAgICAgdmFsdWU6IGRpc3BsYXlOYW1lCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdhY3Rpb24nLAogICAgICAgIHZhbHVlOiBhbGlhc0FjdGlvbiA9PT0gQWxpYXNBY3Rpb24uTGluayA/ICdMaW5rJyA6ICdVbmxpbmsnCiAgICAgIH0sIHsKICAgICAgICBrZXk6IHRhcmdldEtleSwKICAgICAgICB2YWx1ZTogdGFyZ2V0VmFsdWUKICAgICAgfV07CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVmlld0FsaWFzVHJhbnNhY3Rpb247Cn0oVHJhbnNhY3Rpb25WaWV3KTs="},{"version":3,"sources":["/home/hero/lared-wallet/src/core/transactions/ViewAliasTransaction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeA,SAAS,OAAT,EAAkB,uBAAlB,EAA2C,WAA3C,EAAwD,sBAAxD,QAA6G,YAA7G,C,CACA;;AACA,SAAS,eAAT,QAAgC,mBAAhC,C,CAGA;;AAEA,WAAa,oBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACI;;;AADJ,yCAIgC;AACxB,UAAM,WAAW,GAAG,KAAK,WAAzB;AACA,UAAM,WAAW,GAAgB,WAAW,CAAC,WAA7C;AACA,UAAI,WAAJ;;AACA,UAAI,WAAW,YAAY,uBAA3B,EAAoD;AAChD,QAAA,WAAW,GAAG,WAAW,CAAC,OAA1B;AACH;;AACD,UAAI,WAAW,YAAY,sBAA3B,EAAmD;AAC/C,QAAA,WAAW,GAAG,WAAW,CAAC,QAA1B;AACH;;AACD,UAAM,WAAW,GAAG,WAAW,CAAC,QAAZ,aAA0B,WAAW,CAAC,QAAtC,eAAmD,WAAW,CAAC,KAAZ,EAAnD,SAA4E,WAAW,CAAC,KAAZ,EAAhG;AACA,UAAM,SAAS,GAAG,WAAW,YAAY,OAAvB,GAAiC,SAAjC,GAA6C,QAA/D;AACA,UAAM,WAAW,GAAG,WAAW,YAAY,OAAvB,GAAiC,WAAW,CAAC,MAAZ,EAAjC,GAAwD,WAAW,CAAC,KAAZ,EAA5E;AACA,UAAM,WAAW,GAAG,KAAK,WAAL,CAAiB,WAArC;AACA,aAAO,CACH;AAAE,QAAA,GAAG,EAAE,WAAP;AAAoB,QAAA,KAAK,EAAE;AAA3B,OADG,EAEH;AACI,QAAA,GAAG,EAAE,QADT;AAEI,QAAA,KAAK,EAAE,WAAW,KAAK,WAAW,CAAC,IAA5B,GAAmC,MAAnC,GAA4C;AAFvD,OAFG,EAMH;AAAE,QAAA,GAAG,EAAE,SAAP;AAAkB,QAAA,KAAK,EAAE;AAAzB,OANG,CAAP;AAQH;AA1BL;;AAAA;AAAA,EAA0C,eAA1C","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Address, AddressAliasTransaction, AliasAction, MosaicAliasTransaction, MosaicId, NamespaceId } from 'symbol-sdk';\n// internal dependencies\nimport { TransactionView } from './TransactionView';\nimport { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';\n\n/// end-region custom types\n\nexport class ViewAliasTransaction extends TransactionView<MosaicAliasTransaction | AddressAliasTransaction> {\n    /**\n     * Displayed items\n     */\n    protected resolveDetailItems(): TransactionDetailItem[] {\n        const transaction = this.transaction;\n        const namespaceId: NamespaceId = transaction.namespaceId;\n        let aliasTarget: Address | MosaicId;\n        if (transaction instanceof AddressAliasTransaction) {\n            aliasTarget = transaction.address;\n        }\n        if (transaction instanceof MosaicAliasTransaction) {\n            aliasTarget = transaction.mosaicId;\n        }\n        const displayName = namespaceId.fullName ? `${namespaceId.fullName} (${namespaceId.toHex()})` : namespaceId.toHex();\n        const targetKey = aliasTarget instanceof Address ? 'address' : 'mosaic';\n        const targetValue = aliasTarget instanceof Address ? aliasTarget.pretty() : aliasTarget.toHex();\n        const aliasAction = this.transaction.aliasAction;\n        return [\n            { key: 'namespace', value: displayName },\n            {\n                key: 'action',\n                value: aliasAction === AliasAction.Link ? 'Link' : 'Unlink',\n            },\n            { key: targetKey, value: targetValue },\n        ];\n    }\n}\n"],"sourceRoot":""}]}