{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/Formatters.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/Formatters.ts","mtime":1611927203846},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJ3N5bWJvbC1zZGsnOwppbXBvcnQgeyBkZWNvZGUgfSBmcm9tICd1dGY4JzsgLy8gY29uZmlndXJhdGlvbgoKaW1wb3J0IHsgbmV0d29ya0NvbmZpZyB9IGZyb20gJ0AvY29uZmlnJzsKZXhwb3J0IHZhciBGb3JtYXR0ZXJzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBGb3JtYXR0ZXJzKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZvcm1hdHRlcnMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEZvcm1hdHRlcnMsIG51bGwsIFt7CiAgICBrZXk6ICJoZXhUb1V0ZjgiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhleFRvVXRmOChoZXgpIHsKICAgICAgdmFyIHN0ciA9ICcnOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBoZXgubGVuZ3RoOyBpICs9IDIpIHsKICAgICAgICBzdHIgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChoZXguc3Vic3RyKGksIDIpLCAxNikpOwogICAgICB9CgogICAgICB0cnkgewogICAgICAgIHJldHVybiBkZWNvZGUoc3RyKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybiBzdHI7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb25maWd1cmF0aW9uTnVtYmVyQXNTdHJpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbmZpZ3VyYXRpb25OdW1iZXJBc1N0cmluZyh2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUgPyB2YWx1ZS5yZXBsYWNlKC8nL2csICcnKSA6ICcwJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb25maWd1cmF0aW9uU3RyaW5nQXNTdHJpbmciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbmZpZ3VyYXRpb25TdHJpbmdBc1N0cmluZyh2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUgPyB2YWx1ZS5yZXBsYWNlKC8nL2csICcnKS5zdWJzdHJpbmcoMikgOiAnJzsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjb25maWd1cmF0aW9uTnVtYmVyQXNOdW1iZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbmZpZ3VyYXRpb25OdW1iZXJBc051bWJlcih2YWx1ZSkgewogICAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5jb25maWd1cmF0aW9uTnVtYmVyQXNTdHJpbmcodmFsdWUpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzcGxpdEFycmF5QnlEZWxpbWl0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNwbGl0QXJyYXlCeURlbGltaXRlcihhcnIsIGRlbGltaXRlcikgewogICAgICBkZWxpbWl0ZXIgPSBkZWxpbWl0ZXIgPyBkZWxpbWl0ZXIgOiAnICc7CgogICAgICBpZiAoIUFycmF5LmlzQXJyYXkoYXJyKSkgewogICAgICAgIHRocm93IEVycm9yKCIiLmNvbmNhdChhcnIsICIgaXMgbm90IGFuIEFycmF5IikpOwogICAgICB9CgogICAgICBpZiAoYXJyLnNvbWUoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gdHlwZW9mIGUgIT09ICdzdHJpbmcnOwogICAgICB9KSkgewogICAgICAgIHRocm93IEVycm9yKCJUeXBlIG9mIHRoZSBlbGVtZW50IGluICIuY29uY2F0KGFyciwgIiBzaG91bGQgYmUgc3RyaW5nIikpOwogICAgICB9CgogICAgICByZXR1cm4gYXJyLmpvaW4oZGVsaW1pdGVyKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBGb3JtYXR0ZXJzOwp9KCk7CgpGb3JtYXR0ZXJzLmZvcm1hdE51bWJlciA9IGZ1bmN0aW9uIChudW1iZXIpIHsKICBpZiAobnVtYmVyIDw9IDEpIHsKICAgIHJldHVybiAiIi5jb25jYXQobnVtYmVyKTsKICB9CgogIGlmIChudW1iZXIgPT09IE51bWJlcihudW1iZXIudG9GaXhlZCgwKSkpIHsKICAgIHJldHVybiBudW1iZXIudG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJywgewogICAgICBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IDAKICAgIH0pOwogIH0KCiAgdmFyIHN0cmluZ09mTnVtYmVyID0gIiIuY29uY2F0KG51bWJlcik7CiAgdmFyIG1pbmltdW1GcmFjdGlvbkRpZ2l0cyA9IHN0cmluZ09mTnVtYmVyLmxlbmd0aCAtIHN0cmluZ09mTnVtYmVyLmluZGV4T2YoJy4nKSAtIDE7CiAgcmV0dXJuIG51bWJlci50b0xvY2FsZVN0cmluZygnZW4tVVMnLCB7CiAgICBtaW5pbXVtRnJhY3Rpb25EaWdpdHM6IG1pbmltdW1GcmFjdGlvbkRpZ2l0cwogIH0pOwp9OwoKRm9ybWF0dGVycy5mb3JtYXRBZGRyZXNzID0gZnVuY3Rpb24gKGFkZHJlc3MpIHsKICBpZiAoIWFkZHJlc3MpIHsKICAgIHJldHVybjsKICB9CgogIHJldHVybiBBZGRyZXNzLmNyZWF0ZUZyb21SYXdBZGRyZXNzKGFkZHJlc3MpLnByZXR0eSgpOwp9OwoKRm9ybWF0dGVycy5mb3JtYXRFeHBsb3JlclVybCA9IGZ1bmN0aW9uICh0cmFuc2FjdGlvbkhhc2gpIHsKICByZXR1cm4gbmV0d29ya0NvbmZpZy5leHBsb3JlclVybCArIHRyYW5zYWN0aW9uSGFzaDsKfTsKCkZvcm1hdHRlcnMubWluaUFkZHJlc3MgPSBmdW5jdGlvbiAoYWRkcmVzcykgewogIHZhciBzdHJpbmcgPSBhZGRyZXNzLnByZXR0eSgpOwogIHJldHVybiAiIi5jb25jYXQoc3RyaW5nLnN1YnN0cmluZygwLCAxMykudG9VcHBlckNhc2UoKSwgIioqKiIpLmNvbmNhdChzdHJpbmcuc3Vic3RyaW5nKDI4KS50b1VwcGVyQ2FzZSgpKTsKfTsKCkZvcm1hdHRlcnMubWluaUhhc2ggPSBmdW5jdGlvbiAoaGFzaCkgewogIHJldHVybiAiIi5jb25jYXQoaGFzaC5zdWJzdHJpbmcoMCwgMTgpLnRvTG93ZXJDYXNlKCksICIqKioiKS5jb25jYXQoaGFzaC5zdWJzdHJpbmcoNDIpLnRvTG93ZXJDYXNlKCkpOwp9OwoKRm9ybWF0dGVycy50aW55SGFzaCA9IGZ1bmN0aW9uIChoYXNoKSB7CiAgcmV0dXJuICIiLmNvbmNhdChoYXNoLnN1YnN0cmluZygwLCA2KS50b0xvd2VyQ2FzZSgpLCAiKioqIikuY29uY2F0KGhhc2guc3Vic3RyaW5nKDU4KS50b0xvd2VyQ2FzZSgpKTsKfTsKCkZvcm1hdHRlcnMuZm9ybWF0RGF0ZSA9IGZ1bmN0aW9uICh0aW1lc3RhbXApIHsKICB2YXIgbm93ID0gbmV3IERhdGUoTnVtYmVyKHRpbWVzdGFtcCkpOwogIHZhciB5ZWFyID0gbm93LmdldEZ1bGxZZWFyKCk7CiAgdmFyIG1vbnRoID0gIiIuY29uY2F0KG5vdy5nZXRNb250aCgpICsgMSk7CiAgbW9udGggPSBOdW1iZXIobW9udGgpIDwgMTAgPyAiMCIuY29uY2F0KG1vbnRoKSA6IG1vbnRoOwogIHZhciBkYXRlID0gIiIuY29uY2F0KG5vdy5nZXREYXRlKCkpOwogIGRhdGUgPSBOdW1iZXIoZGF0ZSkgPCAxMCA/ICIwIi5jb25jYXQoZGF0ZSkgOiBkYXRlOwogIHZhciBob3VyID0gIiIuY29uY2F0KG5vdy5nZXRIb3VycygpKTsKICBob3VyID0gTnVtYmVyKGhvdXIpIDwgMTAgPyAiMCIuY29uY2F0KGhvdXIpIDogaG91cjsKICB2YXIgbWludXRlID0gIiIuY29uY2F0KG5vdy5nZXRNaW51dGVzKCkpOwogIG1pbnV0ZSA9IE51bWJlcihtaW51dGUpIDwgMTAgPyAiMCIuY29uY2F0KG1pbnV0ZSkgOiBtaW51dGU7CiAgdmFyIHNlY29uZCA9ICIiLmNvbmNhdChub3cuZ2V0U2Vjb25kcygpKTsKICBzZWNvbmQgPSBOdW1iZXIoc2Vjb25kKSA8IDEwID8gIjAiLmNvbmNhdChzZWNvbmQpIDogc2Vjb25kOwogIHJldHVybiAiIi5jb25jYXQoeWVhciwgIi0iKS5jb25jYXQobW9udGgsICItIikuY29uY2F0KGRhdGUsICIgIikuY29uY2F0KGhvdXIsICI6IikuY29uY2F0KG1pbnV0ZSwgIjoiKS5jb25jYXQoc2Vjb25kKTsKfTs="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/Formatters.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Address } from 'symbol-sdk';\nimport { decode } from 'utf8';\n// configuration\nimport { networkConfig } from '@/config';\n\nexport class Formatters {\n    public static formatNumber = (number: number): string => {\n        if (number <= 1) {\n            return `${number}`;\n        }\n        if (number === Number(number.toFixed(0))) {\n            return number.toLocaleString('en-US', { minimumFractionDigits: 0 });\n        }\n\n        const stringOfNumber = `${number}`;\n        const minimumFractionDigits = stringOfNumber.length - stringOfNumber.indexOf('.') - 1;\n        return number.toLocaleString('en-US', { minimumFractionDigits });\n    };\n\n    public static formatAddress = function (address: string): string {\n        if (!address) {\n            return;\n        }\n        return Address.createFromRawAddress(address).pretty();\n    };\n    public static formatExplorerUrl = (transactionHash) => {\n        return networkConfig.explorerUrl + transactionHash;\n    };\n\n    public static miniAddress = (address: Address): string => {\n        const string = address.pretty();\n        return `${string.substring(0, 13).toUpperCase()}***${string.substring(28).toUpperCase()}`;\n    };\n\n    public static miniHash = (hash: string): string => {\n        return `${hash.substring(0, 18).toLowerCase()}***${hash.substring(42).toLowerCase()}`;\n    };\n\n    public static tinyHash = (hash: string): string => {\n        return `${hash.substring(0, 6).toLowerCase()}***${hash.substring(58).toLowerCase()}`;\n    };\n\n    public static formatDate = (timestamp) => {\n        const now = new Date(Number(timestamp));\n        const year = now.getFullYear();\n        let month = `${now.getMonth() + 1}`;\n        month = Number(month) < 10 ? `0${month}` : month;\n        let date = `${now.getDate()}`;\n        date = Number(date) < 10 ? `0${date}` : date;\n        let hour = `${now.getHours()}`;\n        hour = Number(hour) < 10 ? `0${hour}` : hour;\n        let minute = `${now.getMinutes()}`;\n        minute = Number(minute) < 10 ? `0${minute}` : minute;\n        let second = `${now.getSeconds()}`;\n        second = Number(second) < 10 ? `0${second}` : second;\n        return `${year}-${month}-${date} ${hour}:${minute}:${second}`;\n    };\n\n    public static hexToUtf8(hex: string): string {\n        let str = '';\n        for (let i = 0; i < hex.length; i += 2) {\n            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n        }\n        try {\n            return decode(str);\n        } catch (e) {\n            return str;\n        }\n    }\n\n    public static configurationNumberAsString(value: string | undefined): string {\n        return value ? value.replace(/'/g, '') : '0';\n    }\n\n    public static configurationStringAsString(value: string | undefined): string {\n        return value ? value.replace(/'/g, '').substring(2) : '';\n    }\n\n    public static configurationNumberAsNumber(value: string | undefined): number {\n        return parseInt(this.configurationNumberAsString(value));\n    }\n    public static splitArrayByDelimiter(arr: Array<string>, delimiter?: string) {\n        delimiter = delimiter ? delimiter : ' ';\n        if (!Array.isArray(arr)) {\n            throw Error(`${arr} is not an Array`);\n        }\n        if (arr.some((e) => typeof e !== 'string')) {\n            throw Error(`Type of the element in ${arr} should be string`);\n        }\n        return arr.join(delimiter);\n    }\n}\n"],"sourceRoot":""}]}