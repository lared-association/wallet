{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/validation/ValidationRuleset.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/validation/ValidationRuleset.ts","mtime":1611927227319},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwovLyBjb25maWd1cmF0aW9uCmltcG9ydCB7IGFwcENvbmZpZyB9IGZyb20gJ0AvY29uZmlnJzsKaW1wb3J0IHsgbmV0d29ya0NvbmZpZyB9IGZyb20gJ0AvY29uZmlnJzsKdmFyIE1JTl9QQVNTV09SRF9MRU5HVEggPSBhcHBDb25maWcuY29uc3RhbnRzLk1JTl9QQVNTV09SRF9MRU5HVEg7CmV4cG9ydCB2YXIgY3JlYXRlVmFsaWRhdGlvblJ1bGVTZXQgPSBmdW5jdGlvbiBjcmVhdGVWYWxpZGF0aW9uUnVsZVNldChfcmVmKSB7CiAgdmFyIG1heE1lc3NhZ2VTaXplID0gX3JlZi5tYXhNZXNzYWdlU2l6ZSwKICAgICAgbWF4TW9zYWljQXRvbWljVW5pdHMgPSBfcmVmLm1heE1vc2FpY0F0b21pY1VuaXRzLAogICAgICBtYXhNb3NhaWNEaXZpc2liaWxpdHkgPSBfcmVmLm1heE1vc2FpY0RpdmlzaWJpbGl0eSwKICAgICAgbWF4TW9zYWljRHVyYXRpb24gPSBfcmVmLm1heE1vc2FpY0R1cmF0aW9uLAogICAgICBtaW5OYW1lc3BhY2VEdXJhdGlvbiA9IF9yZWYubWluTmFtZXNwYWNlRHVyYXRpb247CiAgcmV0dXJuIHsKICAgIGFkZHJlc3M6ICdyZXF1aXJlZHxhZGRyZXNzfGFkZHJlc3NOZXR3b3JrVHlwZTpjdXJyZW50UHJvZmlsZScsCiAgICBwcm9maWxlUGFzc3dvcmQ6ICdyZXF1aXJlZHxwcm9maWxlUGFzc3dvcmQnLAogICAgYWRkcmVzc09yQWxpYXM6ICdyZXF1aXJlZHxhZGRyZXNzT3JBbGlhc3xhZGRyZXNzT3JBbGlhc05ldHdvcmtUeXBlOmN1cnJlbnRQcm9maWxlJywKICAgIGFtb3VudDogImV4Y2x1ZGVkOlwiXCJ8bWluX3ZhbHVlOjB8bWF4RGVjaW1hbHM6Ii5jb25jYXQobWF4TW9zYWljRGl2aXNpYmlsaXR5LCAifG1heF92YWx1ZToiKS5jb25jYXQobWF4TW9zYWljQXRvbWljVW5pdHMpLAogICAgY29uZmlybVBhc3N3b3JkOiAncmVxdWlyZWR8Y29uZmlybVBhc3N3b3JkOkBuZXdQYXNzd29yZCcsCiAgICBkaXZpc2liaWxpdHk6ICdyZXF1aXJlZHxtaW5fdmFsdWU6MHxtYXhfdmFsdWU6NnxpbnRlZ2VyJywKICAgIGR1cmF0aW9uOiAicmVxdWlyZWR8bWluX3ZhbHVlOjB8bWF4X3ZhbHVlOiIuY29uY2F0KG1heE1vc2FpY0R1cmF0aW9uKSwKICAgIGdlbmVyYXRpb25IYXNoOiAncmVxdWlyZWR8bWluOjY0fG1heDo2NCcsCiAgICBtb3NhaWNJZDogJ3JlcXVpcmVkfG1vc2FpY0lkJywKICAgIG1lc3NhZ2U6ICJtYXg6Ii5jb25jYXQobWF4TWVzc2FnZVNpemUpLAogICAgbmFtZXNwYWNlRHVyYXRpb246ICJyZXF1aXJlZHxtaW5fdmFsdWU6Ii5jb25jYXQobWluTmFtZXNwYWNlRHVyYXRpb24sICJ8bWF4TmFtZXNwYWNlRHVyYXRpb24iKSwKICAgIG5hbWVzcGFjZU5hbWU6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHJlZ2V4OiAnXlthLXowLTldezF9W2EtejAtOS1fXXswLDYzfSQnCiAgICB9LAogICAgc3ViTmFtZXNwYWNlTmFtZTogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgcmVnZXg6ICdeW2EtejAtOV17MX1bYS16MC05LV9dezAsNjN9JCcKICAgIH0sCiAgICBwYXNzd29yZDogInJlcXVpcmVkfG1pbjoiLmNvbmNhdChNSU5fUEFTU1dPUkRfTEVOR1RILCAifHBhc3N3b3JkUmVnZXgiKSwKICAgIHByZXZpb3VzUGFzc3dvcmQ6ICdyZXF1aXJlZHxjb25maXJtTG9jazpjaXBoZXInLAogICAgcHJpdmF0ZUtleTogJ21pbjo2NHxtYXg6NjR8cHJpdmF0ZUtleScsCiAgICByZWNpcGllbnRQdWJsaWNLZXk6ICdyZXF1aXJlZHxwdWJsaWNLZXknLAogICAgc3VwcGx5OiAicmVxdWlyZWR8aW50ZWdlcnxtaW5fdmFsdWU6IDF8bWF4X3ZhbHVlOiIuY29uY2F0KG1heE1vc2FpY0F0b21pY1VuaXRzKSwKICAgIHVybDogJ3JlcXVpcmVkfHVybCcsCiAgICBuZXdBY2NvdW50TmFtZTogJ3JlcXVpcmVkfG5ld0FjY291bnROYW1lJywKICAgIHByb2ZpbGVBY2NvdW50TmFtZTogJ3JlcXVpcmVkfHByb2ZpbGVBY2NvdW50TmFtZScsCiAgICBhZGRyZXNzT3JQdWJsaWNLZXk6ICdhZGRyZXNzT3JQdWJsaWNLZXknLAogICAgZW1haWw6IHsKICAgICAgcmVnZXg6ICdeW2EtekEtWjAtOV8uKy1dK0BbYS16QS1aMC05LV0rXFwuW2EtekEtWjAtOS0uXSskJwogICAgfSwKICAgIGNvbnRhY3ROYW1lOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICByZWdleDogJ14oPyFcXHMqJCkuKycKICAgIH0KICB9Owp9OyAvLyBUT0RPIFZhbGlkYXRpb25SdWxlc2V0IG5lZWRzIHRvIGJlIGNyZWF0ZWQgd2hlbiB0aGUgbmV0d29yayBjb25maWd1cmF0aW9uIGlzIHJlc29sdmVkLCBVSSBuZWVkcwovLyB0byB1c2UgdGhlIHJlc29sdmVkIFZhbGlkYXRpb25SZXN1bHNldCBBVE0gcnVsZXMgYXJlIHVzaW5nIHRoZSBoYXJkb2NkZWQgb25lcwoKZXhwb3J0IHZhciBWYWxpZGF0aW9uUnVsZXNldCA9IGNyZWF0ZVZhbGlkYXRpb25SdWxlU2V0KG5ldHdvcmtDb25maWcubmV0d29ya0NvbmZpZ3VyYXRpb25EZWZhdWx0cyk7"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/validation/ValidationRuleset.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AACH;AACA,SAAS,SAAT,QAA0B,UAA1B;AAGA,SAAS,aAAT,QAA8B,UAA9B;IAEQ,mB,GAAwB,SAAS,CAAC,S,CAAlC,mB;AAER,OAAO,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,OAMP;AAAA,MAL5B,cAK4B,QAL5B,cAK4B;AAAA,MAJ5B,oBAI4B,QAJ5B,oBAI4B;AAAA,MAH5B,qBAG4B,QAH5B,qBAG4B;AAAA,MAF5B,iBAE4B,QAF5B,iBAE4B;AAAA,MAD5B,oBAC4B,QAD5B,oBAC4B;AAC5B,SAAO;AACH,IAAA,OAAO,EAAE,oDADN;AAEH,IAAA,eAAe,EAAE,0BAFd;AAGH,IAAA,cAAc,EAAE,kEAHb;AAIH,IAAA,MAAM,kDAAyC,qBAAzC,wBAA4E,oBAA5E,CAJH;AAKH,IAAA,eAAe,EAAE,uCALd;AAMH,IAAA,YAAY,EAAE,0CANX;AAOH,IAAA,QAAQ,2CAAoC,iBAApC,CAPL;AAQH,IAAA,cAAc,EAAE,wBARb;AASH,IAAA,QAAQ,EAAE,mBATP;AAUH,IAAA,OAAO,gBAAS,cAAT,CAVJ;AAWH,IAAA,iBAAiB,+BAAwB,oBAAxB,0BAXd;AAYH,IAAA,aAAa,EAAE;AACX,MAAA,QAAQ,EAAE,IADC;AAEX,MAAA,KAAK,EAAE;AAFI,KAZZ;AAgBH,IAAA,gBAAgB,EAAE;AACd,MAAA,QAAQ,EAAE,IADI;AAEd,MAAA,KAAK,EAAE;AAFO,KAhBf;AAoBH,IAAA,QAAQ,yBAAkB,mBAAlB,mBApBL;AAqBH,IAAA,gBAAgB,EAAE,6BArBf;AAsBH,IAAA,UAAU,EAAE,0BAtBT;AAuBH,IAAA,kBAAkB,EAAE,oBAvBjB;AAwBH,IAAA,MAAM,oDAA6C,oBAA7C,CAxBH;AAyBH,IAAA,GAAG,EAAE,cAzBF;AA0BH,IAAA,cAAc,EAAE,yBA1Bb;AA2BH,IAAA,kBAAkB,EAAE,6BA3BjB;AA4BH,IAAA,kBAAkB,EAAE,oBA5BjB;AA6BH,IAAA,KAAK,EAAE;AACH,MAAA,KAAK,EAAE;AADJ,KA7BJ;AAgCH,IAAA,WAAW,EAAE;AACT,MAAA,QAAQ,EAAE,IADD;AAET,MAAA,KAAK,EAAE;AAFE;AAhCV,GAAP;AAqCH,CA5CM,C,CA8CP;AACA;;AACA,OAAO,IAAM,iBAAiB,GAAG,uBAAuB,CAAC,aAAa,CAAC,4BAAf,CAAjD","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// configuration\nimport { appConfig } from '@/config';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\nimport { networkConfig } from '@/config';\n\nconst { MIN_PASSWORD_LENGTH } = appConfig.constants;\n\nexport const createValidationRuleSet = ({\n    maxMessageSize,\n    maxMosaicAtomicUnits,\n    maxMosaicDivisibility,\n    maxMosaicDuration,\n    minNamespaceDuration,\n}: NetworkConfigurationModel) => {\n    return {\n        address: 'required|address|addressNetworkType:currentProfile',\n        profilePassword: 'required|profilePassword',\n        addressOrAlias: 'required|addressOrAlias|addressOrAliasNetworkType:currentProfile',\n        amount: `excluded:\"\"|min_value:0|maxDecimals:${maxMosaicDivisibility}|max_value:${maxMosaicAtomicUnits}`,\n        confirmPassword: 'required|confirmPassword:@newPassword',\n        divisibility: 'required|min_value:0|max_value:6|integer',\n        duration: `required|min_value:0|max_value:${maxMosaicDuration}`,\n        generationHash: 'required|min:64|max:64',\n        mosaicId: 'required|mosaicId',\n        message: `max:${maxMessageSize}`,\n        namespaceDuration: `required|min_value:${minNamespaceDuration}|maxNamespaceDuration`,\n        namespaceName: {\n            required: true,\n            regex: '^[a-z0-9]{1}[a-z0-9-_]{0,63}$',\n        },\n        subNamespaceName: {\n            required: true,\n            regex: '^[a-z0-9]{1}[a-z0-9-_]{0,63}$',\n        },\n        password: `required|min:${MIN_PASSWORD_LENGTH}|passwordRegex`,\n        previousPassword: 'required|confirmLock:cipher',\n        privateKey: 'min:64|max:64|privateKey',\n        recipientPublicKey: 'required|publicKey',\n        supply: `required|integer|min_value: 1|max_value:${maxMosaicAtomicUnits}`,\n        url: 'required|url',\n        newAccountName: 'required|newAccountName',\n        profileAccountName: 'required|profileAccountName',\n        addressOrPublicKey: 'addressOrPublicKey',\n        email: {\n            regex: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\\\.[a-zA-Z0-9-.]+$',\n        },\n        contactName: {\n            required: true,\n            regex: '^(?!\\\\s*$).+',\n        },\n    };\n};\n\n// TODO ValidationRuleset needs to be created when the network configuration is resolved, UI needs\n// to use the resolved ValidationResulset ATM rules are using the hardocded ones\nexport const ValidationRuleset = createValidationRuleSet(networkConfig.networkConfigurationDefaults);\n"],"sourceRoot":""}]}