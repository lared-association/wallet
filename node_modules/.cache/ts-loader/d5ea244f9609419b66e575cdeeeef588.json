{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/router/AppRouter.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/router/AppRouter.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/router/AppRouter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport Router, { RawLocation } from 'vue-router';\n// internal dependencies\nimport { routes } from '@/router/routes';\nimport { AppRoute } from './AppRoute';\nimport { TabEntry } from './TabEntry';\nimport { AppStore } from '@/app/AppStore';\nimport { ProfileService } from '@/services/ProfileService';\n\n/**\n * Extension of Vue Router\n * @class AppRouter\n * @extends {Router}\n */\nexport class AppRouter extends Router {\n    /**\n     * Application routes\n     */\n    public readonly routes: AppRoute[];\n\n    constructor(options) {\n        super(options);\n        this.routes = options.routes;\n        const originalPush = this.push;\n        this.push = (location: RawLocation) => {\n            return originalPush.call(this, location).catch(() => {\n                /* eslint */\n            });\n        };\n        this.beforeEach((to, from, next) => {\n            const service = new ProfileService();\n            const hasAccounts = service.getProfiles().length > 0;\n\n            // No account when app is opened: redirect to create account page\n            const skipRedirect: string[] = ['profiles.importProfile.importStrategy'];\n            if (!from.name && !hasAccounts && !skipRedirect.includes(to.name)) {\n                return next({ name: 'profiles.importProfile.importStrategy' });\n            }\n\n            if (!to.meta.protected) {\n                return next(/* no-redirect */);\n            }\n\n            const isAuthenticated = AppStore.getters['profile/isAuthenticated'] === true;\n            if (!isAuthenticated) {\n                return next({ name: 'profiles.login' });\n            }\n\n            return next();\n        });\n    }\n\n    /**\n     * Gets routes from Parent Route Name\n     * @param {string} [parentRouteName]\n     * @returns {AppRoute[]}\n     */\n    public getRoutes(parentRouteName?: string): AppRoute[] {\n        const parentRoute = this.getParentRoute(parentRouteName);\n        if (!parentRoute) {\n            return [];\n        }\n        return this.getChildRoutes(parentRoute);\n    }\n\n    /**\n     * Get Tab Entries from Parent Route Name\n     *\n     * @param {string} [parentRouteName]\n     * @returns {TabEntry[]}\n     */\n    public getTabEntries(parentRouteName?: string): TabEntry[] {\n        const routes = this.getRoutes(parentRouteName);\n        return TabEntry.getFromRoutes(routes);\n    }\n\n    /**\n     * Gets a route from string\n     * @private\n     * @param {string} [parentRouteName]\n     * @returns {RouteConfig[]}\n     */\n    private getParentRoute(parentRouteName: string = ''): AppRoute {\n        const routes = [...this.routes];\n\n        // - read custom route configuration\n        // - first top level route contains all app routes\n        // - second top level route contains login\n        const appRoute = routes.shift();\n        /* const loginRoute =*/ routes.shift();\n\n        if (!parentRouteName.length) {\n            return appRoute;\n        }\n\n        // - find requested top level route\n        const modules = ['dashboard', 'mosaics', 'multisig', 'namespaces', 'settings', 'accounts', 'community', 'harvesting', 'aggregate'];\n\n        // - app modules\n        const moduleRoutes = appRoute.children.filter(({ name }) => modules.includes(name));\n\n        // - find by name\n        const module = moduleRoutes.find((r) => r.name === parentRouteName);\n\n        // - name does not represent a top level route\n        if (undefined === module) {\n            throw new Error(`Top level (module) route with name '${parentRouteName}' does not exist.`);\n        }\n\n        return module;\n    }\n\n    /**\n     *  Gets child routes from a route\n     * @private\n     * @param {AppRoute[]} routes\n     * @returns {AppRoute[]}\n     */\n    private getChildRoutes(parentRoute: AppRoute): AppRoute[] {\n        if (!parentRoute.children) {\n            return [];\n        }\n        return [...parentRoute.children].filter(({ meta }) => !meta.hideFromMenu);\n    }\n}\n\n// create router instance\nconst router = new AppRouter({\n    mode: 'hash',\n    routes,\n});\n\nexport default router;\n"],"sourceRoot":""}]}