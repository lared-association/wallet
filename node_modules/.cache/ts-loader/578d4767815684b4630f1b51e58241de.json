{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransactionTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransactionTs.ts","mtime":1611927204689},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransactionTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH;;AACA,SAAS,SAAT,EAAoB,IAApB,QAAgC,wBAAhC;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CACA;;AACA,SAAS,sCAAT,QAAuD,gFAAvD;AAEA,SAAS,iBAAT,QAAkC,qCAAlC,C,CACA;AACA;AACA;;AACA,OAAO,YAAP,MAAyB,4CAAzB,C,CACA;;AACA,OAAO,4BAAP,MAAyC,8EAAzC,C,CACA;;AACA,OAAO,SAAP,MAAsB,uCAAtB;AACA,SAAS,gBAAT,QAAiC,6BAAjC;;AAWA,IAAa,wCAAb;AAAA;;AAAA;;AAAA,sDAAA;AAAA;;AAAA;;;AAII;;;AAGG;;AACI,UAAA,eAAA,GAAkB,iBAAlB;AARX;AAgFC;AAvEG;;;;;AAKG;;;AAdP;AAAA;;AAmEI;;;;;AAKG;AAxEP,mDAyE2C,SAzE3C,EAyE4D;AACpD,aAAO,gBAAgB,CAAC,aAAjB,CAA+B,KAAK,oBAApC,EAA0D,KAAK,aAA/D,EAA8E,SAA9E,CAAP;AACH;AA3EL;AAAA;AAAA,8BA6EiB;;;;;;AACT,qBAAK,MAAL,CAAY,QAAZ,CAAqB,kCAArB;;;;;;;;;AACH;AA/EL;AAAA;AAAA,wBAe2C;AAAA;;AACnC,UAAM,gBAAgB,GAAG,KAAK,UAAL,CAAgB,IAAhB,CAAqB,UAAC,KAAD;AAAA,eAAW,KAAK,CAAC,cAAN,KAAyB,MAAI,CAAC,WAAL,CAAiB,KAAjB,EAApC;AAAA,OAArB,CAAzB;AACA,aAAQ,gBAAgB,IAAI,gBAAgB,CAAC,SAAtC,IAAoD,CAA3D;AACH;AAED;;;;AAIG;;AAxBP;AAAA;AAAA,wBAyB2C;AAInC,aAAO,KAAK,8BAAL,CAAoC,KAAK,yBAAzC,CAAP;AACH;AAED;;;;;AAKG;;AArCP;AAAA;AAAA,wBAsC8B;AACtB,UAAM,uBAAuB,GAAG,KAAK,yBAArC;AACA,UAAM,aAAa,GAAG,MAAM,CAAC,KAAK,SAAL,CAAe,QAAhB,CAAN,GAAkC,uBAAxD;AACA,aAAO,KAAK,CAAC,aAAD,CAAL,GAAuB,uBAAvB,GAAiD,aAAxD;AACH;AAED;;;;;AAKG;;AAjDP;AAAA;AAAA,wBAkD6B;AACrB,aACI,KAAK,YAAL,GACA,KAAK,aADL,GAEA,IAAI,CAAC,KAAL,CAAW,KAAK,oBAAL,CAA0B,4BAA1B,GAAyD,KAAK,oBAAL,CAA0B,yBAA9F,CAHJ;AAKH;AAED;;;;AAIG;;AA9DP;AAAA;AAAA,wBA+DuC;AAC/B,aAAO,KAAK,8BAAL,CAAoC,KAAK,YAAzC,EAAuD,UAA9D;AACH;AAjEL;;AAAA;AAAA,EAA8D,sCAA9D,CAAA;;AAC6C,UAAA,CAAA,CAAxC,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE,IAAX;AAAiB,EAAA,QAAQ,EAAE;AAA3B,CAAD,CAAoC,CAAA,E,kDAAA,E,aAAA,E,KAAyB,CAAzB,CAAA;;AADhC,wCAAwC,GAAA,UAAA,CAAA,CARpD,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,YAAY,EAAZ,YAAF;AAAgB,IAAA,4BAA4B,EAA5B,4BAAhB;AAA8C,IAAA,SAAS,EAAT;AAA9C,GADL;AAEP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,UAAU,EAAE;AADF,GAAD,CADT;AAFD,CAAD,CAQ2C,CAAA,EAAxC,wCAAwC,CAAxC;SAAA,wC","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\nimport { FormNamespaceRegistrationTransactionTs } from '../FormNamespaceRegistrationTransaction/FormNamespaceRegistrationTransactionTs';\nimport { NamespaceId } from 'symbol-sdk';\nimport { ValidationRuleset } from '@/core/validation/ValidationRuleset';\n// configuration\n// child components\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';\n// @ts-ignore\nimport RentalFee from '@/components/RentalFees/RentalFee.vue';\nimport { NamespaceService } from '@/services/NamespaceService';\nimport { NamespaceModel } from '@/core/database/entities/NamespaceModel';\n\n@Component({\n    components: { ErrorTooltip, ModalTransactionConfirmation, RentalFee },\n    computed: {\n        ...mapGetters({\n            namespaces: 'namespace/namespaces',\n        }),\n    },\n})\nexport class FormExtendNamespaceDurationTransactionTs extends FormNamespaceRegistrationTransactionTs {\n    @Prop({ default: null, required: true }) namespaceId: NamespaceId;\n\n    private namespaces: NamespaceModel[];\n    /**\n     * Validation rules\n     * @var {ValidationRuleset}\n     */\n    public validationRules = ValidationRuleset;\n    /**\n     * Current namespace info\n     * @readonly\n     * @private\n     * @type {NamespaceInfo}\n     */\n    protected get currentNamespaceEndHeight(): number {\n        const currentNamespace = this.namespaces.find((model) => model.namespaceIdHex === this.namespaceId.toHex());\n        return (currentNamespace && currentNamespace.endHeight) || 0;\n    }\n\n    /**\n     * View of the namespace current expiration information\n     * @readonly\n     * @type {string}\n     */\n    protected get currentExpirationInfoView(): {\n        expired: boolean;\n        expiration: string;\n    } {\n        return this.getExpirationInfoFromEndHeight(this.currentNamespaceEndHeight);\n    }\n\n    /**\n     * Namespace new expiration height\n     * @readonly\n     * @protected\n     * @type {number}\n     */\n    protected get newEndHeight(): number {\n        const currentExpirationHeight = this.currentNamespaceEndHeight;\n        const newExpiration = Number(this.formItems.duration) + currentExpirationHeight;\n        return isNaN(newExpiration) ? currentExpirationHeight : newExpiration;\n    }\n\n    /**\n     * New namespace duration\n     * @readonly\n     * @protected\n     * @type {number}\n     */\n    protected get newDuration(): number {\n        return (\n            this.newEndHeight -\n            this.currentHeight -\n            Math.floor(this.networkConfiguration.namespaceGracePeriodDuration / this.networkConfiguration.blockGenerationTargetTime)\n        );\n    }\n\n    /**\n     * View of the new current expiration information\n     * @readonly\n     * @type {string}\n     */\n    protected get newExpirationInfoView(): string {\n        return this.getExpirationInfoFromEndHeight(this.newEndHeight).expiration;\n    }\n\n    /**\n     * Returns a view of a namespace expiration info\n     * @private\n     * @param {NamespaceInfo} mosaicInfo\n     * @returns {string}\n     */\n    private getExpirationInfoFromEndHeight(endHeight: number): { expiration: string; expired: boolean } {\n        return NamespaceService.getExpiration(this.networkConfiguration, this.currentHeight, endHeight);\n    }\n\n    async mounted() {\n        this.$store.dispatch('network/REST_NETWORK_RENTAL_FEES');\n    }\n}\n"],"sourceRoot":""}]}