{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/TransactionViewFactory.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/TransactionViewFactory.ts","mtime":1611927227277},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/TransactionViewFactory.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n    AddressAliasTransaction,\n    HashLockTransaction,\n    MosaicAliasTransaction,\n    MosaicDefinitionTransaction,\n    MosaicSupplyChangeTransaction,\n    MultisigAccountModificationTransaction,\n    NamespaceRegistrationTransaction,\n    Transaction,\n    TransactionType,\n    TransferTransaction,\n    AccountKeyLinkTransaction,\n    VotingKeyLinkTransaction,\n    VrfKeyLinkTransaction,\n    NodeKeyLinkTransaction,\n    AccountMetadataTransaction,\n    MosaicMetadataTransaction,\n    NamespaceMetadataTransaction,\n    AccountAddressRestrictionTransaction,\n    AccountMosaicRestrictionTransaction,\n    AccountOperationRestrictionTransaction,\n} from 'symbol-sdk';\nimport { ViewUnknownTransaction } from '@/core/transactions/ViewUnknownTransaction';\nimport { ViewHashLockTransaction } from '@/core/transactions/ViewHashLockTransaction';\nimport { ViewMultisigAccountModificationTransaction } from '@/core/transactions/ViewMultisigAccountModificationTransaction';\nimport { ViewMosaicDefinitionTransaction } from '@/core/transactions/ViewMosaicDefinitionTransaction';\nimport { ViewMosaicSupplyChangeTransaction } from '@/core/transactions/ViewMosaicSupplyChangeTransaction';\nimport { ViewNamespaceRegistrationTransaction } from '@/core/transactions/ViewNamespaceRegistrationTransaction';\nimport { ViewTransferTransaction } from '@/core/transactions/ViewTransferTransaction';\nimport { ViewAliasTransaction } from '@/core/transactions/ViewAliasTransaction';\nimport { ViewAccountKeyLinkTransaction } from '@/core/transactions/ViewAccountKeyLinkTransaction';\nimport { Store } from 'vuex';\nimport { TransactionView } from '@/core/transactions/TransactionView';\nimport { ViewVotingKeyLinkTransaction } from '@/core/transactions/ViewVotingKeyLinkTransaction';\nimport { ViewVrfKeyLinkTransaction } from '@/core/transactions/ViewVrfKeyLinkTransaction';\nimport { ViewNodeKeyLinkTransaction } from './ViewNodeKeyLinkTransaction';\nimport { ViewAccountMetadataTransaction } from '@/core/transactions/ViewAccountMetadataTransaction';\nimport { ViewNamespaceMetadataTransaction } from '@/core/transactions/ViewNamespaceMetadataTransaction';\nimport { ViewMosaicMetadataTransaction } from '@/core/transactions/ViewMosaicMetadataTransaction';\nimport { ViewAccountAddressRestrictionTransaction } from './ViewAccountAddressRestrictionTransaction';\nimport { ViewAccountMosaicRestrictionTransaction } from './ViewAccountMosaicRestrictionTransaction';\nimport { ViewAccountOperationRestrictionTransaction } from './ViewAccountOperationRestrictionTransaction';\n\n/**\n * Transaction view factory.\n */\nexport class TransactionViewFactory {\n    /**\n     * It creates the view for the given transaction.\n     *\n     * @param $store the vue store.\n     * @param transaction the transaction.\n     */\n    public static getView($store: Store<any>, transaction: Transaction): TransactionView<Transaction> {\n        switch (transaction.type) {\n            /// region XXX views for transaction types not yet implemented\n            case TransactionType.AGGREGATE_BONDED:\n            case TransactionType.AGGREGATE_COMPLETE:\n            case TransactionType.MOSAIC_ADDRESS_RESTRICTION:\n            case TransactionType.MOSAIC_GLOBAL_RESTRICTION:\n            case TransactionType.SECRET_LOCK:\n            case TransactionType.SECRET_PROOF:\n                return new ViewUnknownTransaction($store, transaction);\n            /// end-region XXX views for transaction types not yet implemented\n            case TransactionType.ACCOUNT_ADDRESS_RESTRICTION:\n                return new ViewAccountAddressRestrictionTransaction($store, transaction as AccountAddressRestrictionTransaction);\n            case TransactionType.ACCOUNT_MOSAIC_RESTRICTION:\n                return new ViewAccountMosaicRestrictionTransaction($store, transaction as AccountMosaicRestrictionTransaction);\n            case TransactionType.ACCOUNT_OPERATION_RESTRICTION:\n                return new ViewAccountOperationRestrictionTransaction($store, transaction as AccountOperationRestrictionTransaction);\n            case TransactionType.ACCOUNT_METADATA:\n                return new ViewAccountMetadataTransaction($store, transaction as AccountMetadataTransaction);\n            case TransactionType.MOSAIC_METADATA:\n                return new ViewMosaicMetadataTransaction($store, transaction as MosaicMetadataTransaction);\n            case TransactionType.NAMESPACE_METADATA:\n                return new ViewNamespaceMetadataTransaction($store, transaction as NamespaceMetadataTransaction);\n            case TransactionType.HASH_LOCK:\n                return new ViewHashLockTransaction($store, transaction as HashLockTransaction);\n            case TransactionType.MULTISIG_ACCOUNT_MODIFICATION:\n                return new ViewMultisigAccountModificationTransaction($store, transaction as MultisigAccountModificationTransaction);\n            case TransactionType.VRF_KEY_LINK:\n                return new ViewVrfKeyLinkTransaction($store, transaction as VrfKeyLinkTransaction);\n            case TransactionType.NODE_KEY_LINK:\n                return new ViewNodeKeyLinkTransaction($store, transaction as NodeKeyLinkTransaction);\n            case TransactionType.VOTING_KEY_LINK:\n                return new ViewVotingKeyLinkTransaction($store, transaction as VotingKeyLinkTransaction);\n            case TransactionType.MOSAIC_DEFINITION:\n                return new ViewMosaicDefinitionTransaction($store, transaction as MosaicDefinitionTransaction);\n            case TransactionType.MOSAIC_SUPPLY_CHANGE:\n                return new ViewMosaicSupplyChangeTransaction($store, transaction as MosaicSupplyChangeTransaction);\n            case TransactionType.NAMESPACE_REGISTRATION:\n                return new ViewNamespaceRegistrationTransaction($store, transaction as NamespaceRegistrationTransaction);\n            case TransactionType.TRANSFER:\n                return new ViewTransferTransaction($store, transaction as TransferTransaction);\n            case TransactionType.MOSAIC_ALIAS:\n                return new ViewAliasTransaction($store, transaction as MosaicAliasTransaction);\n            case TransactionType.ADDRESS_ALIAS:\n                return new ViewAliasTransaction($store, transaction as AddressAliasTransaction);\n            case TransactionType.ACCOUNT_KEY_LINK:\n                return new ViewAccountKeyLinkTransaction($store, transaction as AccountKeyLinkTransaction);\n            default:\n                throw new Error(`View not implemented for transaction type '${transaction.type}'`);\n        }\n    }\n}\n"],"sourceRoot":""}]}