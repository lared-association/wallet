{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/validation/validators/PublicKeyValidator.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/validation/validators/PublicKeyValidator.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KCmltcG9ydCB7IE5ldHdvcmtUeXBlLCBQdWJsaWNBY2NvdW50IH0gZnJvbSAnc3ltYm9sLXNkayc7IC8vIGludGVybmFsIGRlcGVuZGVuY2llcwoKaW1wb3J0IHsgc3RhdGljSW1wbGVtZW50cyB9IGZyb20gJy4vVmFsaWRhdG9yJzsKCnZhciBQdWJsaWNLZXlWYWxpZGF0b3IgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFB1YmxpY0tleVZhbGlkYXRvcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQdWJsaWNLZXlWYWxpZGF0b3IpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFB1YmxpY0tleVZhbGlkYXRvciwgbnVsbCwgW3sKICAgIGtleTogInZhbGlkYXRlIiwKCiAgICAvKioKICAgICAqIEV4ZWN1dGVzIHRoZSB2YWxpZGF0b3IKICAgICAqIEBzdGF0aWMKICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUKICAgICAqIEByZXR1cm5zIHtib29sZWFufQogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGUodmFsdWUpIHsKICAgICAgdHJ5IHsKICAgICAgICAvKiogVGhlIE5ldHdvcmtUeXBlIGJlbG93IGlzIGZvciBwdWJsaWMga2V5IHRlc3Rpbmcgb25seSAqLwogICAgICAgIFB1YmxpY0FjY291bnQuY3JlYXRlRnJvbVB1YmxpY0tleSh2YWx1ZSwgTmV0d29ya1R5cGUuVEVTVF9ORVQpOwogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBQdWJsaWNLZXlWYWxpZGF0b3I7Cn0oKTsKClB1YmxpY0tleVZhbGlkYXRvciA9IF9fZGVjb3JhdGUoW3N0YXRpY0ltcGxlbWVudHMoKV0sIFB1YmxpY0tleVZhbGlkYXRvcik7CmV4cG9ydCB7IFB1YmxpY0tleVZhbGlkYXRvciB9Ow=="},{"version":3,"sources":["/home/hero/lared-wallet/src/core/validation/validators/PublicKeyValidator.ts"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,WAAT,EAAsB,aAAtB,QAA2C,YAA3C,C,CAEA;;AACA,SAAoB,gBAApB,QAA4C,aAA5C;;AAGA,IAAa,kBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACI;;;;;;AADJ,6BAO2B,KAP3B,EAOqC;AAC7B,UAAI;AACA;AACA,QAAA,aAAa,CAAC,mBAAd,CAAkC,KAAlC,EAAyC,WAAW,CAAC,QAArD;AACA,eAAO,KAAP;AACH,OAJD,CAIE,OAAO,KAAP,EAAc;AACZ,eAAO,KAAP;AACH;AACJ;AAfL;;AAAA;AAAA,GAAA;;AAAa,kBAAkB,GAAA,UAAA,CAAA,CAD9B,gBAAgB,EACc,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { NetworkType, PublicAccount } from 'symbol-sdk';\n\n// internal dependencies\nimport { Validator, staticImplements } from './Validator';\n\n@staticImplements<Validator>()\nexport class PublicKeyValidator {\n    /**\n     * Executes the validator\n     * @static\n     * @param {*} value\n     * @returns {boolean}\n     */\n    public static validate(value: any): boolean {\n        try {\n            /** The NetworkType below is for public key testing only */\n            PublicAccount.createFromPublicKey(value, NetworkType.TEST_NET);\n            return value;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n"],"sourceRoot":""}]}