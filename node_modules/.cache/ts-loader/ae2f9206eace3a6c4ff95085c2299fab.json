{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/app/AppTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/app/AppTs.ts","mtime":1606213958949},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7Ci8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsgLy8gY2hpbGQgY29tcG9uZW50cwovLyBAdHMtaWdub3JlCgppbXBvcnQgRGlzYWJsZWRVaU92ZXJsYXkgZnJvbSAnQC9jb21wb25lbnRzL0Rpc2FibGVkVWlPdmVybGF5L0Rpc2FibGVkVWlPdmVybGF5LnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBTcGlubmVyTG9hZGluZyBmcm9tICdAL2NvbXBvbmVudHMvU3Bpbm5lckxvYWRpbmcvU3Bpbm5lckxvYWRpbmcudnVlJzsKCnZhciBBcHBUcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhBcHBUcywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXBwVHMpOwoKICBmdW5jdGlvbiBBcHBUcygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXBwVHMpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAvKioKICAgICAqIERpc3BsYXkgdGhlIGFwcGxpY2F0aW9uIHZlcnNpb24uIFRoaXMgaXMgaW5qZWN0ZWQgaW4gdGhlIGFwcCB3aGVuIGJ1aWx0LgogICAgICovCgogICAgX3RoaXMucGFja2FnZVZlcnNpb24gPSBwcm9jZXNzLmVudi5QQUNLQUdFX1ZFUlNJT04gfHwgJzAnOwogICAgLyoqCiAgICAgKiBEaXNwbGF5IHRoZSB3ZWIgd2FsbGV0IHdhcm5pbmcuIFRoaXMgaXMgaW5qZWN0ZWQgaW4gdGhlIGFwcCB3aGVuIGJ1aWx0LgogICAgICovCgogICAgX3RoaXMud2ViID0gcHJvY2Vzcy5lbnYuV0VCIHx8IGZhbHNlOwogICAgcmV0dXJuIF90aGlzOwogIH0KICAvKioKICAgKiBIb29rIGNhbGxlZCB3aGVuIHRoZSBhcHAgaXMgc3RhcnRlZAogICAqIEByZXR1cm4ge3ZvaWR9CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoQXBwVHMsIFt7CiAgICBrZXk6ICJjcmVhdGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgICB0aGlzLmluaXRpYWxpemUoKTsKICAgIH0KICAgIC8qKgogICAgICogSG9vayBjYWxsZWQgd2hlbiB0aGUgYXBwIGlzIGNsb3NlZAogICAgICogQHJldHVybiB7dm9pZH0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJkZXN0cm95ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgICAgdGhpcy51bmluaXRpYWxpemUoKTsKICAgIH0KICAgIC8qKgogICAgICogSW5pdGlhbGl6ZSB0aGUgYXBwIHN0b3JlCiAgICAgKiBAc2VlIHtTdG9yZS5BcHBJbmZvfQogICAgICovCgogIH0sIHsKICAgIGtleTogImluaXRpYWxpemUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdpbml0aWFsaXplJylbImNhdGNoIl0oZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgICAvKioKICAgICAqIFVuaW5pdGlhbGl6ZSB0aGUgYXBwIHN0b3JlCiAgICAgKiBAc2VlIHtTdG9yZS5BcHBJbmZvfQogICAgICovCgogIH0sIHsKICAgIGtleTogInVuaW5pdGlhbGl6ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdW5pbml0aWFsaXplKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndW5pbml0aWFsaXplJyk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQXBwVHM7Cn0oVnVlKTsKCkFwcFRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wdXRlZDogT2JqZWN0LmFzc2lnbih7fSwgbWFwR2V0dGVycyh7CiAgICBoYXNMb2FkaW5nT3ZlcmxheTogJ2FwcC9zaG91bGRTaG93TG9hZGluZ092ZXJsYXknLAogICAgY3VycmVudFByb2ZpbGU6ICdwcm9maWxlL2N1cnJlbnRQcm9maWxlJwogIH0pKSwKICBjb21wb25lbnRzOiB7CiAgICBEaXNhYmxlZFVpT3ZlcmxheTogRGlzYWJsZWRVaU92ZXJsYXksCiAgICBTcGlubmVyTG9hZGluZzogU3Bpbm5lckxvYWRpbmcKICB9Cn0pXSwgQXBwVHMpOwpleHBvcnQgeyBBcHBUcyB9Ow=="},{"version":3,"sources":["/home/hero/lared-wallet/src/app/AppTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CACA;AACA;;AACA,OAAO,iBAAP,MAA8B,sDAA9B,C,CACA;;AACA,OAAO,cAAP,MAA2B,gDAA3B;;AAcA,IAAa,KAAb;AAAA;;AAAA;;AAAA,mBAAA;AAAA;;AAAA;;;AACI;;;;AAGO,UAAA,cAAA,GAAiB,OAAO,CAAC,GAAR,CAAY,eAAZ,IAA+B,GAAhD;AAEP;;;;AAGO,UAAA,GAAA,GAAM,OAAO,CAAC,GAAR,CAAY,GAAZ,IAAmB,KAAzB;AATX;AAuDC;AA/BG;;;;;;AAxBJ;AAAA;AAAA,8BA4BkB;AACV,WAAK,UAAL;AACH;AAED;;;;;AAhCJ;AAAA;AAAA,gCAoCoB;AACZ,WAAK,YAAL;AACH;AAED;;;;;AAxCJ;AAAA;AAAA,iCA4CwB;AAChB,WAAK,MAAL,CAAY,QAAZ,CAAqB,YAArB,WAAyC,UAAC,KAAD;AAAA,eAAW,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAX;AAAA,OAAzC;AACH;AAED;;;;;AAhDJ;AAAA;AAAA,mCAoD0B;AAClB,WAAK,MAAL,CAAY,QAAZ,CAAqB,cAArB;AACH;AAtDL;;AAAA;AAAA,EAA2B,GAA3B,CAAA;;AAAa,KAAK,GAAA,UAAA,CAAA,CAZjB,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,iBAAiB,EAAE,8BADT;AAEV,IAAA,cAAc,EAAE;AAFN,GAAD,CADT,CADD;AAOP,EAAA,UAAU,EAAE;AACR,IAAA,iBAAiB,EAAjB,iBADQ;AAER,IAAA,cAAc,EAAd;AAFQ;AAPL,CAAD,CAYQ,CAAA,EAAL,KAAK,CAAL;SAAA,K","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// child components\n// @ts-ignore\nimport DisabledUiOverlay from '@/components/DisabledUiOverlay/DisabledUiOverlay.vue';\n// @ts-ignore\nimport SpinnerLoading from '@/components/SpinnerLoading/SpinnerLoading.vue';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            hasLoadingOverlay: 'app/shouldShowLoadingOverlay',\n            currentProfile: 'profile/currentProfile',\n        }),\n    },\n    components: {\n        DisabledUiOverlay,\n        SpinnerLoading,\n    },\n})\nexport class AppTs extends Vue {\n    /**\n     * Display the application version. This is injected in the app when built.\n     */\n    public packageVersion = process.env.PACKAGE_VERSION || '0';\n\n    /**\n     * Display the web wallet warning. This is injected in the app when built.\n     */\n    public web = process.env.WEB || false;\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {string}\n     */\n    public currentProfile: string;\n\n    /**\n     * Whether a loading overlay must be displayed\n     * @see {Store.App}\n     * @var {boolean}\n     */\n    public hasLoadingOverlay: boolean;\n\n    /**\n     * Hook called when the app is started\n     * @return {void}\n     */\n    public created() {\n        this.initialize();\n    }\n\n    /**\n     * Hook called when the app is closed\n     * @return {void}\n     */\n    public destroyed() {\n        this.uninitialize();\n    }\n\n    /**\n     * Initialize the app store\n     * @see {Store.AppInfo}\n     */\n    protected initialize() {\n        this.$store.dispatch('initialize').catch((error) => console.log(error));\n    }\n\n    /**\n     * Uninitialize the app store\n     * @see {Store.AppInfo}\n     */\n    protected uninitialize() {\n        this.$store.dispatch('uninitialize');\n    }\n}\n"],"sourceRoot":""}]}