{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountContactQR/AccountContactQRTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountContactQR/AccountContactQRTs.ts","mtime":1611927226728},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKaW1wb3J0IHsgQ29tcG9uZW50LCBQcm9wLCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgQ29udGFjdFFSIH0gZnJvbSAnc3ltYm9sLXFyLWxpYnJhcnknOyAvLyBpbnRlcm5hbCBkZXBlbmRlbmNpZXMKCmltcG9ydCB7IEFjY291bnRNb2RlbCB9IGZyb20gJ0AvY29yZS9kYXRhYmFzZS9lbnRpdGllcy9BY2NvdW50TW9kZWwnOyAvLyByZXNvdXJjZXMKCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsgLy8gQHRzLWlnbm9yZQoKaW1wb3J0IFFSQ29kZURpc3BsYXkgZnJvbSAnQC9jb21wb25lbnRzL1FSQ29kZS9RUkNvZGVEaXNwbGF5L1FSQ29kZURpc3BsYXkudnVlJzsKCnZhciBBY2NvdW50Q29udGFjdFFSVHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQWNjb3VudENvbnRhY3RRUlRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBY2NvdW50Q29udGFjdFFSVHMpOwoKICBmdW5jdGlvbiBBY2NvdW50Q29udGFjdFFSVHMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNjb3VudENvbnRhY3RRUlRzKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQWNjb3VudENvbnRhY3RRUlRzLCBbewogICAga2V5OiAicXJDb2RlQXJncyIsCiAgICAvLy8gcmVnaW9uIGNvbXB1dGVkIHByb3BlcnRpZXMgZ2V0dGVyL3NldHRlcgogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICghdGhpcy5hY2NvdW50KSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgdmFyIHB1YmxpY0FjY291bnQgPSBBY2NvdW50TW9kZWwuZ2V0T2JqZWN0cyh0aGlzLmFjY291bnQpLnB1YmxpY0FjY291bnQ7CiAgICAgICAgcmV0dXJuIG5ldyBDb250YWN0UVIodGhpcy5hY2NvdW50Lm5hbWUsIHB1YmxpY0FjY291bnQucHVibGljS2V5LCBwdWJsaWNBY2NvdW50LmFkZHJlc3MubmV0d29ya1R5cGUsIHRoaXMuZ2VuZXJhdGlvbkhhc2gpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAiZG93bmxvYWROYW1lIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5hY2NvdW50ID8gImFkZHJlc3MtcXItIi5jb25jYXQodGhpcy5hY2NvdW50Lm5hbWUsICIucG5nIikgOiAnJzsKICAgIH0KICB9XSk7CgogIHJldHVybiBBY2NvdW50Q29udGFjdFFSVHM7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIGRlZmF1bHQ6IG51bGwKfSldLCBBY2NvdW50Q29udGFjdFFSVHMucHJvdG90eXBlLCAiYWNjb3VudCIsIHZvaWQgMCk7CgpBY2NvdW50Q29udGFjdFFSVHMgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIFFSQ29kZURpc3BsYXk6IFFSQ29kZURpc3BsYXkKICB9LAogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGdlbmVyYXRpb25IYXNoOiAnbmV0d29yay9nZW5lcmF0aW9uSGFzaCcKICB9KSkKfSldLCBBY2NvdW50Q29udGFjdFFSVHMpOwpleHBvcnQgeyBBY2NvdW50Q29udGFjdFFSVHMgfTs="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountContactQR/AccountContactQRTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC;AACA,SAAS,SAAT,QAA0B,mBAA1B,C,CAEA;;AACA,SAAS,YAAT,QAA6B,uCAA7B,C,CACA;;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CACA;;AACA,OAAO,aAAP,MAA0B,qDAA1B;;AAWA,IAAa,kBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAYI;AAZJ,wBAakB;AACV,UAAI,CAAC,KAAK,OAAV,EAAmB;AACf,eAAO,IAAP;AACH;;AAED,UAAI;AACA,YAAM,aAAa,GAAkB,YAAY,CAAC,UAAb,CAAwB,KAAK,OAA7B,EAAsC,aAA3E;AACA,eAAO,IAAI,SAAJ,CAAc,KAAK,OAAL,CAAa,IAA3B,EAAiC,aAAa,CAAC,SAA/C,EAA0D,aAAa,CAAC,OAAd,CAAsB,WAAhF,EAA6F,KAAK,cAAlG,CAAP;AACH,OAHD,CAGE,OAAO,KAAP,EAAc;AACZ,eAAO,IAAP;AACH;AACJ;AAxBL;AAAA;AAAA,wBA0BoB;AACZ,aAAO,KAAK,OAAL,wBAA6B,KAAK,OAAL,CAAa,IAA1C,YAAuD,EAA9D;AACH;AA5BL;;AAAA;AAAA,EAAwC,GAAxC,CAAA;;AAII,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,4BAAA,E,SAAA,E,KAAsB,CAAtB,CAAA;;AAJS,kBAAkB,GAAA,UAAA,CAAA,CAV9B,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,aAAa,EAAb;AADQ,GADL;AAIP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,cAAc,EAAE;AADN,GAAD,CADT;AAJD,CAAD,CAUqB,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { ContactQR } from 'symbol-qr-library';\nimport { PublicAccount } from 'symbol-sdk';\n// internal dependencies\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n// resources\nimport { mapGetters } from 'vuex';\n// @ts-ignore\nimport QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';\n@Component({\n    components: {\n        QRCodeDisplay,\n    },\n    computed: {\n        ...mapGetters({\n            generationHash: 'network/generationHash',\n        }),\n    },\n})\nexport class AccountContactQRTs extends Vue {\n    @Prop({\n        default: null,\n    })\n    account: AccountModel;\n\n    /**\n     * Current network's generation hash\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /// region computed properties getter/setter\n    get qrCodeArgs(): ContactQR {\n        if (!this.account) {\n            return null;\n        }\n\n        try {\n            const publicAccount: PublicAccount = AccountModel.getObjects(this.account).publicAccount;\n            return new ContactQR(this.account.name, publicAccount.publicKey, publicAccount.address.networkType, this.generationHash);\n        } catch (error) {\n            return null;\n        }\n    }\n\n    get downloadName(): string {\n        return this.account ? `address-qr-${this.account.name}.png` : '';\n    }\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}