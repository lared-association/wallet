{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/services/AssetTableService/NamespaceTableService.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/services/AssetTableService/NamespaceTableService.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/services/AssetTableService/NamespaceTableService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeA;AACA,SAAS,SAAT,QAA0B,YAA1B,C,CACA;;AACA,SAAS,iBAAT,QAA8C,qBAA9C;AAEA,SAAS,gBAAT,QAAiC,6BAAjC;AAGA,WAAa,qBAAb;AAAA;;AAAA;;AACI,iCACI,aADJ,EAEqB,UAFrB,EAGqB,oBAHrB,EAGoE;AAAA;;AAAA;;AAEhE,8BAAM,aAAN;AAHiB,UAAA,UAAA,GAAA,UAAA;AACA,UAAA,oBAAA,GAAA,oBAAA;AAA+C;AAGnE;AAED;;;;;;AATJ;AAAA;AAAA,qCAayB;AACjB,aAAO,CACH;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE;AAAxB,OADG,EAEH;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,KAAK,EAAE;AAAvB,OAFG,EAGH;AAAE,QAAA,IAAI,EAAE,YAAR;AAAsB,QAAA,KAAK,EAAE;AAA7B,OAHG,EAIH;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,KAAK,EAAE;AAA1B,OAJG,EAKH;AAAE,QAAA,IAAI,EAAE,WAAR;AAAqB,QAAA,KAAK,EAAE;AAA5B,OALG,EAMH;AAAE,QAAA,IAAI,EAAE,iBAAR;AAA2B,QAAA,KAAK,EAAE;AAAlC,OANG,CAAP;AAQH;AAtBL;AAAA;AAAA,mCAwBuB;AAAA;;AACf,UAAM,UAAU,GAAqB,KAAK,UAA1C;AAEA,aAAO,UAAU,CAAC,GAAX,CAAe,UAAC,cAAD,EAAmB;AAAA,mCACL,MAAI,CAAC,aAAL,CAAmB,cAAnB,CADK;AAAA,YAC7B,OAD6B,wBAC7B,OAD6B;AAAA,YACpB,UADoB,wBACpB,UADoB;;AAGrC,eAAO;AACH,UAAA,KAAK,EAAE,cAAc,CAAC,cADnB;AAEH,UAAA,IAAI,EAAE,cAAc,CAAC,IAFlB;AAGH,UAAA,UAAU,EAAE,UAHT;AAIH,UAAA,OAAO,EAAE,OAJN;AAKH,UAAA,SAAS,EAAE,MAAI,CAAC,YAAL,CAAkB,cAAlB,CALR;AAMH,UAAA,eAAe,EAAE,MAAI,CAAC,kBAAL,CAAwB,cAAxB,CANd;AAOH,UAAA,YAAY,EAAE,cAAc,CAAC,YAAf,IAA+B;AAP1C,SAAP;AASH,OAZM,CAAP;AAaH;AAED;;;;;;;AA1CJ;AAAA;AAAA,iCAgDyB,cAhDzB,EAgDuD;AAC/C,UAAI,CAAC,cAAc,CAAC,0BAAhB,IAA8C,CAAC,cAAc,CAAC,sBAAlE,EAA0F;AACtF,eAAO,KAAP;AACH;;AACD,aAAO,cAAc,CAAC,SAAf,KAA6B,SAAS,CAAC,OAAvC,GAAiD,SAAjD,GAA6D,QAApE;AACH;AAED;;;;;;;AAvDJ;AAAA;AAAA,uCA6D+B,cA7D/B,EA6D6D;AACrD,aAAO,cAAc,CAAC,sBAAf,IAAyC,cAAc,CAAC,0BAAxD,IAAsF,KAA7F;AACH;AAED;;;;;;;AAjEJ;AAAA;AAAA,kCAuE0B,cAvE1B,EAuEwD;AAChD,aAAO,gBAAgB,CAAC,aAAjB,CAA+B,KAAK,oBAApC,EAA0D,KAAK,aAA/D,EAA8E,cAAc,CAAC,SAA7F,CAAP;AACH;AAzEL;;AAAA;AAAA,EAA2C,iBAA3C","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { AliasType } from 'symbol-sdk';\n// internal dependencies\nimport { AssetTableService, TableField } from './AssetTableService';\nimport { NamespaceModel } from '@/core/database/entities/NamespaceModel';\nimport { NamespaceService } from '@/services/NamespaceService';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\nexport class NamespaceTableService extends AssetTableService {\n    constructor(\n        currentHeight: number,\n        private readonly namespaces: NamespaceModel[],\n        private readonly networkConfiguration: NetworkConfigurationModel,\n    ) {\n        super(currentHeight);\n    }\n\n    /**\n     * Return table fields to be displayed in a table header\n     * @returns {TableField[]}\n     */\n    public getTableFields(): TableField[] {\n        return [\n            { name: 'hexId', label: 'table_header_hex_id' },\n            { name: 'name', label: 'table_header_name' },\n            { name: 'expiration', label: 'table_header_expiration' },\n            { name: 'expired', label: 'table_header_expired' },\n            { name: 'aliasType', label: 'table_header_alias_type' },\n            { name: 'aliasIdentifier', label: 'table_header_alias_identifier' },\n        ];\n    }\n\n    public getTableRows(): any[] {\n        const namespaces: NamespaceModel[] = this.namespaces;\n\n        return namespaces.map((namespaceModel) => {\n            const { expired, expiration } = this.getExpiration(namespaceModel);\n\n            return {\n                hexId: namespaceModel.namespaceIdHex,\n                name: namespaceModel.name,\n                expiration: expiration,\n                expired: expired,\n                aliasType: this.getAliasType(namespaceModel),\n                aliasIdentifier: this.getAliasIdentifier(namespaceModel),\n                metadataList: namespaceModel.metadataList || [],\n            };\n        });\n    }\n\n    /**\n     * Gets the namespace type to be displayed in the table\n     * @private\n     * @param the namespace model.\n     * @returns {('N/A' | 'address' | 'mosaic')}\n     */\n    private getAliasType(namespaceModel: NamespaceModel): 'N/A' | 'address' | 'mosaic' {\n        if (!namespaceModel.aliasTargetAddressRawPlain && !namespaceModel.aliasTargetMosaicIdHex) {\n            return 'N/A';\n        }\n        return namespaceModel.aliasType === AliasType.Address ? 'address' : 'mosaic';\n    }\n\n    /**\n     * Gets the namespace identifier to be displayed in the table\n     * @private\n     * @param the namespace model.\n     * @returns {string}\n     */\n    private getAliasIdentifier(namespaceModel: NamespaceModel): string {\n        return namespaceModel.aliasTargetMosaicIdHex || namespaceModel.aliasTargetAddressRawPlain || 'N/A';\n    }\n\n    /**\n     * Returns a view of a namespace expiration info\n     * @public\n     * @param the namespace model.\n     * @returns {string}\n     */\n    private getExpiration(namespaceModel: NamespaceModel): { expiration: string; expired: boolean } {\n        return NamespaceService.getExpiration(this.networkConfiguration, this.currentHeight, namespaceModel.endHeight);\n    }\n}\n"],"sourceRoot":""}]}