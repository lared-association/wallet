{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/NetworkStatisticsPanel/NetworkStatisticsPanelTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/NetworkStatisticsPanel/NetworkStatisticsPanelTs.ts","mtime":1611927202522},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOyAvLyBjb25maWd1cmF0aW9uCi8vIGNoaWxkIGNvbXBvbmVudHMKLy8gQHRzLWlnbm9yZQovLyBAdHMtaWdub3JlCgppbXBvcnQgeyBvZmZpY2lhbEljb25zIH0gZnJvbSAnQC92aWV3cy9yZXNvdXJjZXMvSW1hZ2VzJzsKaW1wb3J0IHsgQWNjb3VudFR5cGUgYXMgUHJvZmlsZVR5cGUgfSBmcm9tICdAL2NvcmUvZGF0YWJhc2UvZW50aXRpZXMvQWNjb3VudE1vZGVsJzsKCnZhciBOZXR3b3JrU3RhdGlzdGljc1BhbmVsVHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoTmV0d29ya1N0YXRpc3RpY3NQYW5lbFRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihOZXR3b3JrU3RhdGlzdGljc1BhbmVsVHMpOwoKICBmdW5jdGlvbiBOZXR3b3JrU3RhdGlzdGljc1BhbmVsVHMoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5ldHdvcmtTdGF0aXN0aWNzUGFuZWxUcyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIC8qKgogICAgICogVGhlIGljb25zIHJlc291cmNlcy4KICAgICAqLwoKICAgIF90aGlzLm9mZmljaWFsSWNvbnMgPSBvZmZpY2lhbEljb25zOwogICAgLyoqCiAgICAgKiBXaGV0aGVyIGhhcnZlc3Rpbmcgd2l6YXJkIGlzIGN1cnJlbnRseSBkaXNwbGF5ZWQKICAgICAqLwoKICAgIF90aGlzLmlzSGFydmVzdGluZ1dpemFyZERpc3BsYXllZCA9IGZhbHNlOwogICAgLyoqCiAgICAgKiBUaGUgc3VwcG9ydGVkIHByb2ZpbGUgdHlwZXMgZm9yIGhhcnZlc3RpbmcKICAgICAqLwoKICAgIF90aGlzLmhhcnZlc3RpbmdTdXBwb3J0ZWRQcm9maWxlVHlwZXMgPSBbUHJvZmlsZVR5cGUuU0VFRF07CiAgICAvKioKICAgICAqIFdoZXRoZXIgaGFydmVzdGluZyBpcyBlbmFibGVkIGZvciBjdXJyZW50IGFjY291bnQKICAgICAqLwoKICAgIF90aGlzLmlzSGFydmVzdGluZ0VuYWJsZWQgPSBmYWxzZTsKICAgIHJldHVybiBfdGhpczsKICB9CiAgLyoqCiAgICogQ3VycmVudCBuZXR3b3JrIHRhcmdldCBibG9jayB0aW1lCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoTmV0d29ya1N0YXRpc3RpY3NQYW5lbFRzLCBbewogICAga2V5OiAiY3JlYXRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudEFjY291bnQpIHsKICAgICAgICB0aGlzLmlzSGFydmVzdGluZ0VuYWJsZWQgPSB0aGlzLmhhcnZlc3RpbmdTdXBwb3J0ZWRQcm9maWxlVHlwZXMuaW5jbHVkZXModGhpcy5jdXJyZW50QWNjb3VudC50eXBlKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImJsb2NrR2VuZXJhdGlvblRhcmdldFRpbWUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLm5ldHdvcmtDb25maWd1cmF0aW9uLmJsb2NrR2VuZXJhdGlvblRhcmdldFRpbWU7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTmV0d29ya1N0YXRpc3RpY3NQYW5lbFRzOwp9KFZ1ZSk7CgpOZXR3b3JrU3RhdGlzdGljc1BhbmVsVHMgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGN1cnJlbnRBY2NvdW50OiAnYWNjb3VudC9jdXJyZW50QWNjb3VudCcsCiAgICBuZXR3b3JrQ29uZmlndXJhdGlvbjogJ25ldHdvcmsvbmV0d29ya0NvbmZpZ3VyYXRpb24nLAogICAgY291bnRUcmFuc2FjdGlvbnM6ICdzdGF0aXN0aWNzL2NvdW50VHJhbnNhY3Rpb25zJywKICAgIGNvdW50QWNjb3VudHM6ICdzdGF0aXN0aWNzL2NvdW50QWNjb3VudHMnLAogICAgY291bnROb2RlczogJ3N0YXRpc3RpY3MvY291bnROb2RlcycsCiAgICBjdXJyZW50SGVpZ2h0OiAnbmV0d29yay9jdXJyZW50SGVpZ2h0JywKICAgIGN1cnJlbnRQZWVySW5mbzogJ25ldHdvcmsvY3VycmVudFBlZXJJbmZvJwogIH0pKQp9KV0sIE5ldHdvcmtTdGF0aXN0aWNzUGFuZWxUcyk7CmV4cG9ydCB7IE5ldHdvcmtTdGF0aXN0aWNzUGFuZWxUcyB9Ow=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/NetworkStatisticsPanel/NetworkStatisticsPanelTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CACA;AACA;AACA;AACA;;AACA,SAAS,aAAT,QAA8B,0BAA9B;AAEA,SAAuB,WAAW,IAAI,WAAtC,QAAyD,uCAAzD;;AAiBA,IAAa,wBAAb;AAAA;;AAAA;;AAAA,sCAAA;AAAA;;AAAA;;;AACI;;AAEG;;AACI,UAAA,aAAA,GAAgB,aAAhB;AAqCP;;AAEG;;AACO,UAAA,2BAAA,GAA8B,KAA9B;AAEV;;AAEG;;AACO,UAAA,+BAAA,GAAiD,CAAC,WAAW,CAAC,IAAb,CAAjD;AAEV;;AAEG;;AACO,UAAA,mBAAA,GAAsB,KAAtB;AAtDd;AAoEC;AAZG;;AAEG;;;AA1DP;AAAA;AAAA,8BA+DkB;AACV,UAAI,KAAK,cAAT,EAAyB;AACrB,aAAK,mBAAL,GAA2B,KAAK,+BAAL,CAAqC,QAArC,CAA8C,KAAK,cAAL,CAAoB,IAAlE,CAA3B;AACH;AACJ;AAnEL;AAAA;AAAA,wBA2D2C;AACnC,aAAO,KAAK,oBAAL,CAA0B,yBAAjC;AACH;AA7DL;;AAAA;AAAA,EAA8C,GAA9C,CAAA;;AAAa,wBAAwB,GAAA,UAAA,CAAA,CAbpC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,cAAc,EAAE,wBADN;AAEV,IAAA,oBAAoB,EAAE,8BAFZ;AAGV,IAAA,iBAAiB,EAAE,8BAHT;AAIV,IAAA,aAAa,EAAE,0BAJL;AAKV,IAAA,UAAU,EAAE,uBALF;AAMV,IAAA,aAAa,EAAE,uBANL;AAOV,IAAA,eAAe,EAAE;AAPP,GAAD,CADT;AADD,CAAD,CAa2B,CAAA,EAAxB,wBAAwB,CAAxB;SAAA,wB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// configuration\n// child components\n// @ts-ignore\n// @ts-ignore\nimport { officialIcons } from '@/views/resources/Images';\n\nimport { AccountModel, AccountType as ProfileType } from '@/core/database/entities/AccountModel';\nimport { NodeModel } from '@/core/database/entities/NodeModel';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            currentAccount: 'account/currentAccount',\n            networkConfiguration: 'network/networkConfiguration',\n            countTransactions: 'statistics/countTransactions',\n            countAccounts: 'statistics/countAccounts',\n            countNodes: 'statistics/countNodes',\n            currentHeight: 'network/currentHeight',\n            currentPeerInfo: 'network/currentPeerInfo',\n        }),\n    },\n})\nexport class NetworkStatisticsPanelTs extends Vue {\n    /**\n     * The icons resources.\n     */\n    public officialIcons = officialIcons;\n\n    /**\n     * The current account.\n     */\n    private currentAccount: AccountModel;\n\n    /**\n     * The network configuration.\n     */\n    private networkConfiguration: NetworkConfigurationModel;\n\n    /**\n     * Number of transactions on the network\n     */\n    public countTransactions: number;\n\n    /**\n     * Number of accounts on the network\n     */\n    public countAccounts: number;\n\n    /**\n     * Number of nodes on the network\n     */\n    public countNodes: number;\n\n    /**\n     * Current network block height\n     */\n    public currentHeight: number;\n\n    /**\n     * Currently connect peer information\n     */\n    public currentPeerInfo: NodeModel;\n\n    /**\n     * Whether harvesting wizard is currently displayed\n     */\n    protected isHarvestingWizardDisplayed = false;\n\n    /**\n     * The supported profile types for harvesting\n     */\n    protected harvestingSupportedProfileTypes: ProfileType[] = [ProfileType.SEED];\n\n    /**\n     * Whether harvesting is enabled for current account\n     */\n    protected isHarvestingEnabled = false;\n\n    /**\n     * Current network target block time\n     */\n    protected get blockGenerationTargetTime(): number {\n        return this.networkConfiguration.blockGenerationTargetTime;\n    }\n\n    public created() {\n        if (this.currentAccount) {\n            this.isHarvestingEnabled = this.harvestingSupportedProfileTypes.includes(this.currentAccount.type);\n        }\n    }\n}\n"],"sourceRoot":""}]}