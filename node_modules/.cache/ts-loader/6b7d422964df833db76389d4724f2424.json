{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/TimeHelpers.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/TimeHelpers.ts","mtime":1611927203906},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/TimeHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { DtoMapping } from 'symbol-sdk';\n\nexport class TimeHelpers {\n    public static addZero = function (number: number): string {\n        return number < 10 ? `0${number}` : `${number}`;\n    };\n\n    public static formatTimestamp = (timestamp: number): string => {\n        const d = new Date(timestamp);\n        const date = `${TimeHelpers.addZero(d.getFullYear())}-${TimeHelpers.addZero(d.getMonth() + 1)}-${TimeHelpers.addZero(\n            d.getDate(),\n        )} `;\n        const time = ` ${TimeHelpers.addZero(d.getHours())}:${TimeHelpers.addZero(d.getMinutes())}:${TimeHelpers.addZero(d.getSeconds())}`;\n        return date + time;\n    };\n\n    public static formatSeconds = function (second: number): string {\n        if (!second && second !== 0) {\n            return '';\n        }\n        let d = 0,\n            h = 0,\n            m = 0;\n\n        if (second > 86400) {\n            d = Math.floor(second / 86400);\n            second = second % 86400;\n        }\n        if (second > 3600) {\n            h = Math.floor(second / 3600);\n            second = second % 3600;\n        }\n        if (second > 60) {\n            m = Math.floor(second / 60);\n            second = second % 60;\n        }\n        let result = '';\n        // seconds less than 60s\n        if (second > 0 && m == 0 && h == 0 && d == 0) {\n            result = `${second} s ${result}`;\n        }\n        if (m > 0 || h > 0 || d > 0) {\n            result = `${m} m ${result}`;\n        }\n        if (h > 0 || d > 0) {\n            result = `${h} h ${result}`;\n        }\n        if (d > 0) {\n            result = `${d} d ${result}`;\n        }\n\n        return result;\n    };\n\n    /**\n     * Transforms a number of blocks into a relative time\n     * eg. 15 blocks => 1s\n     * @param duration in block number\n     */\n    public static durationToRelativeTime = (durationInBlocks: number, blockGenerationTargetTime: number): string => {\n        try {\n            const isDurationNegative = durationInBlocks < 0;\n            const absoluteDuration = isDurationNegative ? durationInBlocks * -1 : durationInBlocks;\n            const relativeTime = TimeHelpers.formatSeconds(absoluteDuration * blockGenerationTargetTime);\n            const prefix = isDurationNegative ? '- ' : '';\n            return `${prefix}${relativeTime}`;\n        } catch (error) {\n            console.error('durationToRelativeTime -> error', error);\n            return '';\n        }\n    };\n\n    public static durationStringToSeconds(str: string): number {\n        return Math.floor(this.durationStringToMilliseconds(str) / 1000);\n    }\n\n    public static durationStringToMilliseconds(value: string): number {\n        let str = value;\n        let total = 0;\n        const milliSeconds = str.match(/(\\d+)\\s*ms/);\n        if (milliSeconds) {\n            str = str.replace(milliSeconds[0], '');\n            total += parseInt(milliSeconds[1]);\n        }\n        const days = str.match(/(\\d+)\\s*d/);\n        if (days) {\n            str = str.replace(days[0], '');\n            total += parseInt(days[1]) * 24 * 60 * 60 * 1000;\n        }\n        const hours = str.match(/(\\d+)\\s*h/);\n        if (hours) {\n            str = str.replace(hours[0], '');\n            total += parseInt(hours[1]) * 60 * 60 * 1000;\n        }\n        const minutes = str.match(/(\\d+)\\s*m/);\n        if (minutes) {\n            str = str.replace(minutes[0], '');\n            total += parseInt(minutes[1]) * 60 * 1000;\n        }\n        const seconds = str.match(/(\\d+)\\s*s/);\n        if (seconds) {\n            str = str.replace(seconds[0], '');\n            total += parseInt(seconds[1]) * 1000;\n        }\n        return total;\n    }\n\n    public static durationStringToMillisecondsSDK(value: string): number {\n        return DtoMapping.parseServerDuration(value).toMillis();\n    }\n\n    public static formatDate = (timestamp) => {\n        const now = new Date(Number(timestamp));\n        const year = now.getFullYear();\n        let month = `${now.getMonth() + 1}`;\n        month = Number(month) < 10 ? `0${month}` : month;\n        let date = `${now.getDate()}`;\n        date = Number(date) < 10 ? `0${date}` : date;\n        let hour = `${now.getHours()}`;\n        hour = Number(hour) < 10 ? `0${hour}` : hour;\n        let minute = `${now.getMinutes()}`;\n        minute = Number(minute) < 10 ? `0${minute}` : minute;\n        let second = `${now.getSeconds()}`;\n        second = Number(second) < 10 ? `0${second}` : second;\n        return `${year}-${month}-${date} ${hour}:${minute}:${second}`;\n    };\n\n    public static getCurrentMonthFirst = function (date: Date): Date {\n        date.setDate(1);\n        return date;\n    };\n\n    public static getCurrentMonthLast = function (date: Date): Date {\n        let currentMonth = date.getMonth();\n        const nextMonth = ++currentMonth;\n        const nextMonthFirstDay = new Date(date.getFullYear(), nextMonth, 1);\n        return new Date(Number(nextMonthFirstDay));\n    };\n}\n"],"sourceRoot":""}]}