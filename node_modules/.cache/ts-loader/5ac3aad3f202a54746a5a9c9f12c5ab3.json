{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionDetails/TransactionDetailsTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionDetails/TransactionDetailsTs.ts","mtime":1611927203202},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionDetails/TransactionDetailsTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,EAA+B,KAA/B,QAA4C,wBAA5C;AACA,SAAS,oBAAT,QAAkD,YAAlD,C,CAEA;AACA;;AACA,OAAO,UAAP,MAAuB,kBAAvB,C,CACA;;AACA,OAAO,wBAAP,MAAqC,oEAArC;AACA,SAAS,sBAAT,QAAuC,4CAAvC;AACA,SAAS,eAAT,QAAgC,qCAAhC,C,CAEA;;AAIA,IAAa,oBAAb;AAAA;;AAAA;;AAAA,kCAAA;AAAA;;AAAA;;;AAOI;;;AAGG;;AACH,UAAA,oBAAA,GAA6C,IAA7C;AAXJ;AAyCC;;AAzCD;AAAA;AAAA,kDAyB4C;;;;;;;;sBAChC,KAAK,WAAL,YAA4B,oB;;;;;sBACxB,CAAA,CAAA,EAAA,GAAC,KAAK,WAAL,CAA0C,iBAA3C,MAA4D,IAA5D,IAA4D,EAAA,KAAA,KAAA,CAA5D,GAA4D,KAAA,CAA5D,GAA4D,EAAA,CAAE,MAA9D,IAAuE,C;;;;;AACvE,qBAAK,oBAAL,GAA4B,KAAK,WAAjC;;;;;oBACQ,CAAC,KAAK,WAAL,CAAiB,e;;;;;;AACE,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,sCAArB,EAA6D;AAC3F,kBAAA,KAAK,EAAE,eAAe,CAAC,oBAAhB,CAAqC,KAAK,WAA1C,CADoF;AAE3F,kBAAA,eAAe,EAAA,CAAA,EAAA,GAAE,KAAK,WAAL,CAAiB,eAAnB,MAAkC,IAAlC,IAAkC,EAAA,KAAA,KAAA,CAAlC,GAAkC,KAAA,CAAlC,GAAkC,EAAA,CAAE;AAFwC,iBAA7D,CAAN;;;AAA5B,qBAAK,oB;;;;;;;;;AAMhB;AApCL;AAAA;AAAA,4BAsCoB,WAtCpB,EAsC4C;AACpC,aAAO,sBAAsB,CAAC,OAAvB,CAA+B,KAAK,MAApC,EAA4C,WAA5C,CAAP;AACH;AAxCL;AAAA;AAAA,wBAaoB;AAAA;;AACZ,UAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,eAAO,EAAP;AACH;;AAED,UAAI,KAAK,oBAAT,EAA+B;AAC3B,gBAAQ,KAAK,OAAL,CAAa,KAAK,oBAAlB,CAAR,4BAAoD,KAAK,oBAAL,CAA0B,iBAA1B,CAA4C,GAA5C,CAAgD,UAAC,EAAD;AAAA,iBAAQ,MAAI,CAAC,OAAL,CAAa,EAAb,CAAR;AAAA,SAAhD,CAApD;AACH;;AACD,aAAO,CAAC,KAAK,OAAL,CAAa,KAAK,WAAlB,CAAD,CAAP;AACH;AAtBL;;AAAA;AAAA,EAA0C,GAA1C,CAAA;;AAK6B,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAoB,CAAA,E,8BAAA,E,aAAA,E,KAAyB,CAAzB,CAAA;;AAoBzB,UAAA,CAAA,CADC,KAAK,CAAC,aAAD,EAAgB;AAAE,EAAA,SAAS,EAAE;AAAb,CAAhB,CACN,CAAA,E,8BAAA,E,6BAAA,EAWC,IAXD,CAAA;;AAzBS,oBAAoB,GAAA,UAAA,CAAA,CAHhC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,UAAU,EAAV,UAAF;AAAc,IAAA,wBAAwB,EAAxB;AAAd;AADL,CAAD,CAGuB,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\nimport { AggregateTransaction, Transaction } from 'symbol-sdk';\n\n// child components\n// @ts-ignore\nimport DetailView from './DetailView.vue';\n// @ts-ignore\nimport TransactionDetailsHeader from '@/components/TransactionDetailsHeader/TransactionDetailsHeader.vue';\nimport { TransactionViewFactory } from '@/core/transactions/TransactionViewFactory';\nimport { TransactionView } from '@/core/transactions/TransactionView';\n\n//@ts-ignore\n@Component({\n    components: { DetailView, TransactionDetailsHeader },\n})\nexport class TransactionDetailsTs extends Vue {\n    /**\n     * Transaction to render\n     * @type {Transaction}\n     */\n    @Prop({ default: null }) transaction: Transaction;\n\n    /**\n     * Set if the transaction type is aggregate\n     * @var {AggregateTransaction}\n     */\n    aggregateTransaction: AggregateTransaction = null;\n\n    public get views(): TransactionView<Transaction>[] {\n        if (!this.transaction) {\n            return [];\n        }\n\n        if (this.aggregateTransaction) {\n            return [this.getView(this.aggregateTransaction), ...this.aggregateTransaction.innerTransactions.map((tx) => this.getView(tx))];\n        }\n        return [this.getView(this.transaction)];\n    }\n\n    @Watch('transaction', { immediate: true })\n    public async refreshAggregateTransaction() {\n        if (this.transaction instanceof AggregateTransaction) {\n            if ((this.transaction as AggregateTransaction).innerTransactions?.length > 0) {\n                this.aggregateTransaction = this.transaction as AggregateTransaction;\n            } else if (!!this.transaction.transactionInfo) {\n                this.aggregateTransaction = await this.$store.dispatch('transaction/LOAD_TRANSACTION_DETAILS', {\n                    group: TransactionView.getTransactionStatus(this.transaction),\n                    transactionHash: this.transaction.transactionInfo?.hash,\n                });\n            }\n        }\n    }\n\n    private getView(transaction: Transaction): TransactionView<Transaction> {\n        return TransactionViewFactory.getView(this.$store, transaction);\n    }\n}\n"],"sourceRoot":""}]}