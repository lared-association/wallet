{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountRestrictionsList/AccountRestrictionsListTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountRestrictionsList/AccountRestrictionsListTs.ts","mtime":1611927226781},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountRestrictionsList/AccountRestrictionsListTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\n// @ts-ignore\nimport ButtonAdd from '@/components/ButtonAdd/ButtonAdd';\n// @ts-ignore\nimport SignerFilter from '@/components/SignerFilter/SignerFilter.vue';\n// @ts-ignore\nimport { TableAssetType } from '@/components/TableDisplay/TableAssetType';\n// @ts-ignore\nimport { TableDisplayTs } from '@/components/TableDisplay/TableDisplayTs';\n// child components\n// @ts-ignore\nimport TableRow from '@/components/TableRow/TableRow.vue';\n// @ts-ignore\nimport { AccountRestrictionTableService } from '@/services/AssetTableService/AccountRestrictionTableService';\n// internal dependencies\nimport { AssetTableService } from '@/services/AssetTableService/AssetTableService';\nimport { AccountRestrictionTxType } from '@/views/forms/FormAccountRestrictionTransaction/FormAccountRestrictionTransactionTs';\n// @ts-ignore\nimport FormAliasTransaction from '@/views/forms/FormAliasTransaction/FormAliasTransaction.vue';\n// @ts-ignore\nimport FormExtendNamespaceDurationTransaction from '@/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransaction.vue';\n// @ts-ignore\nimport FormMosaicSupplyChangeTransaction from '@/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransaction.vue';\n// @ts-ignore\nimport ModalFormWrap from '@/views/modals/ModalFormWrap/ModalFormWrap.vue';\n// @ts-ignore\nimport ModalMetadataDisplay from '@/views/modals/ModalMetadataDisplay/ModalMetadataDisplay.vue';\n// @ts-ignore\nimport ModalMetadataUpdate from '@/views/modals/ModalMetadataUpdate/ModalMetadataUpdate.vue';\nimport { Address } from 'symbol-sdk';\nimport { Component, Prop, Watch } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n\nexport type AccountRestrictionTableField = {\n    label: string;\n    name: string;\n    type: 'text' | 'check' | 'icon';\n};\n\n@Component({\n    components: {\n        TableRow,\n        ModalFormWrap,\n        FormAliasTransaction,\n        FormExtendNamespaceDurationTransaction,\n        FormMosaicSupplyChangeTransaction,\n        ModalMetadataDisplay,\n        SignerFilter,\n        ButtonAdd,\n        ModalMetadataUpdate,\n    },\n    computed: {\n        ...mapGetters({\n            accountAddressRestrictions: 'restriction/accountAddressRestrictions',\n            accountMosaicRestrictions: 'restriction/accountMosaicRestrictions',\n            accountOperationRestrictions: 'restriction/accountOperationRestrictions',\n            isFetchingRestrictions: 'restriction/isFetchingRestrictions',\n            currentSignerAddress: 'account/currentSignerAddress',\n        }),\n    },\n})\nexport class AccountRestrictionsListTs extends TableDisplayTs {\n    /**\n     * Type of assets shown in the table\n     * @type {string}\n     */\n    @Prop({\n        default: TableAssetType.AccountRestrictions,\n    })\n    assetType: TableAssetType;\n\n    @Prop({\n        default: AccountRestrictionTxType.ADDRESS,\n    })\n    restrictionTxType: AccountRestrictionTxType;\n\n    public isFetchingRestrictions: boolean;\n    public accountAddressRestrictions;\n    public accountMosaicRestrictions;\n    public accountOperationRestrictions;\n    public currentSignerAddress: Address;\n\n    public get isLoading() {\n        return this.isFetchingRestrictions;\n    }\n\n    public getService(): AssetTableService {\n        let restrictions = this.accountAddressRestrictions;\n        if (this.restrictionTxType === AccountRestrictionTxType.MOSAIC) {\n            restrictions = this.accountMosaicRestrictions;\n        } else if (this.restrictionTxType === AccountRestrictionTxType.TRANSACTION_TYPE) {\n            restrictions = this.accountOperationRestrictions;\n        }\n        return new AccountRestrictionTableService(restrictions);\n    }\n\n    protected async doRefresh() {\n        await this.$store.dispatch('restriction/LOAD_ACCOUNT_RESTRICTIONS');\n    }\n\n    public handleRemoveRestriction(restriction) {\n        this.$emit('deleteRestriction', restriction);\n    }\n\n    @Watch('currentSignerAddress', { immediate: true })\n    protected watchCurrentSigner() {\n        this.doRefresh();\n    }\n}\n"],"sourceRoot":""}]}