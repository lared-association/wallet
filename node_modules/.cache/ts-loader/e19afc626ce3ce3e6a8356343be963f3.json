{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/UploadQRCode/UploadQRCodeTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/UploadQRCode/UploadQRCodeTs.ts","mtime":1611927202909},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/UploadQRCode/UploadQRCodeTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { QrcodeCapture, QrcodeDropZone, QrcodeStream } from 'vue-qrcode-reader';\nimport { QRCodeType } from 'symbol-qr-library';\n\n@Component({\n    components: { QrcodeCapture, QrcodeDropZone, QrcodeStream },\n})\nexport default class UploadQRCodeTs extends Vue {\n    @Prop({ default: true })\n    public uploadEnabled: boolean;\n\n    @Prop({ default: true })\n    public scanEnabled: boolean;\n\n    @Prop({ default: true })\n    readonly showExplanation: boolean;\n\n    @Prop({ default: [QRCodeType.AddContact, QRCodeType.RequestTransaction, QRCodeType.ExportObject] })\n    readonly validQrTypes!: QRCodeType[];\n\n    @Prop({ default: 'upload_file_message' })\n    readonly uploadFileMessage!: string;\n\n    /**\n     * Whether scan tab is active\n     */\n    scanActive: boolean = false;\n\n    /**\n     * Preview uploaded image data\n     */\n    image: string = null;\n\n    /**\n     * Uploaded file name\n     */\n    imageFileName = '';\n\n    /**\n     * QR Code type identified\n     */\n    qrType: number = 0;\n\n    /**\n     * Invalid qr type\n     */\n    invalidType: boolean = false;\n\n    public $refs!: {\n        qrcodeCapture: QrcodeCapture;\n    };\n\n    /**\n     * Uploaded qr image decode hook\n     *\n     * @param json\n     */\n    public onDecode(json) {\n        const jsonObj = JSON.parse(json);\n        this.qrType = jsonObj.type;\n        if (this.validQrTypes.includes(this.qrType)) {\n            this.$emit('uploadComplete', json);\n        } else {\n            this.invalidType = true;\n        }\n    }\n\n    /**\n     * Handles Tab Click(Upload/Scan)\n     * @param name of the tab clicked\n     */\n    public onTabClick(name) {\n        this.scanActive = name === 'scan';\n    }\n\n    /**\n     * Hook for handling file before upload completes\n     * It intercepts the upload process and pass the file to qrcodeCapture component\n     * @param file uploaded\n     */\n    public onBeforeUpload(file) {\n        this.reset();\n        const evt = {\n            target: {\n                files: [file],\n            },\n        };\n        this.$refs.qrcodeCapture.onChangeInput(evt); // to pass the evt to qrcode image decoder\n        this.imageFileName = file.name;\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n        fileReader.onload = (event) => {\n            // called once readAsDataURL is completed\n            this.image = event.target.result as string;\n        };\n\n        return false; //return false now since we have the file passed to qrcodeCapture component\n    }\n\n    private reset() {\n        this.invalidType = false;\n    }\n}\n"],"sourceRoot":""}]}