{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/transactions/TransactionView.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/transactions/TransactionView.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmltcG9ydCBpMThuIGZyb20gJ0AvbGFuZ3VhZ2UnOwppbXBvcnQgeyBUcmFuc2FjdGlvblN0YXR1cyB9IGZyb20gJ0AvY29yZS90cmFuc2FjdGlvbnMvVHJhbnNhY3Rpb25TdGF0dXMnOwpleHBvcnQgdmFyIFRyYW5zYWN0aW9uVmlldyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgLyoqCiAgICogQ29uc3RydWN0IGEgdHJhbnNhY3Rpb24gdmlldyBhcm91bmQgXGEgc3RvcmUKICAgKiBAcGFyYW0ge1N0b3JlPGFueT59IHN0b3JlCiAgICovCiAgZnVuY3Rpb24gVHJhbnNhY3Rpb25WaWV3KHN0b3JlLCB0cmFuc2FjdGlvbikgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRyYW5zYWN0aW9uVmlldyk7CgogICAgdGhpcy4kc3RvcmUgPSBzdG9yZTsKICAgIHRoaXMuZXBvY2hBZGp1c3RtZW50ID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbmV0d29yay9uZXR3b3JrQ29uZmlndXJhdGlvbiddLmVwb2NoQWRqdXN0bWVudDsKICAgIHRoaXMudHJhbnNhY3Rpb24gPSB0cmFuc2FjdGlvbjsKICAgIHRoaXMuaW5mbyA9IHRyYW5zYWN0aW9uLnRyYW5zYWN0aW9uSW5mbyB8fCB1bmRlZmluZWQ7CiAgICB0aGlzLmhlYWRlckl0ZW1zID0gdGhpcy5yZXNvbHZlSGVhZGVySXRlbXMoKTsKICAgIHRoaXMuZGV0YWlsSXRlbXMgPSB0aGlzLnJlc29sdmVEZXRhaWxJdGVtcygpOwogIH0KICAvKioKICAgKiBJcyB0aGUgdHJhbnNhY3Rpb24gaW5jb21pbmc/CiAgICovCgoKICBfY3JlYXRlQ2xhc3MoVHJhbnNhY3Rpb25WaWV3LCBbewogICAga2V5OiAicmVzb2x2ZURldGFpbEl0ZW1zIiwKCiAgICAvKioKICAgICAqIEl0IHJldHVybnMgYSBsaXN0IHRoYXQgdGhhdCBpdCBlYXN5IHRvIHJlbmRlciB3aGVuIGRpc3BsYXlpbmcgVHJhbnNhY3Rpb25EZXRhaWxSb3cgY29tcG9uZW50cy4KICAgICAqLwogICAgdmFsdWU6IGZ1bmN0aW9uIHJlc29sdmVEZXRhaWxJdGVtcygpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogICAgLyoqCiAgICAgKiBEaXNwbGF5ZWQgaXRlbXMKICAgICAqIEBzZWUge1N0b3JlLk1vc2FpY30KICAgICAqIEB0eXBlIHsoeyBrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyB8IGJvb2xlYW4sIHwgTW9zYWljIH1bXSl9CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAicmVzb2x2ZUhlYWRlckl0ZW1zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXNvbHZlSGVhZGVySXRlbXMoKSB7CiAgICAgIHJldHVybiBbewogICAgICAgIGtleTogJ3RyYW5zYWN0aW9uX3R5cGUnLAogICAgICAgIHZhbHVlOiAiIi5jb25jYXQoaTE4bi50KCJ0cmFuc2FjdGlvbl9kZXNjcmlwdG9yXyIuY29uY2F0KHRoaXMudHJhbnNhY3Rpb24udHlwZSkpKQogICAgICB9LCB7CiAgICAgICAga2V5OiAnc3RhdHVzJywKICAgICAgICB2YWx1ZTogaTE4bi50KCJ0cmFuc2FjdGlvbl9zdGF0dXNfIi5jb25jYXQoVHJhbnNhY3Rpb25WaWV3LmdldFRyYW5zYWN0aW9uU3RhdHVzKHRoaXMudHJhbnNhY3Rpb24pKSkKICAgICAgfSwgewogICAgICAgIGtleTogJ2hhc2gnLAogICAgICAgIHZhbHVlOiB0aGlzLmluZm8gJiYgdGhpcy5pbmZvLmhhc2ggfHwgdW5kZWZpbmVkCiAgICAgIH0sIHRoaXMuZ2V0RmVlRGV0YWlsSXRlbSgpLCB7CiAgICAgICAga2V5OiAnYmxvY2tfaGVpZ2h0JywKICAgICAgICB2YWx1ZTogdGhpcy5pbmZvICYmIHRoaXMuaW5mby5oZWlnaHQgJiYgdGhpcy5pbmZvLmhlaWdodC5jb21wYWN0KCkgPyAiIi5jb25jYXQoaTE4bi50KCdibG9jaycpLCAiICMiKS5jb25jYXQodGhpcy5pbmZvLmhlaWdodC5jb21wYWN0KCkpIDogdW5kZWZpbmVkCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdkZWFkbGluZScsCiAgICAgICAgdmFsdWU6ICIiLmNvbmNhdCh0aGlzLnRyYW5zYWN0aW9uLmRlYWRsaW5lLnRvTG9jYWxEYXRlVGltZSh0aGlzLmVwb2NoQWRqdXN0bWVudCkudG9Mb2NhbERhdGUoKSwgIiAiKS5jb25jYXQodGhpcy50cmFuc2FjdGlvbi5kZWFkbGluZS50b0xvY2FsRGF0ZVRpbWUodGhpcy5lcG9jaEFkanVzdG1lbnQpLnRvTG9jYWxUaW1lKCkpCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICdzaWduYXR1cmUnLAogICAgICAgIHZhbHVlOiB0aGlzLnRyYW5zYWN0aW9uLnNpZ25hdHVyZQogICAgICB9LCB7CiAgICAgICAga2V5OiAnc2lnbmVyX3B1YmxpY19rZXknLAogICAgICAgIHZhbHVlOiB0aGlzLnRyYW5zYWN0aW9uLnNpZ25lciAmJiB0aGlzLnRyYW5zYWN0aW9uLnNpZ25lci5wdWJsaWNLZXkgfHwgdW5kZWZpbmVkCiAgICAgIH1dLmZpbHRlcihmdW5jdGlvbiAocGFpcikgewogICAgICAgIHJldHVybiBwYWlyLnZhbHVlOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRGZWVEZXRhaWxJdGVtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGZWVEZXRhaWxJdGVtKCkgewogICAgICBpZiAodGhpcy50cmFuc2FjdGlvbi5pc0NvbmZpcm1lZCgpKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGtleTogJ3BhaWRfZmVlJywKICAgICAgICAgIHZhbHVlOiB0aGlzLnRyYW5zYWN0aW9uLAogICAgICAgICAgaXNQYWlkRmVlOiB0cnVlCiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAga2V5OiAnbWF4X2ZlZScsCiAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICBhbW91bnQ6IHRoaXMudHJhbnNhY3Rpb24ubWF4RmVlLmNvbXBhY3QoKSB8fCAwLAogICAgICAgICAgICBjb2xvcjogJ3JlZCcKICAgICAgICAgIH0sCiAgICAgICAgICBpc01vc2FpYzogdHJ1ZQogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJpc0luY29taW5nIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICAvKioKICAgICAqIFJldHVybnMgdGhlIHN0YXR1cyBvZiB0aGUgdHJhbnNhY3Rpb24KICAgICAqIEBwYXJhbSB0cmFuc2FjdGlvbiB0aGUgdHJhbnNhY3Rpb24uCiAgICAgKi8KCiAgfV0sIFt7CiAgICBrZXk6ICJnZXRUcmFuc2FjdGlvblN0YXR1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VHJhbnNhY3Rpb25TdGF0dXModHJhbnNhY3Rpb24pIHsKICAgICAgaWYgKHRyYW5zYWN0aW9uLmlzQ29uZmlybWVkKCkpIHsKICAgICAgICByZXR1cm4gVHJhbnNhY3Rpb25TdGF0dXMuY29uZmlybWVkOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBUcmFuc2FjdGlvblZpZXcuaXNQYXJ0aWFsKHRyYW5zYWN0aW9uKSA/IFRyYW5zYWN0aW9uU3RhdHVzLnBhcnRpYWwgOiBUcmFuc2FjdGlvblN0YXR1cy51bmNvbmZpcm1lZDsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBAZGVzY3JpcHRpb246IHRyYW5zYWN0aW9uLnRyYW5zYWN0aW9uSW5mby5tZXJrbGVDb21wb25lbnRIYXNoPT09JzAwMDAwLi4uJyAtPiBzdGF0dXMgb2YgdGhpcyB0cmFuc2FjdGlvbiBpcyBQYXJ0aWFsCiAgICAgKiBAcGFyYW0ge1RyYW5zYWN0aW9ufQogICAgICogQHJldHVybjogYm9vbGVhbgogICAgICovCgogIH0sIHsKICAgIGtleTogImlzUGFydGlhbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNQYXJ0aWFsKHRyYW5zYWN0aW9uKSB7CiAgICAgIHJldHVybiB0cmFuc2FjdGlvbi50cmFuc2FjdGlvbkluZm8gJiYgdHJhbnNhY3Rpb24udHJhbnNhY3Rpb25JbmZvLm1lcmtsZUNvbXBvbmVudEhhc2ggJiYgcGFyc2VJbnQodHJhbnNhY3Rpb24udHJhbnNhY3Rpb25JbmZvLm1lcmtsZUNvbXBvbmVudEhhc2gpID09PSAwOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFRyYW5zYWN0aW9uVmlldzsKfSgpOw=="},{"version":3,"sources":["/home/hero/lared-wallet/src/core/transactions/TransactionView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Store } from 'vuex';\nimport { AggregateTransactionInfo, Transaction, TransactionInfo } from 'symbol-sdk';\nimport { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';\nimport i18n from '@/language';\nimport { TransactionStatus } from '@/core/transactions/TransactionStatus';\nimport { NetworkConfigurationModel } from '../database/entities/NetworkConfigurationModel';\n\nexport abstract class TransactionView<T extends Transaction> {\n    /**\n     * Vuex store instance\n     * @var {Store<any>}\n     */\n    protected readonly $store: Store<any>;\n\n    /**\n     * The transaction header info\n     * @var {TransactionInfo}\n     */\n    public readonly info: TransactionInfo | AggregateTransactionInfo | undefined;\n\n    /**\n     * The transaction body\n     * @var {Transaction}\n     */\n    public readonly transaction: T;\n\n    /**\n     * The header items for the view.\n     */\n    public readonly headerItems: TransactionDetailItem[];\n\n    /**\n     * The the details items for the view.\n     */\n    public readonly detailItems: TransactionDetailItem[];\n\n    /**\n     * Catapult-server nemesis block generation epoch adjustment\n     */\n    public readonly epochAdjustment: number;\n\n    /**\n     * Construct a transaction view around \\a store\n     * @param {Store<any>} store\n     */\n    public constructor(store: Store<any>, transaction: T) {\n        this.$store = store;\n        this.epochAdjustment = (this.$store.getters['network/networkConfiguration'] as NetworkConfigurationModel).epochAdjustment;\n        this.transaction = transaction;\n        this.info = transaction.transactionInfo || undefined;\n        this.headerItems = this.resolveHeaderItems();\n        this.detailItems = this.resolveDetailItems();\n    }\n\n    /**\n     * Is the transaction incoming?\n     */\n    public get isIncoming(): boolean {\n        return false;\n    }\n\n    /**\n     * Returns the status of the transaction\n     * @param transaction the transaction.\n     */\n    public static getTransactionStatus(transaction: Transaction): TransactionStatus {\n        if (transaction.isConfirmed()) {\n            return TransactionStatus.confirmed;\n        } else {\n            return TransactionView.isPartial(transaction) ? TransactionStatus.partial : TransactionStatus.unconfirmed;\n        }\n    }\n\n    /**\n     * @description: transaction.transactionInfo.merkleComponentHash==='00000...' -> status of this transaction is Partial\n     * @param {Transaction}\n     * @return: boolean\n     */\n\n    public static isPartial(transaction: Transaction): boolean {\n        return (\n            transaction.transactionInfo &&\n            transaction.transactionInfo.merkleComponentHash &&\n            parseInt(transaction.transactionInfo.merkleComponentHash) === 0\n        );\n    }\n    /**\n     * It returns a list that that it easy to render when displaying TransactionDetailRow components.\n     */\n    protected resolveDetailItems(): TransactionDetailItem[] {\n        return [];\n    }\n    /**\n     * Displayed items\n     * @see {Store.Mosaic}\n     * @type {({ key: string, value: string | boolean, | Mosaic }[])}\n     */\n    protected resolveHeaderItems(): TransactionDetailItem[] {\n        return [\n            {\n                key: 'transaction_type',\n                value: `${i18n.t(`transaction_descriptor_${this.transaction.type}`)}`,\n            },\n            {\n                key: 'status',\n                value: i18n.t(`transaction_status_${TransactionView.getTransactionStatus(this.transaction)}`),\n            },\n            {\n                key: 'hash',\n                value: (this.info && this.info.hash) || undefined,\n            },\n            this.getFeeDetailItem(),\n            {\n                key: 'block_height',\n                value:\n                    this.info && this.info.height && this.info.height.compact()\n                        ? `${i18n.t('block')} #${this.info.height.compact()}`\n                        : undefined,\n            },\n            {\n                key: 'deadline',\n                value: `${this.transaction.deadline\n                    .toLocalDateTime(this.epochAdjustment)\n                    .toLocalDate()} ${this.transaction.deadline.toLocalDateTime(this.epochAdjustment).toLocalTime()}`,\n            },\n            {\n                key: 'signature',\n                value: this.transaction.signature,\n            },\n            {\n                key: 'signer_public_key',\n                value: (this.transaction.signer && this.transaction.signer.publicKey) || undefined,\n            },\n        ].filter((pair) => pair.value);\n    }\n\n    protected getFeeDetailItem(): TransactionDetailItem {\n        if (this.transaction.isConfirmed()) {\n            return {\n                key: 'paid_fee',\n                value: this.transaction,\n                isPaidFee: true,\n            };\n        } else {\n            return {\n                key: 'max_fee',\n                value: {\n                    amount: this.transaction.maxFee.compact() || 0,\n                    color: 'red',\n                },\n                isMosaic: true,\n            };\n        }\n    }\n}\n"],"sourceRoot":""}]}