{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts","mtime":1611927201705},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwovLyBleHRlcm5hbCBkZXBlbmRlbmNpZXMKCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsgLy8gY29uZmlndXJhdGlvbgoKdmFyIEFtb3VudERpc3BsYXlUcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhBbW91bnREaXNwbGF5VHMsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEFtb3VudERpc3BsYXlUcyk7CgogIGZ1bmN0aW9uIEFtb3VudERpc3BsYXlUcygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBbW91bnREaXNwbGF5VHMpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhBbW91bnREaXNwbGF5VHMsIFt7CiAgICBrZXk6ICJpbnRlZ2VyUGFydCIsCiAgICAvLy8gcmVnaW9uIGNvbXB1dGVkIHByb3BlcnRpZXMgZ2V0dGVyL3NldHRlcgogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKHRoaXMudmFsdWUpLnRvTG9jYWxlU3RyaW5nKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZnJhY3Rpb25hbFBhcnQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHZhciByZXN0ID0gdGhpcy52YWx1ZSAtIE1hdGguZmxvb3IodGhpcy52YWx1ZSk7CgogICAgICBpZiAocmVzdCA9PT0gMCkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgdmFyIGRlY2ltYWxzID0gdGhpcy5kZWNpbWFscyA9PT0gdW5kZWZpbmVkID8gdGhpcy5uZXR3b3JrQ29uZmlndXJhdGlvbi5tYXhNb3NhaWNEaXZpc2liaWxpdHkgfHwgNiA6IHRoaXMuZGVjaW1hbHM7IC8vIHJlbW92ZSBsZWZ0bW9zdC0wIGFuZCByaWdodG1vc3QtMAoKICAgICAgcmV0dXJuIE51bWJlcihyZXN0LnRvRml4ZWQoZGVjaW1hbHMpKS50b1ByZWNpc2lvbigpLnRvU3RyaW5nKCkucmVwbGFjZSgvXjAvLCAnJyk7CiAgICB9CiAgICAvKioKICAgICAqIFRpY2tlciBkaXNwbGF5ZWQgaW4gdGhlIHZpZXcKICAgICAqIEByZWFkb25seQogICAgICogQHR5cGUge3N0cmluZ30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJkaXNwbGF5ZWRUaWNrZXIiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnNob3dUaWNrZXIgJiYgdGhpcy50aWNrZXIgfHwgJyc7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQW1vdW50RGlzcGxheVRzOwp9KFZ1ZSk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiAwCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgInZhbHVlIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIGRlZmF1bHQ6IHVuZGVmaW5lZAp9KV0sIEFtb3VudERpc3BsYXlUcy5wcm90b3R5cGUsICJkZWNpbWFscyIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiBmYWxzZQp9KV0sIEFtb3VudERpc3BsYXlUcy5wcm90b3R5cGUsICJzaG93VGlja2VyIiwgdm9pZCAwKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIGRlZmF1bHQ6ICcnCn0pXSwgQW1vdW50RGlzcGxheVRzLnByb3RvdHlwZSwgInRpY2tlciIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiAnbm9ybWFsJwp9KV0sIEFtb3VudERpc3BsYXlUcy5wcm90b3R5cGUsICJzaXplIiwgdm9pZCAwKTsKCkFtb3VudERpc3BsYXlUcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudCh7CiAgY29tcHV0ZWQ6IE9iamVjdC5hc3NpZ24oe30sIG1hcEdldHRlcnMoewogICAgbmV0d29ya0NvbmZpZ3VyYXRpb246ICduZXR3b3JrL25ldHdvcmtDb25maWd1cmF0aW9uJwogIH0pKQp9KV0sIEFtb3VudERpc3BsYXlUcyk7CmV4cG9ydCB7IEFtb3VudERpc3BsYXlUcyB9Ow=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AmountDisplay/AmountDisplayTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH;;AACA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,QAAqC,wBAArC;AAEA,SAAS,UAAT,QAA2B,MAA3B,C,CAEA;;AASA,IAAa,eAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAaI;AAbJ,wBAcmB;AACX,aAAO,IAAI,CAAC,KAAL,CAAW,KAAK,KAAhB,EAAuB,cAAvB,EAAP;AACH;AAhBL;AAAA;AAAA,wBAkBsB;AACd,UAAM,IAAI,GAAG,KAAK,KAAL,GAAa,IAAI,CAAC,KAAL,CAAW,KAAK,KAAhB,CAA1B;;AACA,UAAI,IAAI,KAAK,CAAb,EAAgB;AACZ,eAAO,EAAP;AACH;;AACD,UAAM,QAAQ,GAAG,KAAK,QAAL,KAAkB,SAAlB,GAA8B,KAAK,oBAAL,CAA0B,qBAA1B,IAAmD,CAAjF,GAAqF,KAAK,QAA3G,CALc,CAMd;;AACA,aAAO,MAAM,CAAC,IAAI,CAAC,OAAL,CAAa,QAAb,CAAD,CAAN,CAA+B,WAA/B,GAA6C,QAA7C,GAAwD,OAAxD,CAAgE,IAAhE,EAAsE,EAAtE,CAAP;AACH;AAED;;;;AAIG;;AAhCP;AAAA;AAAA,wBAiCuB;AACf,aAAQ,KAAK,UAAL,IAAmB,KAAK,MAAzB,IAAoC,EAA3C;AACH;AAnCL;;AAAA;AAAA,EAAqC,GAArC,CAAA;;AAC0B,UAAA,CAAA,CAArB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAiB,CAAA,E,yBAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAEQ,UAAA,CAAA,CAA7B,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAyB,CAAA,E,yBAAA,E,UAAA,E,KAA6B,CAA7B,CAAA;;AAEJ,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAqB,CAAA,E,yBAAA,E,YAAA,E,KAAkB,CAAlB,CAAA;;AAEH,UAAA,CAAA,CAAtB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAkB,CAAA,E,yBAAA,E,QAAA,E,KAAe,CAAf,CAAA;;AAEM,UAAA,CAAA,CAA5B,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAwB,CAAA,E,yBAAA,E,MAAA,E,KAAkD,CAAlD,CAAA;;AATpB,eAAe,GAAA,UAAA,CAAA,CAP3B,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,oBAAoB,EAAE;AADZ,GAAD,CADT;AADD,CAAD,CAOkB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\nimport { mapGetters } from 'vuex';\n\n// configuration\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkConfiguration: 'network/networkConfiguration',\n        }),\n    },\n})\nexport class AmountDisplayTs extends Vue {\n    @Prop({ default: 0 }) value: number;\n\n    @Prop({ default: undefined }) decimals: number | undefined;\n\n    @Prop({ default: false }) showTicker: false;\n\n    @Prop({ default: '' }) ticker: string;\n\n    @Prop({ default: 'normal' }) size: 'normal' | 'smaller' | 'bigger' | 'biggest';\n\n    public networkConfiguration: NetworkConfigurationModel;\n\n    /// region computed properties getter/setter\n    get integerPart(): string {\n        return Math.floor(this.value).toLocaleString();\n    }\n\n    get fractionalPart(): string {\n        const rest = this.value - Math.floor(this.value);\n        if (rest === 0) {\n            return '';\n        }\n        const decimals = this.decimals === undefined ? this.networkConfiguration.maxMosaicDivisibility || 6 : this.decimals;\n        // remove leftmost-0 and rightmost-0\n        return Number(rest.toFixed(decimals)).toPrecision().toString().replace(/^0/, '');\n    }\n\n    /**\n     * Ticker displayed in the view\n     * @readonly\n     * @type {string}\n     */\n    get displayedTicker(): string {\n        return (this.showTicker && this.ticker) || '';\n    }\n\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}