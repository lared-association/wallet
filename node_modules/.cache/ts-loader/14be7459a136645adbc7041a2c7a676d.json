{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts","mtime":1606213958973},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { NetworkType } from 'symbol-sdk';\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\nimport { AccountService } from '@/services/AccountService';\n// child components\n// @ts-ignore\nimport AppLogo from '@/components/AppLogo/AppLogo.vue';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport PageNavigator from '@/components/PageNavigator/PageNavigator.vue';\n// @ts-ignore\nimport WindowControls from '@/components/WindowControls/WindowControls.vue';\n// @ts-ignore\nimport PeerSelector from '@/components/PeerSelector/PeerSelector.vue';\n// @ts-ignore\nimport LanguageSelector from '@/components/LanguageSelector/LanguageSelector.vue';\n// @ts-ignore\nimport AccountSelectorField from '@/components/AccountSelectorField/AccountSelectorField.vue';\n// @ts-ignore\n//import DebugConsoleButton from '@/components/DebugConsoleButton/DebugConsoleButton.vue';\nimport ModalDebugConsole from '@/views/modals/ModalDebugConsole/ModalDebugConsole.vue';\n//@ts-ignore\nimport Settings from '@/components/Settings/Settings.vue';\nimport { URLInfo } from '@/core/utils/URLInfo';\n//@ts-ignore\nimport ImportQRButton from '@/components/QRCode/ImportQRButton/ImportQRButton.vue';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n//@ts-ignore\nimport AccountLinks from '@/components/AccountLinks/AccountLinks.vue';\nimport { officialIcons } from '@/views/resources/Images';\n\n@Component({\n    components: {\n        AppLogo,\n        ErrorTooltip,\n        PageNavigator,\n        WindowControls,\n        PeerSelector,\n        LanguageSelector,\n        AccountSelectorField,\n        ModalDebugConsole,\n        Settings,\n        ImportQRButton,\n        AccountLinks,\n    },\n    computed: {\n        ...mapGetters({\n            currentPeer: 'network/currentPeer',\n            isConnected: 'network/isConnected',\n            networkType: 'network/networkType',\n            generationHash: 'network/generationHash',\n            currentProfile: 'profile/currentProfile',\n            isCosignatoryMode: 'account/isCosignatoryMode',\n            currentAccount: 'account/currentAccount',\n            explorerBaseUrl: 'app/explorerUrl',\n            faucetBaseUrl: 'app/faucetUrl',\n        }),\n    },\n})\nexport class PageLayoutTs extends Vue {\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {string}\n     */\n    public currentProfile: ProfileModel;\n\n    /**\n     * Currently active peer\n     * @see {Store.Network}\n     * @var {Object}\n     */\n    public currentPeer: URLInfo;\n\n    /**\n     * Whether the connection is up\n     * @see {Store.Network}\n     * @var {boolean}\n     */\n    public isConnected: boolean;\n\n    /**\n     * Current networkType\n     * @see {Store.Network}\n     * @var {NetworkType}\n     */\n    public networkType: NetworkType;\n\n    /**\n     * Current generationHash\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * Whether cosignatory mode is active\n     * @see {Store.Account}\n     * @var {boolean}\n     */\n    public isCosignatoryMode: boolean;\n\n    /**\n     * Whether currently displaying debug console\n     * @var {boolean}\n     */\n    public isDisplayingDebugConsole: boolean = false;\n\n    /**\n     * Currently active account\n     * @see {Store.Account}\n     * @var {AccountModel}\n     */\n    public currentAccount: AccountModel;\n    /**\n     * Explorer base url\n     * @var {string}\n     */\n    public explorerBaseUrl: string;\n    /**\n     * Faucet base url\n     * @var {string}\n     */\n    public faucetBaseUrl: string;\n\n    /// region computed properties getter/setter\n    /**\n     * Holds alert message\n     * @var {Object}\n     */\n    get alert(): { show: boolean; message: string } {\n        if (!this.currentPeer || !this.isConnected) {\n            return {\n                show: true,\n                message: 'node_not_available_please_check_your_node_or_network_settings',\n            };\n        }\n\n        if (this.currentProfile && this.currentProfile.networkType !== this.networkType) {\n            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);\n            return {\n                show: true,\n                message: 'account_network_type_does_not_match_current_network_type',\n            };\n        }\n\n        if (this.currentProfile && this.currentProfile.generationHash !== this.generationHash) {\n            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);\n            return {\n                show: true,\n                message: 'account_network_does_not_match_current_network_type',\n            };\n        }\n\n        return { show: false, message: '' };\n    }\n\n    get info(): { show: boolean; message: string } {\n        if (this.isCosignatoryMode) {\n            return { show: true, message: 'info_active_cosignatory_mode' };\n        }\n\n        return { show: false, message: '' };\n    }\n\n    get hasDebugConsoleModal(): boolean {\n        return this.isDisplayingDebugConsole;\n    }\n\n    set hasDebugConsoleModal(f: boolean) {\n        this.isDisplayingDebugConsole = f;\n    }\n\n    public get explorerUrl() {\n        return this.currentAccount\n            ? this.explorerBaseUrl.replace(/\\/+$/, '') + '/accounts/' + this.currentAccount.address\n            : this.explorerBaseUrl;\n    }\n\n    public get faucetUrl() {\n        return this.currentAccount ? this.faucetBaseUrl + '?recipient=' + this.currentAccount.address : this.faucetBaseUrl;\n    }\n\n    public get isTestnet() {\n        return this.networkType === NetworkType.TEST_NET;\n    }\n\n    public get faucetIcon() {\n        return officialIcons.faucet;\n    }\n\n    public get explorerIcon() {\n        return officialIcons.voting;\n    }\n\n    /// end-region computed properties getter/setter\n\n    public async onChangeAccount(accountId: string) {\n        const service = new AccountService();\n        const account = service.getAccount(accountId);\n        if (!account) {\n            console.log('Wallet not found: ', accountId);\n            return;\n        }\n\n        await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);\n    }\n}\n"],"sourceRoot":""}]}