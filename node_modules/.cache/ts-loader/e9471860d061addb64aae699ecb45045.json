{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/TransactionFilterService.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/TransactionFilterService.ts","mtime":1611927204328},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQoKZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKLyoqCiAqIFRyYW5zYWN0aW9uRmlsdGVyIHVzZWQgZm9yIGZpbHRlcmluZyB0cmFuc2FjdGlvbnMgYnkgZ3JvdXAgYW5kIHNlbnQgc3RhdHVzLgogKi8KZXhwb3J0IHZhciBUcmFuc2FjdGlvbkZpbHRlclNlcnZpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFRyYW5zYWN0aW9uRmlsdGVyU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUcmFuc2FjdGlvbkZpbHRlclNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFRyYW5zYWN0aW9uRmlsdGVyU2VydmljZSwgbnVsbCwgW3sKICAgIGtleTogImZpbHRlciIsCgogICAgLyoqCiAgICAgKiBGaWx0ZXJzIHRyYW5zYWN0aW9ucyBkZXBlbmRzIG9uIHNlbGVjdGVkIGZpbHRlciBvcHRpb25zLgogICAgICogQHBhcmFtIHN0YXRlIGZvciBleHRyYWN0aW5nIHRyYW5zYWN0aW9ucyBmaWx0ZXIgb3B0aW9ucyBhbmQgbGlzdCBmaWx0ZXJlZCBieSBncm91cC4KICAgICAqIEBwYXJhbSBjdXJyZW50U2lnbmVyQWRkcmVzcyBzZWxlY3RlZCBzaWduZXIgYWRkcmVzcwogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gZmlsdGVyKHN0YXRlLCBjdXJyZW50U2lnbmVyQWRkcmVzcykgewogICAgICB2YXIgZmlsdGVyT3B0aW9ucyA9IHN0YXRlLmZpbHRlck9wdGlvbnMsCiAgICAgICAgICB0cmFuc2FjdGlvbnMgPSBzdGF0ZS50cmFuc2FjdGlvbnMsCiAgICAgICAgICBjb25maXJtZWRUcmFuc2FjdGlvbnMgPSBzdGF0ZS5jb25maXJtZWRUcmFuc2FjdGlvbnMsCiAgICAgICAgICB1bmNvbmZpcm1lZFRyYW5zYWN0aW9ucyA9IHN0YXRlLnVuY29uZmlybWVkVHJhbnNhY3Rpb25zLAogICAgICAgICAgcGFydGlhbFRyYW5zYWN0aW9ucyA9IHN0YXRlLnBhcnRpYWxUcmFuc2FjdGlvbnM7CgogICAgICBpZiAoIWZpbHRlck9wdGlvbnMuaXNGaWx0ZXJTaG91bGRCZUFwcGxpZWQpIHsKICAgICAgICByZXR1cm4gX3RvQ29uc3VtYWJsZUFycmF5KHRyYW5zYWN0aW9ucyk7CiAgICAgIH0KCiAgICAgIHZhciBtYWluRmlsdGVyR3JvdXAgPSBbZmlsdGVyT3B0aW9ucy5pc0NvbmZpcm1lZFNlbGVjdGVkLCBmaWx0ZXJPcHRpb25zLmlzVW5jb25maXJtZWRTZWxlY3RlZCwgZmlsdGVyT3B0aW9ucy5pc1BhcnRpYWxTZWxlY3RlZF07IC8vIEluZGljYXRlcyBpZiBhbGwgY2hlY2tib3hlcyBpbiBtYWluIGdyb3VwIHNlbGVjdGVkIG9yIHVuc2VsZWN0ZWQKCiAgICAgIHZhciBhcmVBbGxHcm91cFJlc3VsdHNTaG93biA9IG1haW5GaWx0ZXJHcm91cC5ldmVyeShmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbjsKICAgICAgfSkgfHwgbWFpbkZpbHRlckdyb3VwLmV2ZXJ5KGZ1bmN0aW9uIChvcHRpb24pIHsKICAgICAgICByZXR1cm4gIW9wdGlvbjsKICAgICAgfSk7CiAgICAgIHZhciByZXN1bHQgPSBhcmVBbGxHcm91cFJlc3VsdHNTaG93biA/IF90b0NvbnN1bWFibGVBcnJheSh0cmFuc2FjdGlvbnMpIDogW107CgogICAgICBpZiAoIWFyZUFsbEdyb3VwUmVzdWx0c1Nob3duKSB7CiAgICAgICAgaWYgKGZpbHRlck9wdGlvbnMuaXNQYXJ0aWFsU2VsZWN0ZWQpIHsKICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQocGFydGlhbFRyYW5zYWN0aW9ucyk7CiAgICAgICAgfQoKICAgICAgICBpZiAoZmlsdGVyT3B0aW9ucy5pc1VuY29uZmlybWVkU2VsZWN0ZWQpIHsKICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQodW5jb25maXJtZWRUcmFuc2FjdGlvbnMpOwogICAgICAgIH0KCiAgICAgICAgaWYgKGZpbHRlck9wdGlvbnMuaXNDb25maXJtZWRTZWxlY3RlZCkgewogICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmNvbmNhdChjb25maXJtZWRUcmFuc2FjdGlvbnMpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyQnlSZWNlcGllbnQocmVzdWx0LCBmaWx0ZXJPcHRpb25zLCBjdXJyZW50U2lnbmVyQWRkcmVzcyk7CiAgICB9CiAgICAvKioKICAgICAqIEZpbHRlcnMgdHJhbnNhY3Rpb25zIGRlcGVuZHMgb24gc2VsZWN0ZWQgc2VudCBzdGF0dXMgZmlsdGVyIG9wdGlvbnMuCiAgICAgKiBAcGFyYW0gdHJhbnNhY3Rpb25zCiAgICAgKiBAcGFyYW0gZmlsdGVyT3B0aW9ucwogICAgICogQHBhcmFtIGN1cnJlbnRTaWduZXJBZGRyZXNzIHNlbGVjdGVkIHNpZ25lciBhZGRyZXNzCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZmlsdGVyQnlSZWNlcGllbnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZpbHRlckJ5UmVjZXBpZW50KHRyYW5zYWN0aW9ucywgZmlsdGVyT3B0aW9ucywgY3VycmVudFNpZ25lckFkZHJlc3MpIHsKICAgICAgdmFyIHJlY2VwaWVudEZpbHRlck9wdGlvbnMgPSBbZmlsdGVyT3B0aW9ucy5pc1NlbnRTZWxlY3RlZCwgZmlsdGVyT3B0aW9ucy5pc1JlY2VpdmVkU2VsZWN0ZWRdOwogICAgICB2YXIgYXJlQWxsU2hvdWxkQmVTaG93biA9IHJlY2VwaWVudEZpbHRlck9wdGlvbnMuZXZlcnkoZnVuY3Rpb24gKG9wdGlvbikgewogICAgICAgIHJldHVybiAhb3B0aW9uOwogICAgICB9KTsKCiAgICAgIGlmIChhcmVBbGxTaG91bGRCZVNob3duKSB7CiAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uczsKICAgICAgfQoKICAgICAgdmFyIGFyZUFsbFdpdGhSZWNlcGllbnRTaG91bGRCZVNob3duID0gcmVjZXBpZW50RmlsdGVyT3B0aW9ucy5ldmVyeShmdW5jdGlvbiAob3B0aW9uKSB7CiAgICAgICAgcmV0dXJuIG9wdGlvbjsKICAgICAgfSk7CgogICAgICBpZiAoYXJlQWxsV2l0aFJlY2VwaWVudFNob3VsZEJlU2hvd24pIHsKICAgICAgICByZXR1cm4gdHJhbnNhY3Rpb25zLmZpbHRlcihmdW5jdGlvbiAodHJhbnNhY3Rpb24pIHsKICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbi5yZWNpcGllbnRBZGRyZXNzICYmIHRyYW5zYWN0aW9uLnJlY2lwaWVudEFkZHJlc3MuYWRkcmVzczsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRyYW5zYWN0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKHRyYW5zYWN0aW9uKSB7CiAgICAgICAgaWYgKHRyYW5zYWN0aW9uLnJlY2lwaWVudEFkZHJlc3MgJiYgdHJhbnNhY3Rpb24ucmVjaXBpZW50QWRkcmVzcy5hZGRyZXNzKSB7CiAgICAgICAgICBpZiAoZmlsdGVyT3B0aW9ucy5pc1NlbnRTZWxlY3RlZCkgewogICAgICAgICAgICBpZiAodHJhbnNhY3Rpb24uc2lnbmVyKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uLnNpZ25lci5hZGRyZXNzLnBsYWluKCkgPT09IGN1cnJlbnRTaWduZXJBZGRyZXNzOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGZpbHRlck9wdGlvbnMuaXNSZWNlaXZlZFNlbGVjdGVkKSB7CiAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbi5yZWNpcGllbnRBZGRyZXNzLmFkZHJlc3MgPT09IGN1cnJlbnRTaWduZXJBZGRyZXNzOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVHJhbnNhY3Rpb25GaWx0ZXJTZXJ2aWNlOwp9KCk7"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/TransactionFilterService.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { Transaction } from 'symbol-sdk';\nimport { TransactionFilterOptionsState, TransactionState } from '@/store/Transaction';\n\n/**\n * TransactionFilter used for filtering transactions by group and sent status.\n */\nexport class TransactionFilterService {\n    /**\n     * Filters transactions depends on selected filter options.\n     * @param state for extracting transactions filter options and list filtered by group.\n     * @param currentSignerAddress selected signer address\n     */\n    public static filter(state: TransactionState, currentSignerAddress: string): Transaction[] {\n        const { filterOptions, transactions, confirmedTransactions, unconfirmedTransactions, partialTransactions } = state;\n        if (!filterOptions.isFilterShouldBeApplied) {\n            return [...transactions];\n        }\n\n        const mainFilterGroup = [filterOptions.isConfirmedSelected, filterOptions.isUnconfirmedSelected, filterOptions.isPartialSelected];\n        // Indicates if all checkboxes in main group selected or unselected\n        const areAllGroupResultsShown = mainFilterGroup.every((option) => option) || mainFilterGroup.every((option) => !option);\n\n        let result: Transaction[] = areAllGroupResultsShown ? [...transactions] : [];\n\n        if (!areAllGroupResultsShown) {\n            if (filterOptions.isPartialSelected) {\n                result = result.concat(partialTransactions);\n            }\n            if (filterOptions.isUnconfirmedSelected) {\n                result = result.concat(unconfirmedTransactions);\n            }\n            if (filterOptions.isConfirmedSelected) {\n                result = result.concat(confirmedTransactions);\n            }\n        }\n\n        return this.filterByRecepient(result, filterOptions, currentSignerAddress);\n    }\n\n    /**\n     * Filters transactions depends on selected sent status filter options.\n     * @param transactions\n     * @param filterOptions\n     * @param currentSignerAddress selected signer address\n     */\n    private static filterByRecepient(\n        transactions: Transaction[],\n        filterOptions: TransactionFilterOptionsState,\n        currentSignerAddress: string,\n    ): Transaction[] {\n        const recepientFilterOptions = [filterOptions.isSentSelected, filterOptions.isReceivedSelected];\n        const areAllShouldBeShown: boolean = recepientFilterOptions.every((option) => !option);\n        if (areAllShouldBeShown) {\n            return transactions;\n        }\n\n        const areAllWithRecepientShouldBeShown: boolean = recepientFilterOptions.every((option) => option);\n        if (areAllWithRecepientShouldBeShown) {\n            return transactions.filter((transaction) => {\n                return (transaction as any).recipientAddress && (transaction as any).recipientAddress.address;\n            });\n        }\n\n        return transactions.filter((transaction) => {\n            if ((transaction as any).recipientAddress && (transaction as any).recipientAddress.address) {\n                if (filterOptions.isSentSelected) {\n                    if ((transaction as any).signer) {\n                        return (transaction as any).signer.address.plain() === currentSignerAddress;\n                    }\n                }\n\n                if (filterOptions.isReceivedSelected) {\n                    return (transaction as any).recipientAddress.address === currentSignerAddress;\n                }\n            }\n        });\n    }\n}\n"],"sourceRoot":""}]}