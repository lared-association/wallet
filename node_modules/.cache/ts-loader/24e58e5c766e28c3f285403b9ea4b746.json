{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/SettingService.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/SettingService.ts","mtime":1611927204302},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgU2V0dGluZ3NNb2RlbCB9IGZyb20gJ0AvY29yZS9kYXRhYmFzZS9lbnRpdGllcy9TZXR0aW5nc01vZGVsJzsKaW1wb3J0IHsgZmVlc0NvbmZpZyB9IGZyb20gJ0AvY29uZmlnJzsKaW1wb3J0IHsgYXBwQ29uZmlnIH0gZnJvbSAnQC9jb25maWcnOwppbXBvcnQgeyBuZXR3b3JrQ29uZmlnIH0gZnJvbSAnQC9jb25maWcnOwppbXBvcnQgaTE4biBmcm9tICdAL2xhbmd1YWdlJzsKaW1wb3J0IHsgU2V0dGluZ3NNb2RlbFN0b3JhZ2UgfSBmcm9tICdAL2NvcmUvZGF0YWJhc2Uvc3RvcmFnZS9TZXR0aW5nc01vZGVsU3RvcmFnZSc7Ci8qKgogKiBTZXJ2aWNlIGluIGNoYXJnZSBvZiBsb2FkaW5nIGFuZCBzdG9yaW5nIHRoZSBTZXR0aW5nc01vZGVsIGZyb20gbG9jYWwgc3RvcmFnZS4KICovCgpleHBvcnQgdmFyIFNldHRpbmdTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTZXR0aW5nU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZXR0aW5nU2VydmljZSk7CgogICAgLyoqCiAgICAgKiBUaGUgdGhlIGxvY2FsIHN0b3JhZ2UgdGhhdCBrZWVwcyB0aGUgU2V0dGluZ3NNb2RlbCBvYmplY3RzIGluZGV4ZWQgYnkgcHJvZmlsZU5hbWUuCiAgICAgKi8KICAgIHRoaXMuc3RvcmFnZSA9IFNldHRpbmdzTW9kZWxTdG9yYWdlLklOU1RBTkNFOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFNldHRpbmdTZXJ2aWNlLCBbewogICAga2V5OiAiZ2V0UHJvZmlsZVNldHRpbmdzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcm9maWxlU2V0dGluZ3MocHJvZmlsZU5hbWUpIHsKICAgICAgdmFyIHN0b3JlZERhdGEgPSB0aGlzLnN0b3JhZ2UuZ2V0KCkgfHwge307CiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuY3JlYXRlRGVmYXVsdFNldHRpbmdzTW9kZWwocHJvZmlsZU5hbWUpKSwgc3RvcmVkRGF0YVtwcm9maWxlTmFtZV0gfHwge30pOwogICAgfQogIH0sIHsKICAgIGtleTogImNoYW5nZVByb2ZpbGVTZXR0aW5ncyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY2hhbmdlUHJvZmlsZVNldHRpbmdzKHByb2ZpbGVOYW1lLCBuZXdDb25maWdzKSB7CiAgICAgIHZhciBzdG9yZWREYXRhID0gdGhpcy5zdG9yYWdlLmdldCgpIHx8IHt9OwogICAgICBzdG9yZWREYXRhW3Byb2ZpbGVOYW1lXSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5nZXRQcm9maWxlU2V0dGluZ3MocHJvZmlsZU5hbWUpKSwgbmV3Q29uZmlncyk7CiAgICAgIHRoaXMuc3RvcmFnZS5zZXQoc3RvcmVkRGF0YSk7CiAgICAgIHJldHVybiBzdG9yZWREYXRhW3Byb2ZpbGVOYW1lXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVEZWZhdWx0U2V0dGluZ3NNb2RlbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFNldHRpbmdzTW9kZWwocHJvZmlsZU5hbWUpIHsKICAgICAgdmFyIGJyb3dzZXJMb2NhbGUgPSBpMThuLmxvY2FsZTsKICAgICAgdmFyIGxhbmd1YWdlID0gYXBwQ29uZmlnLmxhbmd1YWdlcy5maW5kKGZ1bmN0aW9uIChsKSB7CiAgICAgICAgcmV0dXJuIGwudmFsdWUgPT0gYnJvd3NlckxvY2FsZTsKICAgICAgfSkgPyBicm93c2VyTG9jYWxlIDogYXBwQ29uZmlnLmxhbmd1YWdlc1swXS52YWx1ZTsKICAgICAgcmV0dXJuIG5ldyBTZXR0aW5nc01vZGVsKHByb2ZpbGVOYW1lLCBsYW5ndWFnZSwgZmVlc0NvbmZpZy5tZWRpYW4sICcnLCBuZXR3b3JrQ29uZmlnLmV4cGxvcmVyVXJsKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTZXR0aW5nU2VydmljZTsKfSgpOw=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/SettingService.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH,SAAS,aAAT,QAA8B,wCAA9B;AAEA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,SAAT,QAA0B,UAA1B;AACA,SAAS,aAAT,QAA8B,UAA9B;AACA,OAAO,IAAP,MAAiB,YAAjB;AACA,SAAS,oBAAT,QAAqC,8CAArC;AAEA;;AAEG;;AACH,WAAa,cAAb;AAAA,4BAAA;AAAA;;AACI;;AAEG;AACc,SAAA,OAAA,GAAU,oBAAoB,CAAC,QAA/B;AAyBpB;;AA7BD;AAAA;AAAA,uCAM8B,WAN9B,EAMiD;AACzC,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,GAAb,MAAsB,EAAzC;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACO,KAAK,0BAAL,CAAgC,WAAhC,CADP,CAAA,EAEQ,UAAU,CAAC,WAAD,CAAV,IAA2B,EAFnC,CAAA;AAIH;AAZL;AAAA;AAAA,0CAciC,WAdjC,EAcsD,UAdtD,EAcqE;AAC7D,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,GAAb,MAAsB,EAAzC;AACA,MAAA,UAAU,CAAC,WAAD,CAAV,GAAuB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAChB,KAAK,kBAAL,CAAwB,WAAxB,CADgB,CAAA,EAEhB,UAFgB,CAAvB;AAIA,WAAK,OAAL,CAAa,GAAb,CAAiB,UAAjB;AACA,aAAO,UAAU,CAAC,WAAD,CAAjB;AACH;AAtBL;AAAA;AAAA,+CAwBsC,WAxBtC,EAwByD;AACjD,UAAM,aAAa,GAAG,IAAI,CAAC,MAA3B;AACA,UAAM,QAAQ,GAAG,SAAS,CAAC,SAAV,CAAoB,IAApB,CAAyB,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,KAAF,IAAW,aAAlB;AAAA,OAAzB,IAA4D,aAA5D,GAA4E,SAAS,CAAC,SAAV,CAAoB,CAApB,EAAuB,KAApH;AACA,aAAO,IAAI,aAAJ,CAAkB,WAAlB,EAA+B,QAA/B,EAAyC,UAAU,CAAC,MAApD,EAA4D,EAA5D,EAAgE,aAAa,CAAC,WAA9E,CAAP;AACH;AA5BL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { SettingsModel } from '@/core/database/entities/SettingsModel';\n\nimport { feesConfig } from '@/config';\nimport { appConfig } from '@/config';\nimport { networkConfig } from '@/config';\nimport i18n from '@/language';\nimport { SettingsModelStorage } from '@/core/database/storage/SettingsModelStorage';\n\n/**\n * Service in charge of loading and storing the SettingsModel from local storage.\n */\nexport class SettingService {\n    /**\n     * The the local storage that keeps the SettingsModel objects indexed by profileName.\n     */\n    private readonly storage = SettingsModelStorage.INSTANCE;\n\n    public getProfileSettings(profileName: string): SettingsModel {\n        const storedData = this.storage.get() || {};\n        return {\n            ...this.createDefaultSettingsModel(profileName),\n            ...(storedData[profileName] || {}),\n        };\n    }\n\n    public changeProfileSettings(profileName: string, newConfigs: any): SettingsModel {\n        const storedData = this.storage.get() || {};\n        storedData[profileName] = {\n            ...this.getProfileSettings(profileName),\n            ...newConfigs,\n        };\n        this.storage.set(storedData);\n        return storedData[profileName];\n    }\n\n    public createDefaultSettingsModel(profileName: string): SettingsModel {\n        const browserLocale = i18n.locale;\n        const language = appConfig.languages.find((l) => l.value == browserLocale) ? browserLocale : appConfig.languages[0].value;\n        return new SettingsModel(profileName, language, feesConfig.median, '', networkConfig.explorerUrl);\n    }\n}\n"],"sourceRoot":""}]}