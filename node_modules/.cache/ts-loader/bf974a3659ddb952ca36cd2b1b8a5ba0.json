{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/backends/SimpleObjectStorage.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/backends/SimpleObjectStorage.ts","mtime":1611927203483},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KLy8gZXh0ZXJuYWwgZGVwZW5kZW5jaWVzCmltcG9ydCB7IENvbnZlcnQsIENyeXB0bywgU0hBM0hhc2hlciB9IGZyb20gJ3N5bWJvbC1zZGsnOwppbXBvcnQgeyBMb2NhbFN0b3JhZ2VCYWNrZW5kIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL2JhY2tlbmRzL0xvY2FsU3RvcmFnZUJhY2tlbmQnOwppbXBvcnQgeyBPYmplY3RTdG9yYWdlQmFja2VuZCB9IGZyb20gJ0AvY29yZS9kYXRhYmFzZS9iYWNrZW5kcy9PYmplY3RTdG9yYWdlQmFja2VuZCc7Ci8qKgogKiBBIHN1cGVyIHNpbXBsZSBvYmplY3Qgc3RvcmFnZSB0aGF0IGtlZXBzIG9uZSBvYmplY3QgaW4gYSBsb2NhbCBzdG9yYWdlIHRhYmxlLgogKgogKiBUaGlzIG9iamVjdCBpcyBnZW5lcmljLCB5b3UgY2FuIHR5cGUgaXQgd2l0aCB0aGUgY2xhc3Mgb2Ygb2JqZWN0IHRoYXQgaXQncyBnb2luZyB0byBiZSBzdG9yZWQuCiAqIFRoZSBvYmplY3QgY291bGQgYmUgYSBzaW1wbGUgb2JqZWN0LCBhbiBhcnJheSBvciBhIE1hcC9SZWNvcmQgd2l0aCBrZXktPnZhbHVlLgogKgogKi8KCmV4cG9ydCB2YXIgU2ltcGxlT2JqZWN0U3RvcmFnZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gU2ltcGxlT2JqZWN0U3RvcmFnZShzdG9yYWdlS2V5KSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2ltcGxlT2JqZWN0U3RvcmFnZSk7CgogICAgdGhpcy5zdG9yYWdlS2V5ID0gc3RvcmFnZUtleTsKICAgIHRoaXMuc3RvcmFnZUJhY2tlbmQgPSAhIWxvY2FsU3RvcmFnZSA/IG5ldyBMb2NhbFN0b3JhZ2VCYWNrZW5kKCkgOiBuZXcgT2JqZWN0U3RvcmFnZUJhY2tlbmQoKTsKICB9CiAgLyoqCiAgICogQHJldHVybiB0aGUgc3RvcmVkIHZhbHVlIG9yIHVuZGVmaW5lZAogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKFNpbXBsZU9iamVjdFN0b3JhZ2UsIFt7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIGl0ZW0gPSB0aGlzLnN0b3JhZ2VCYWNrZW5kLmdldEl0ZW0odGhpcy5zdG9yYWdlS2V5KTsKICAgICAgcmV0dXJuIGl0ZW0gPyBKU09OLnBhcnNlKGl0ZW0pIDogdW5kZWZpbmVkOwogICAgfQogICAgLyoqCiAgICAgKiBTdG9yZXMgdGhlIHByb3ZpZGVkIHZhbHVlLgogICAgICogQHBhcmFtIHZhbHVlIHRvIGJlIHN0b3JlZAogICAgICovCgogIH0sIHsKICAgIGtleTogInNldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgIHRoaXMuc3RvcmFnZUJhY2tlbmQuc2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7CiAgICB9CiAgICAvKioKICAgICAqIERlbGV0ZXMgdGhlIHN0b3JlZCB2YWx1ZS4KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZSgpIHsKICAgICAgdGhpcy5zdG9yYWdlQmFja2VuZC5yZW1vdmVJdGVtKHRoaXMuc3RvcmFnZUtleSk7CiAgICB9CiAgICAvKioKICAgICAqIEhlbHBlciB0aGF0IGdlbmVyYXRlcyBhbiBpZGVudGlmaWVyIGJhc2Ugb24gdGhlIG9iamVjdCB2YWx1ZQogICAgICoKICAgICAqIEBwYXJhbSBvYmplY3QgdGhlIG9iamVjdCB1c2VkIGZlZWQgdGhlIGdlbmVyYXRvci4KICAgICAqLwoKICB9XSwgW3sKICAgIGtleTogImdlbmVyYXRlSWRlbnRpZmllciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2VuZXJhdGVJZGVudGlmaWVyKCkgewogICAgICB2YXIgb2JqZWN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQ7CiAgICAgIHZhciByYXcgPSBPYmplY3QuYXNzaWduKHsKICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLnZhbHVlT2YoKSwKICAgICAgICBzZWVkOiBDcnlwdG8ucmFuZG9tQnl0ZXMoOCkKICAgICAgfSwgb2JqZWN0IHx8IHt9KTsgLy8gdG8tanNvbgoKICAgICAgdmFyIGpzb24gPSBKU09OLnN0cmluZ2lmeShyYXcpOwogICAgICB2YXIgaGFzaGVyID0gU0hBM0hhc2hlci5jcmVhdGVIYXNoZXIoNjQpOwogICAgICBoYXNoZXIucmVzZXQoKTsKICAgICAgaGFzaGVyLnVwZGF0ZShDb252ZXJ0LnV0ZjhUb0hleChqc29uKSk7CiAgICAgIHZhciBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoNjQpOwogICAgICBoYXNoZXIuZmluYWxpemUoaGFzaCk7CiAgICAgIHJldHVybiBDb252ZXJ0LnVpbnQ4VG9IZXgoaGFzaCkuc3Vic3RyKDAsIDE2KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBTaW1wbGVPYmplY3RTdG9yYWdlOwp9KCk7"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/backends/SimpleObjectStorage.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH;AACA,SAAS,OAAT,EAAkB,MAAlB,EAA0B,UAA1B,QAA4C,YAA5C;AAIA,SAAS,mBAAT,QAAoC,8CAApC;AACA,SAAS,oBAAT,QAAqC,+CAArC;AAGA;;;;;;AAMG;;AACH,WAAa,mBAAb;AAMI,+BAAoC,UAApC,EAA8C;AAAA;;AAAV,SAAA,UAAA,GAAA,UAAA;AAChC,SAAK,cAAL,GAAsB,CAAC,CAAC,YAAF,GAAiB,IAAI,mBAAJ,EAAjB,GAA6C,IAAI,oBAAJ,EAAnE;AACH;AAED;;AAEG;;;AAZP;AAAA;AAAA,0BAac;AACN,UAAM,IAAI,GAAG,KAAK,cAAL,CAAoB,OAApB,CAA4B,KAAK,UAAjC,CAAb;AACA,aAAO,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAH,GAAsB,SAAjC;AACH;AAED;;;AAGG;;AArBP;AAAA;AAAA,wBAsBe,KAtBf,EAsBuB;AACf,WAAK,cAAL,CAAoB,OAApB,CAA4B,KAAK,UAAjC,EAA6C,IAAI,CAAC,SAAL,CAAe,KAAf,CAA7C;AACH;AAED;;AAEG;;AA5BP;AAAA;AAAA,6BA6BiB;AACT,WAAK,cAAL,CAAoB,UAApB,CAA+B,KAAK,UAApC;AACH;AAED;;;;AAIG;;AArCP;AAAA;AAAA,yCAsC2E;AAAA,UAAtC,MAAsC,uEAAT,SAAS;AACnE,UAAM,GAAG,GAAA,MAAA,CAAA,MAAA,CACF;AACC,QAAA,IAAI,EAAE,IAAI,IAAJ,GAAW,OAAX,EADP;AAEC,QAAA,IAAI,EAAE,MAAM,CAAC,WAAP,CAAmB,CAAnB;AAFP,OADE,EAKD,MAAM,IAAI,EALT,CAAT,CADmE,CAQnE;;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,GAAf,CAAb;AACA,UAAM,MAAM,GAAG,UAAU,CAAC,YAAX,CAAwB,EAAxB,CAAf;AACA,MAAA,MAAM,CAAC,KAAP;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,OAAO,CAAC,SAAR,CAAkB,IAAlB,CAAd;AAEA,UAAM,IAAI,GAAG,IAAI,UAAJ,CAAe,EAAf,CAAb;AACA,MAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB;AACA,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC,CAAP;AACH;AAvDL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Convert, Crypto, SHA3Hasher } from 'symbol-sdk';\n\n// internal dependencies\nimport { IStorageBackend } from '@/core/database/backends/IStorageBackend';\nimport { LocalStorageBackend } from '@/core/database/backends/LocalStorageBackend';\nimport { ObjectStorageBackend } from '@/core/database/backends/ObjectStorageBackend';\nimport { IStorage } from '@/core/database/backends/IStorage';\n\n/**\n * A super simple object storage that keeps one object in a local storage table.\n *\n * This object is generic, you can type it with the class of object that it's going to be stored.\n * The object could be a simple object, an array or a Map/Record with key->value.\n *\n */\nexport class SimpleObjectStorage<E> implements IStorage<E> {\n    /**\n     * The Storage backend, if localStorage is not available the storage will be in memory.\n     */\n    private readonly storageBackend: IStorageBackend;\n\n    public constructor(private readonly storageKey) {\n        this.storageBackend = !!localStorage ? new LocalStorageBackend() : new ObjectStorageBackend();\n    }\n\n    /**\n     * @return the stored value or undefined\n     */\n    public get(): E | undefined {\n        const item = this.storageBackend.getItem(this.storageKey);\n        return item ? JSON.parse(item) : undefined;\n    }\n\n    /**\n     * Stores the provided value.\n     * @param value to be stored\n     */\n    public set(value: E): void {\n        this.storageBackend.setItem(this.storageKey, JSON.stringify(value));\n    }\n\n    /**\n     * Deletes the stored value.\n     */\n    public remove(): void {\n        this.storageBackend.removeItem(this.storageKey);\n    }\n\n    /**\n     * Helper that generates an identifier base on the object value\n     *\n     * @param object the object used feed the generator.\n     */\n    public static generateIdentifier(object: object | undefined = undefined): string {\n        const raw = {\n            ...{\n                time: new Date().valueOf(),\n                seed: Crypto.randomBytes(8),\n            },\n            ...(object || {}),\n        };\n        // to-json\n        const json = JSON.stringify(raw);\n        const hasher = SHA3Hasher.createHasher(64);\n        hasher.reset();\n        hasher.update(Convert.utf8ToHex(json));\n\n        const hash = new Uint8Array(64);\n        hasher.finalize(hash);\n        return Convert.uint8ToHex(hash).substr(0, 16);\n    }\n}\n"],"sourceRoot":""}]}