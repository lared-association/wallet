{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Diagnostic.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Diagnostic.ts","mtime":1611927204434},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Diagnostic.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport Vue from 'vue';\n// internal dependencies\nimport { LogLevels } from '@/core/utils/LogLevels';\nimport { AwaitLock } from './AwaitLock';\n\nconst Lock = AwaitLock.create();\n\nexport default {\n    namespaced: true,\n    state: {\n        initialized: false,\n        logs: [],\n    },\n    getters: {\n        getInitialized: (state) => state.initialized,\n        logs: (state) => state.logs,\n        lastLog: (state) => state.logs.pop(),\n        infos: (state) => {\n            return state.logs.filter((row) => row.level === LogLevels.INFO).map((log) => log.message);\n        },\n        debugs: (state) => {\n            return state.logs.filter((row) => row.level === LogLevels.DEBUG).map((log) => log.message);\n        },\n        warnings: (state) => {\n            return state.logs.filter((row) => row.level === LogLevels.WARNING).map((log) => log.message);\n        },\n        errors: (state) => {\n            return state.logs.filter((row) => row.level === LogLevels.ERROR).map((log) => log.message);\n        },\n    },\n    mutations: {\n        setInitialized: (state, initialized) => {\n            state.initialized = initialized;\n        },\n        addLog: (state, payload) => {\n            const logs = state.logs;\n            logs.push({\n                level: payload.level || LogLevels.DEBUG,\n                message: payload.message,\n                time: payload.time,\n            });\n            Vue.set(state, 'logs', logs);\n        },\n    },\n    actions: {\n        async initialize({ commit, getters }) {\n            const callback = async () => {\n                // update store\n                commit('setInitialized', true);\n            };\n\n            // acquire async lock until initialized\n            await Lock.initialize(callback, { getters });\n        },\n        async uninitialize({ commit, getters }) {\n            const callback = async () => {\n                commit('setInitialized', false);\n            };\n            await Lock.uninitialize(callback, { getters });\n        },\n        /// region scoped actions\n        ADD_LOG({ commit }, { level, message }) {\n            commit('addLog', { level, message, time: new Date() });\n        },\n        ADD_INFO({ commit }, message) {\n            const time = new Date();\n            commit('addLog', { level: LogLevels.INFO, message, time });\n            return time;\n        },\n        ADD_DEBUG({ commit }, message) {\n            const time = new Date();\n            commit('addLog', { level: LogLevels.DEBUG, message, time });\n            return time;\n        },\n        ADD_WARNING({ commit }, message) {\n            const time = new Date();\n            commit('addLog', { level: LogLevels.WARNING, message, time });\n            return time;\n        },\n        ADD_ERROR({ commit }, message) {\n            const time = new Date();\n            commit('addLog', { level: LogLevels.ERROR, message, time });\n            return time;\n        },\n        /// end-region scoped actions\n    },\n};\n"],"sourceRoot":""}]}