{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/store/AddressBook.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/store/AddressBook.ts","mtime":1606213958969},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/store/AddressBook.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AwaitLock } from './AwaitLock';\nimport { AddressBook, IContact } from 'symbol-address-book';\nimport Vue from 'vue';\nimport { AddressBookService } from '@/services/AddressBookService';\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\n\n/// region globals\nconst Lock = AwaitLock.create();\n/// end-region globals\n\ntype AddressBookState = {\n    initialized: boolean;\n    addressBook: AddressBook;\n    selectedContact: IContact;\n};\n\nconst addressBookState: AddressBookState = {\n    initialized: false,\n    addressBook: null,\n    selectedContact: null,\n};\n\n/**\n * AddressBook Store\n */\nexport default {\n    namespaced: true,\n    state: addressBookState,\n    getters: {\n        getInitialized: (state: AddressBookState) => state.initialized,\n        getAddressBook: (state: AddressBookState) => state.addressBook,\n        getSelectedContact: (state: AddressBookState): IContact => state.selectedContact,\n    },\n    mutations: {\n        setInitialized: (state: AddressBookState, initialized: boolean) => {\n            state.initialized = initialized;\n        },\n        setAddressBook: (state: AddressBookState, addressBook: AddressBook) => {\n            // state.addressBook = addressBook;\n            Vue.set(state, 'addressBook', addressBook);\n        },\n        setSelectedContact: (state: AddressBookState, selectedContact: IContact) => {\n            Vue.set(state, 'selectedContact', selectedContact);\n            // state.selectedContact = selectedContact;\n        },\n    },\n    actions: {\n        /**\n         * Possible `options` values include:\n         * @type {\n         *    skipTransactions: boolean,\n         * }\n         */\n        async initialize({ commit, getters }) {\n            const callback = async () => {\n                commit('setInitialized', true);\n            };\n            await Lock.initialize(callback, { getters });\n        },\n        async uninitialize({ commit, dispatch, getters }) {\n            const callback = async () => {\n                await dispatch('SAVE_ADDRESS_BOOK');\n                commit('setInitialized', false);\n            };\n            await Lock.uninitialize(callback, { getters });\n        },\n\n        async SAVE_ADDRESS_BOOK({ getters, rootGetters }) {\n            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];\n            const addressBook: AddressBook = getters.getAddressBook;\n            await new AddressBookService().saveAddressBook(addressBook, currentProfile.profileName);\n        },\n\n        async LOAD_ADDRESS_BOOK({ commit, rootGetters }) {\n            const currentProfile: ProfileModel = rootGetters['profile/currentProfile'];\n            const addressBook = await new AddressBookService().getAddressBook(currentProfile.profileName);\n            commit('setAddressBook', addressBook);\n            const allContacts = addressBook.getAllContacts();\n            if (allContacts.length > 0) {\n                commit('setSelectedContact', allContacts[0]);\n            }\n        },\n\n        async ADD_CONTACT({ commit, dispatch, getters }, contact) {\n            const addressBook: AddressBook = getters.getAddressBook;\n            addressBook.addContact(contact);\n            const newAddressBook = AddressBook.fromJSON(addressBook.toJSON());\n            commit('setAddressBook', newAddressBook);\n            const newSelectedContact = newAddressBook.getContactById(contact.id);\n            commit('setSelectedContact', newSelectedContact);\n            dispatch('SAVE_ADDRESS_BOOK');\n        },\n\n        async UPDATE_CONTACT({ dispatch, getters }, { id, contact }) {\n            const addressBook: AddressBook = getters.getAddressBook;\n            addressBook.updateContact(id, contact);\n            dispatch('SAVE_ADDRESS_BOOK');\n        },\n\n        async REMOVE_CONTACT({ commit, dispatch, getters }, id) {\n            const addressBook: AddressBook = getters.getAddressBook;\n            addressBook.removeContact(id);\n            const newAddressBook = AddressBook.fromJSON(addressBook.toJSON());\n            commit('setAddressBook', newAddressBook);\n            commit('setSelectedContact', null);\n            dispatch('SAVE_ADDRESS_BOOK');\n        },\n\n        async RESOLVE_ADDRESS({ getters }, address) {\n            const addressBook: AddressBook = getters.getAddressBook;\n            return addressBook.getContactByAddress(address);\n        },\n    },\n};\n"],"sourceRoot":""}]}