{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/QRCode/QRCodePassword/QRCodePasswordTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/QRCode/QRCodePassword/QRCodePasswordTs.ts","mtime":1606213958957},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/QRCode/QRCodePassword/QRCodePasswordTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,EAA+B,KAA/B,QAA4C,wBAA5C;AACA,SAAS,eAAT,EAAkC,UAAlC,QAAoD,mBAApD;AACA,SAAS,kBAAT,QAAmC,cAAnC,C,CACA;;AACA,OAAO,WAAP,MAAwB,0CAAxB,C,CACA;;AACA,OAAO,OAAP,MAAoB,kCAApB,C,CAEA;;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,SAAS,kBAAT,QAAmC,YAAnC;;AAKA,IAAqB,gBAArB;AAAA;;AAAA;;AAAA,8BAAA;AAAA;;AAAA;;;AAYW,UAAA,cAAA,GAA0B,KAA1B;AAEA,UAAA,SAAA,GAAY;AACf,MAAA,QAAQ,EAAE;AADK,KAAZ;AAdX;AAiDC;;AAjDD;AAAA;AAAA,gDAuBoC;AAC5B,UAAM,UAAU,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,UAAhB,CAAnB;;AACA,UAAI,UAAU,KAAK,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,aAA9B,IAA+C,UAAU,CAAC,IAAX,IAAmB,UAAU,CAAC,cAAlF,CAAd,EAAiH;AAC7G,aAAK,cAAL,GAAsB,IAAtB;AACH,OAFD,MAEO;AACH;AACA,aAAK,cAAL;AACH;AACJ;AA/BL;AAAA;AAAA,qCAiCyB;AACjB,UAAI;AACA,aAAK,MAAL,GAAc,eAAe,CAAC,QAAhB,CAAyB,KAAK,UAA9B,EAA0C,kBAAkB,CAAC,iBAA7D,EAAgF,KAAK,SAAL,CAAe,QAA/F,CAAd;AACA,aAAK,KAAL,CAAW,iBAAX,EAA8B,KAAK,MAAnC;AACA,aAAK,cAAL,GAAsB,KAAtB;AACH,OAJD,CAIE,OAAO,KAAP,EAAc;AACZ,aAAK,SAAL,CAAe,KAAf;AACH;AACJ;AAzCL;AAAA;AAAA,8BA2CsB,KA3CtB,EA2CmC;AAC3B,WAAK,KAAL,CAAW,QAAX,CAAoB,WAApB,CAAgC;AAC5B,QAAA,MAAM,EAAE,CAAC,KAAD,CADoB;AAE5B,QAAA,WAAW,EAAE;AAFe,OAAhC;AAIH;AAhDL;;AAAA;AAAA,EAA8C,GAA9C,CAAA;;AAEI,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,0BAAA,E,YAAA,E,KAA0B,CAA1B,CAAA;;AAGA,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,0BAAA,E,QAAA,E,KAAsB,CAAtB,CAAA;;AAGA,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,0BAAA,E,cAAA,E,KAA4B,CAA5B,CAAA;;AAeA,UAAA,CAAA,CADC,KAAK,CAAC,YAAD,EAAe;AAAE,EAAA,SAAS,EAAE;AAAb,CAAf,CACN,CAAA,E,0BAAA,E,2BAAA,EAQC,IARD,CAAA;;AAvBiB,gBAAgB,GAAA,UAAA,CAAA,CAHpC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,WAAW,EAAX,WAAF;AAAe,IAAA,OAAO,EAAP,OAAf;AAAwB,IAAA,YAAY,EAAZ,YAAxB;AAAsC,IAAA,kBAAkB,EAAlB;AAAtC;AADL,CAAD,CAG2B,CAAA,EAAhB,gBAAgB,CAAhB;eAAA,gB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop, Watch } from 'vue-property-decorator';\nimport { QRCodeGenerator, QRCode, QRCodeType } from 'symbol-qr-library';\nimport { ValidationProvider } from 'vee-validate';\n// @ts-ignore\nimport FormWrapper from '@/components/FormWrapper/FormWrapper.vue';\n// @ts-ignore\nimport FormRow from '@/components/FormRow/FormRow.vue';\n\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\nimport { TransactionMapping } from 'symbol-sdk';\n\n@Component({\n    components: { FormWrapper, FormRow, ErrorTooltip, ValidationProvider },\n})\nexport default class QRCodePasswordTs extends Vue {\n    @Prop({ default: null })\n    public qrcodeJson: string;\n\n    @Prop({ default: '' })\n    public header: string;\n\n    @Prop({ default: false })\n    public showDownload: string;\n\n    public qrCode: QRCode;\n\n    public askForPassword: boolean = false;\n\n    public formItems = {\n        password: '',\n    };\n\n    public $refs!: {\n        provider: InstanceType<typeof ValidationProvider>;\n    };\n\n    @Watch('qrcodeJson', { immediate: true })\n    public proceedIfNoPasswordNeeded() {\n        const jsonObject = JSON.parse(this.qrcodeJson);\n        if (jsonObject && (jsonObject.type == QRCodeType.ExportAccount || jsonObject.type == QRCodeType.ExportMnemonic)) {\n            this.askForPassword = true;\n        } else {\n            // no password needed, continue to generate qrcode\n            this.generateQRCode();\n        }\n    }\n\n    public generateQRCode() {\n        try {\n            this.qrCode = QRCodeGenerator.fromJSON(this.qrcodeJson, TransactionMapping.createFromPayload, this.formItems.password);\n            this.$emit('qrCodeGenerated', this.qrCode);\n            this.askForPassword = false;\n        } catch (error) {\n            this.showError(error);\n        }\n    }\n\n    private showError(error: string) {\n        this.$refs.provider.applyResult({\n            errors: [error],\n            failedRules: {},\n        });\n    }\n}\n"],"sourceRoot":""}]}