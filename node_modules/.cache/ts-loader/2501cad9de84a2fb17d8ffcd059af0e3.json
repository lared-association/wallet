{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/store/Profile.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/store/Profile.ts","mtime":1606213958969},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/store/Profile.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport Vue from 'vue';\n// internal dependencies\nimport { $eventBus } from '../events';\nimport { AwaitLock } from './AwaitLock';\nimport { SettingService } from '@/services/SettingService';\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\nimport { ProfileService } from '@/services/ProfileService';\n\n/// region globals\nconst Lock = AwaitLock.create();\n\n/// end-region globals\n\ninterface ProfileState {\n    initialized: boolean;\n    currentProfile: ProfileModel;\n    isAuthenticated: boolean;\n    isSettingsVisible: boolean;\n}\n\nconst profileState: ProfileState = {\n    initialized: false,\n    currentProfile: null,\n    isAuthenticated: false,\n    isSettingsVisible: false,\n};\nexport default {\n    namespaced: true,\n    state: profileState,\n    getters: {\n        getInitialized: (state: ProfileState) => state.initialized,\n        currentProfile: (state: ProfileState) => state.currentProfile,\n        isAuthenticated: (state: ProfileState) => state.isAuthenticated,\n        isSettingsVisible: (state: ProfileState) => state.isSettingsVisible,\n        isPrivateKeyProfile: (state: ProfileState): boolean => {\n            return state.currentProfile ? !state.currentProfile.seed : false;\n        },\n    },\n    mutations: {\n        setInitialized: (state: ProfileState, initialized: boolean) => {\n            state.initialized = initialized;\n        },\n        currentProfile: (state: ProfileState, currentProfile: ProfileModel) => Vue.set(state, 'currentProfile', currentProfile),\n        setAuthenticated: (state: ProfileState, isAuthenticated: boolean) => Vue.set(state, 'isAuthenticated', isAuthenticated),\n        toggleSettings: (state: ProfileState) => {\n            state.isSettingsVisible = !state.isSettingsVisible;\n        },\n    },\n    actions: {\n        async initialize({ commit, getters }) {\n            const callback = async () => {\n                commit('setInitialized', true);\n            };\n            // aquire async lock until initialized\n            await Lock.initialize(callback, { getters });\n        },\n        async uninitialize({ commit, dispatch, getters }) {\n            const callback = async () => {\n                await dispatch('RESET_STATE');\n                commit('setInitialized', false);\n            };\n            await Lock.uninitialize(callback, { getters });\n        },\n        /// region scoped actions\n        RESET_STATE({ commit }) {\n            commit('currentProfile', null);\n            commit('setAuthenticated', false);\n        },\n        async LOG_OUT({ dispatch, rootGetters }): Promise<void> {\n            const currentAccount = rootGetters['account/currentAccount'];\n            if (currentAccount) {\n                await dispatch('account/uninitialize', { address: currentAccount.address }, { root: true });\n            }\n            await dispatch('account/SET_KNOWN_ACCOUNTS', [], { root: true });\n            await dispatch('account/RESET_CURRENT_ACCOUNT', undefined, {\n                root: true,\n            });\n            await dispatch('RESET_STATE');\n        },\n        async SET_CURRENT_PROFILE({ commit, dispatch }, currentProfile: ProfileModel) {\n            // update state\n            commit('currentProfile', currentProfile);\n            commit('setAuthenticated', true);\n\n            dispatch('diagnostic/ADD_DEBUG', 'Changing current profile to ' + currentProfile.profileName, { root: true });\n\n            const settings = new SettingService().getProfileSettings(currentProfile.profileName);\n            dispatch('app/SET_SETTINGS', settings, { root: true });\n            dispatch('addressBook/LOAD_ADDRESS_BOOK', null, { root: true });\n\n            dispatch('diagnostic/ADD_DEBUG', 'Using profile settings ' + Object.values(settings), { root: true });\n\n            // reset store + re-initialize\n            await dispatch('initialize');\n            $eventBus.$emit('onProfileChange', currentProfile.profileName);\n        },\n\n        ADD_ACCOUNT({ dispatch, getters }, accountModel: AccountModel) {\n            const currentProfile: ProfileModel = getters['currentProfile'];\n            if (!currentProfile) {\n                return;\n            }\n            dispatch(\n                'diagnostic/ADD_DEBUG',\n                'Adding account to profile: ' + currentProfile.profileName + ' with: ' + accountModel.address,\n                {\n                    root: true,\n                },\n            );\n            if (!currentProfile.accounts.includes(accountModel.id)) {\n                new ProfileService().updateAccounts(currentProfile, [...currentProfile.accounts, accountModel.id]);\n            }\n            return dispatch('SET_CURRENT_PROFILE', currentProfile);\n        },\n        /// end-region scoped actions\n    },\n};\n"],"sourceRoot":""}]}