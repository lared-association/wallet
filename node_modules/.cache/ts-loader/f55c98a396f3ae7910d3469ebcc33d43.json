{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue","mtime":1611927226875},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUsIFByb3AgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBOb3RpZmljYXRpb25UeXBlIH0gZnJvbSAnQC9jb3JlL3V0aWxzL05vdGlmaWNhdGlvblR5cGUnOwoKdmFyIERpc2FibGVkRm9ybU92ZXJsYXkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoRGlzYWJsZWRGb3JtT3ZlcmxheSwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoRGlzYWJsZWRGb3JtT3ZlcmxheSk7CgogIGZ1bmN0aW9uIERpc2FibGVkRm9ybU92ZXJsYXkoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRGlzYWJsZWRGb3JtT3ZlcmxheSk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKERpc2FibGVkRm9ybU92ZXJsYXksIFt7CiAgICBrZXk6ICJkaXNhYmxlVG9NdWx0aXNpZyIsCiAgICAvLy8gcmVnaW9uIGNvbXB1dGVkIHByb3BlcnRpZXMgZ2V0dGVyL3NldHRlcgoKICAgIC8qKgogICAgICogV2hldGhlciBhIGZvcm0gc2hvdWxkIGJlIGRpc2FibGVkIHRvIGEgbXVsdGlzaWcgYWNjb3VudAogICAgICogQHJldHVybnMge2Jvb2xlYW59CiAgICAgKi8KICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gRG9uJ3QgZGlzYWJsZSBmb3JtIHdoZW4gdGhlIGZvcm0gaXMgbXVsdGlzaWctZnJpZW5kbHkKICAgICAgdmFyIG11bHRpc2lnRnJpZW5kbHlSb3V0ZU5hbWVzID0gWydkYXNoYm9hcmQuaW52b2ljZSddOwoKICAgICAgaWYgKG11bHRpc2lnRnJpZW5kbHlSb3V0ZU5hbWVzLnNvbWUoZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMuJHJvdXRlLm1hdGNoZWQubWFwKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZTsKICAgICAgICAgIHJldHVybiBuYW1lOwogICAgICAgIH0pLnNvbWUoZnVuY3Rpb24gKGIpIHsKICAgICAgICAgIHJldHVybiBiID09PSBhOwogICAgICAgIH0pOwogICAgICB9KSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSAvLyBEaXNhYmxlIHRoZSBmb3JtcyB0byBhY2NvdW50cyB3aXRoIGNvc2lnbmF0b3JpZXMKCgogICAgICByZXR1cm4gdGhpcy5jdXJyZW50QWNjb3VudE11bHRpc2lnSW5mbyAmJiB0aGlzLmN1cnJlbnRBY2NvdW50TXVsdGlzaWdJbmZvLmNvc2lnbmF0b3J5QWRkcmVzc2VzLmxlbmd0aCA+IDAgfHwgdGhpcy5jdXJyZW50QWNjb3VudC5pc011bHRpc2lnOwogICAgfQogICAgLyoqCiAgICAgKiBBbGVydCB0byBiZSBkaXNwbGF5ZWQKICAgICAqIElkIEFsZXJ0IGlzIGFuIGVtcHR5IHN0cmluZywgdGhpcyBvdmVybGF5IHdvbid0IHJlbmRlcgogICAgICogQHJldHVybnMge3N0cmluZ30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhbGVydCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgaWYgKHRoaXMud2hpdGVsaXN0ZWQpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5uZXR3b3JrTW9zYWljKSB7CiAgICAgICAgcmV0dXJuIE5vdGlmaWNhdGlvblR5cGUuTk9fTkVUV09SS19DVVJSRU5DWTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZGlzYWJsZVRvTXVsdGlzaWcpIHsKICAgICAgICB0aGlzLiRlbWl0KCdkaXNhYmxlRm9ybScpOwogICAgICAgIHJldHVybiBOb3RpZmljYXRpb25UeXBlLk1VTFRJU0lHX0FDQ09VTlRTX05PX1RYOwogICAgICB9CgogICAgICByZXR1cm4gJyc7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRGlzYWJsZWRGb3JtT3ZlcmxheTsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgZGVmYXVsdDogZmFsc2UKfSldLCBEaXNhYmxlZEZvcm1PdmVybGF5LnByb3RvdHlwZSwgIndoaXRlbGlzdGVkIiwgdm9pZCAwKTsKCkRpc2FibGVkRm9ybU92ZXJsYXkgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIG5ldHdvcmtNb3NhaWM6ICdtb3NhaWMvbmV0d29ya01vc2FpYycsCiAgICBjdXJyZW50QWNjb3VudDogJ2FjY291bnQvY3VycmVudEFjY291bnQnLAogICAgY3VycmVudEFjY291bnRNdWx0aXNpZ0luZm86ICdhY2NvdW50L2N1cnJlbnRBY2NvdW50TXVsdGlzaWdJbmZvJwogIH0pKQp9KV0sIERpc2FibGVkRm9ybU92ZXJsYXkpOwpleHBvcnQgZGVmYXVsdCBEaXNhYmxlZEZvcm1PdmVybGF5Ow=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAUA,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,MAA3B;AAEA,SAAS,gBAAT,QAAiC,+BAAjC;;AAYA,IAAqB,mBAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAwBI;;AACA;;;AAGG;AA5BP,wBA6ByB;AAAA;;AACjB;AACA,UAAM,0BAA0B,GAAG,CAAC,mBAAD,CAAnC;;AAEA,UAAI,0BAA0B,CAAC,IAA3B,CAAgC,UAAC,CAAD;AAAA,eAAO,KAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,GAApB,CAAwB;AAAA,cAAG,IAAH,QAAG,IAAH;AAAA,iBAAc,IAAd;AAAA,SAAxB,EAA4C,IAA5C,CAAiD,UAAC,CAAD;AAAA,iBAAO,CAAC,KAAK,CAAb;AAAA,SAAjD,CAAP;AAAA,OAAhC,CAAJ,EAA8G;AAC1G,eAAO,KAAP;AACH,OANgB,CAOjB;;;AACA,aACK,KAAK,0BAAL,IAAmC,KAAK,0BAAL,CAAgC,oBAAhC,CAAqD,MAArD,GAA8D,CAAlG,IACA,KAAK,cAAL,CAAoB,UAFxB;AAIH;AAED;;;;AAIG;;AA/CP;AAAA;AAAA,wBAgDa;AACL,UAAI,KAAK,WAAT,EAAsB;AAClB,eAAO,EAAP;AACH;;AACD,UAAI,CAAC,KAAK,aAAV,EAAyB;AACrB,eAAO,gBAAgB,CAAC,mBAAxB;AACH;;AACD,UAAI,KAAK,iBAAT,EAA4B;AACxB,aAAK,KAAL,CAAW,aAAX;AACA,eAAO,gBAAgB,CAAC,uBAAxB;AACH;;AACD,aAAO,EAAP;AACH;AA5DL;;AAAA;AAAA,EAAiD,GAAjD,CAAA;;AAK8B,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAqB,CAAA,E,6BAAA,E,aAAA,E,KAAqB,CAArB,CAAA;;AALT,mBAAmB,GAAA,UAAA,CAAA,CATvC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,aAAa,EAAE,sBADL;AAEV,IAAA,cAAc,EAAE,wBAFN;AAGV,IAAA,0BAA0B,EAAE;AAHlB,GAAD,CADT;AADD,CAAD,CAS8B,CAAA,EAAnB,mBAAmB,CAAnB;eAAA,mB","sourcesContent":["\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { MosaicId, MultisigAccountInfo } from 'symbol-sdk';\nimport { NotificationType } from '@/core/utils/NotificationType';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkMosaic: 'mosaic/networkMosaic',\n            currentAccount: 'account/currentAccount',\n            currentAccountMultisigInfo: 'account/currentAccountMultisigInfo',\n        }),\n    },\n})\nexport default class DisabledFormOverlay extends Vue {\n    /**\n     * Overrides checks\n     * @type{boolean}\n     */\n    @Prop({ default: false }) whitelisted: boolean;\n\n    /**\n     * Networks currency mosaic\n     * @var {MosaicId}\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * Current Account\n     * @var {AccountModel}\n     */\n    public currentAccount: AccountModel;\n    /**\n     * Current account multisig info\n     * @type {MultisigAccountInfo}\n     */\n    public currentAccountMultisigInfo: MultisigAccountInfo;\n\n    /// region computed properties getter/setter\n    /**\n     * Whether a form should be disabled to a multisig account\n     * @returns {boolean}\n     */\n    get disableToMultisig(): boolean {\n        // Don't disable form when the form is multisig-friendly\n        const multisigFriendlyRouteNames = ['dashboard.invoice'];\n\n        if (multisigFriendlyRouteNames.some((a) => this.$route.matched.map(({ name }) => name).some((b) => b === a))) {\n            return false;\n        }\n        // Disable the forms to accounts with cosignatories\n        return (\n            (this.currentAccountMultisigInfo && this.currentAccountMultisigInfo.cosignatoryAddresses.length > 0) ||\n            this.currentAccount.isMultisig\n        );\n    }\n\n    /**\n     * Alert to be displayed\n     * Id Alert is an empty string, this overlay won't render\n     * @returns {string}\n     */\n    get alert(): string {\n        if (this.whitelisted) {\n            return '';\n        }\n        if (!this.networkMosaic) {\n            return NotificationType.NO_NETWORK_CURRENCY;\n        }\n        if (this.disableToMultisig) {\n            this.$emit('disableForm');\n            return NotificationType.MULTISIG_ACCOUNTS_NO_TX;\n        }\n        return '';\n    }\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}