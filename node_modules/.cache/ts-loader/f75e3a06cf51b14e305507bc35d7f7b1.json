{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeActions/CosignatureQRAction/CosignatureQRActionTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeActions/CosignatureQRAction/CosignatureQRActionTs.ts","mtime":1611927202757},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKaW1wb3J0IHsgVnVlLCBDb21wb25lbnQsIFByb3AgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgTmV0d29ya1R5cGUgfSBmcm9tICdzeW1ib2wtc2RrJzsKaW1wb3J0IHsgUVJDb2RlRGV0YWlsSXRlbSB9IGZyb20gJ0AvY29tcG9uZW50cy9RUkNvZGUvUVJDb2RlQWN0aW9ucy9UZW1wbGF0ZVFSQWN0aW9uL1RlbXBsYXRlUVJBY3Rpb25Ucyc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBUZW1wbGF0ZVFSQWN0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9RUkNvZGUvUVJDb2RlQWN0aW9ucy9UZW1wbGF0ZVFSQWN0aW9uL1RlbXBsYXRlUVJBY3Rpb24udnVlJzsgLy8gQHRzLWlnbm9yZQoKaW1wb3J0IE1vc2FpY0Ftb3VudERpc3BsYXkgZnJvbSAnQC9jb21wb25lbnRzL01vc2FpY0Ftb3VudERpc3BsYXkvTW9zYWljQW1vdW50RGlzcGxheS52dWUnOyAvLyBAdHMtaWdub3JlCgppbXBvcnQgTWF4RmVlU2VsZWN0b3IgZnJvbSAnQC9jb21wb25lbnRzL01heEZlZVNlbGVjdG9yL01heEZlZVNlbGVjdG9yLnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBUcmFuc2FjdGlvbkRldGFpbHMgZnJvbSAnQC9jb21wb25lbnRzL1RyYW5zYWN0aW9uRGV0YWlscy9UcmFuc2FjdGlvbkRldGFpbHMudnVlJzsKCnZhciBDb3NpZ25hdHVyZVFSQWN0aW9uVHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQ29zaWduYXR1cmVRUkFjdGlvblRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDb3NpZ25hdHVyZVFSQWN0aW9uVHMpOwoKICBmdW5jdGlvbiBDb3NpZ25hdHVyZVFSQWN0aW9uVHMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29zaWduYXR1cmVRUkFjdGlvblRzKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQ29zaWduYXR1cmVRUkFjdGlvblRzLCBbewogICAga2V5OiAib25TdWJtaXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uU3VibWl0KCkgewogICAgICB0aGlzLm9uU3VjY2VzcygpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ2Rhc2hib2FyZC5pbmRleCcsCiAgICAgICAgLy8gQHRzLWlnbm9yZQogICAgICAgIHBhcmFtczogewogICAgICAgICAgdHJhbnNhY3Rpb246IHRoaXMucXJDb2RlLnRyYW5zYWN0aW9uLAogICAgICAgICAgYWN0aW9uOiAndHJhbnNhY3Rpb24tZGV0YWlscycKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImRldGFpbEl0ZW1zIiwKCiAgICAvKioKICAgICAqIEdldCBRUiBDb2RlIGRldGFpbCBpdGVtcwogICAgICoKICAgICAqIEByZXR1cm5zIFFSQ29kZURldGFpbEl0ZW1bXQogICAgICovCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIGl0ZW1zID0gW107CiAgICAgIGl0ZW1zLnB1c2gobmV3IFFSQ29kZURldGFpbEl0ZW0odGhpcy4kdCgncXJjb2RlX2RldGFpbF9pdGVtX3R5cGUnKS50b1N0cmluZygpLCB0aGlzLiR0KCdxcmNvZGVfZGV0YWlsX2l0ZW1fdHlwZV9jb3NpZ25hdHVyZXFyJykudG9TdHJpbmcoKSwgdHJ1ZSkpOwogICAgICBpdGVtcy5wdXNoKG5ldyBRUkNvZGVEZXRhaWxJdGVtKHRoaXMuJHQoJ3FyY29kZV9kZXRhaWxfaXRlbV9uZXR3b3JrX3R5cGUnKS50b1N0cmluZygpLCBOZXR3b3JrVHlwZVt0aGlzLnFyQ29kZS5uZXR3b3JrVHlwZV0sIHRydWUpKTsKICAgICAgcmV0dXJuIGl0ZW1zOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIENvc2lnbmF0dXJlUVJBY3Rpb25UczsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgZGVmYXVsdDogbnVsbAp9KV0sIENvc2lnbmF0dXJlUVJBY3Rpb25Ucy5wcm90b3R5cGUsICJxckNvZGUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgZGVmYXVsdDogbnVsbAp9KV0sIENvc2lnbmF0dXJlUVJBY3Rpb25Ucy5wcm90b3R5cGUsICJvblN1Y2Nlc3MiLCB2b2lkIDApOwoKQ29zaWduYXR1cmVRUkFjdGlvblRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBUZW1wbGF0ZVFSQWN0aW9uOiBUZW1wbGF0ZVFSQWN0aW9uLAogICAgTW9zYWljQW1vdW50RGlzcGxheTogTW9zYWljQW1vdW50RGlzcGxheSwKICAgIE1heEZlZVNlbGVjdG9yOiBNYXhGZWVTZWxlY3RvciwKICAgIFRyYW5zYWN0aW9uRGV0YWlsczogVHJhbnNhY3Rpb25EZXRhaWxzCiAgfQp9KV0sIENvc2lnbmF0dXJlUVJBY3Rpb25Ucyk7CmV4cG9ydCBkZWZhdWx0IENvc2lnbmF0dXJlUVJBY3Rpb25Uczs="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/QRCode/QRCodeActions/CosignatureQRAction/CosignatureQRActionTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,QAAqC,wBAArC;AAEA,SAAS,WAAT,QAA4B,YAA5B;AAEA,SAAS,gBAAT,QAAiC,uEAAjC,C,CACA;;AACA,OAAO,gBAAP,MAA6B,yEAA7B,C,CACA;;AACA,OAAO,mBAAP,MAAgC,0DAAhC,C,CACA;;AACA,OAAO,cAAP,MAA2B,gDAA3B,C,CACA;;AACA,OAAO,kBAAP,MAA+B,wDAA/B;;AAKA,IAAqB,qBAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAwBmB;AACX,WAAK,SAAL;AACA,WAAK,OAAL,CAAa,IAAb,CAAkB;AACd,QAAA,IAAI,EAAE,iBADQ;AAEd;AACA,QAAA,MAAM,EAAE;AAAE,UAAA,WAAW,EAAE,KAAK,MAAL,CAAY,WAA3B;AAAwC,UAAA,MAAM,EAAE;AAAhD;AAHM,OAAlB;AAKH;AA/BL;AAAA;;AAKI;;;;AAIG;AATP,wBAU0B;AAClB,UAAM,KAAK,GAAuB,EAAlC;AACA,MAAA,KAAK,CAAC,IAAN,CACI,IAAI,gBAAJ,CACI,KAAK,EAAL,CAAQ,yBAAR,EAAmC,QAAnC,EADJ,EAEI,KAAK,EAAL,CAAQ,uCAAR,EAAiD,QAAjD,EAFJ,EAGI,IAHJ,CADJ;AAOA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAI,gBAAJ,CAAqB,KAAK,EAAL,CAAQ,iCAAR,EAA2C,QAA3C,EAArB,EAA4E,WAAW,CAAC,KAAK,MAAL,CAAY,WAAb,CAAvF,EAAkH,IAAlH,CAAX;AAEA,aAAO,KAAP;AACH;AAtBL;;AAAA;AAAA,EAAmD,GAAnD,CAAA;;AAC6B,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAoB,CAAA,E,+BAAA,E,QAAA,E,KAAgC,CAAhC,CAAA;;AAEA,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CAAoB,CAAA,E,+BAAA,E,WAAA,E,KAA+B,CAA/B,CAAA;;AAHR,qBAAqB,GAAA,UAAA,CAAA,CAHzC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,gBAAgB,EAAhB,gBAAF;AAAoB,IAAA,mBAAmB,EAAnB,mBAApB;AAAyC,IAAA,cAAc,EAAd,cAAzC;AAAyD,IAAA,kBAAkB,EAAlB;AAAzD;AADL,CAAD,CAGgC,CAAA,EAArB,qBAAqB,CAArB;eAAA,qB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { CosignatureQR } from 'symbol-qr-library';\nimport { NetworkType } from 'symbol-sdk';\n\nimport { QRCodeDetailItem } from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRActionTs';\n// @ts-ignore\nimport TemplateQRAction from '@/components/QRCode/QRCodeActions/TemplateQRAction/TemplateQRAction.vue';\n// @ts-ignore\nimport MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';\n// @ts-ignore\nimport MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';\n// @ts-ignore\nimport TransactionDetails from '@/components/TransactionDetails/TransactionDetails.vue';\n\n@Component({\n    components: { TemplateQRAction, MosaicAmountDisplay, MaxFeeSelector, TransactionDetails },\n})\nexport default class CosignatureQRActionTs extends Vue {\n    @Prop({ default: null }) readonly qrCode!: CosignatureQR;\n\n    @Prop({ default: null }) readonly onSuccess: () => void;\n\n    /**\n     * Get QR Code detail items\n     *\n     * @returns QRCodeDetailItem[]\n     */\n    public get detailItems(): QRCodeDetailItem[] {\n        const items: QRCodeDetailItem[] = [];\n        items.push(\n            new QRCodeDetailItem(\n                this.$t('qrcode_detail_item_type').toString(),\n                this.$t('qrcode_detail_item_type_cosignatureqr').toString(),\n                true,\n            ),\n        );\n        items.push(new QRCodeDetailItem(this.$t('qrcode_detail_item_network_type').toString(), NetworkType[this.qrCode.networkType], true));\n\n        return items;\n    }\n\n    public onSubmit() {\n        this.onSuccess();\n        this.$router.push({\n            name: 'dashboard.index',\n            // @ts-ignore\n            params: { transaction: this.qrCode.transaction, action: 'transaction-details' },\n        });\n    }\n}\n"],"sourceRoot":""}]}