{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicBalanceList/MosaicBalanceListTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicBalanceList/MosaicBalanceListTs.ts","mtime":1611927202371},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/MosaicBalanceList/MosaicBalanceListTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { MosaicId, NamespaceId } from 'symbol-sdk';\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\n// @ts-ignore\nimport MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';\n// resources\nimport { dashboardImages } from '@/views/resources/Images';\nimport { MosaicService } from '@/services/MosaicService';\nimport { AccountMosaicConfigurationModel } from '@/core/database/entities/MosaicConfigurationModel';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n\nexport interface BalanceEntry {\n    id: MosaicId;\n    name: string;\n    amount: number;\n    mosaic: MosaicModel;\n}\n\n@Component({\n    components: {\n        MosaicAmountDisplay,\n    },\n    computed: {\n        ...mapGetters({\n            accountMosaicConfigurations: 'mosaic/accountMosaicConfigurations',\n            balanceMosaics: 'mosaic/balanceMosaics',\n            networkMosaic: 'mosaic/networkMosaic',\n            currentHeight: 'network/currentHeight',\n            networkConfiguration: 'network/networkConfiguration',\n            currentAccount: 'account/currentAccount',\n        }),\n    },\n})\nexport class MosaicBalanceListTs extends Vue {\n    /**\n     * Dashboard images\n     * @var {any}\n     */\n    protected dashboardImages: Record<string, any> = dashboardImages;\n\n    /**\n     * Networks 1currency mosaic\n     * @var {MosaicId}\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * Network mosaics info (all)\n     * @var {MosaicInfo[]}\n     */\n    public balanceMosaics: MosaicModel[];\n\n    /**\n     * List of mosaics that are hidden\n     * @var {string[]}\n     */\n    public accountMosaicConfigurations: AccountMosaicConfigurationModel;\n\n    /**\n     * Current account info\n     */\n    public currentAccount: AccountModel;\n    /**\n     * Whether the component is in edition mode\n     * @var {boolean}\n     */\n    public isEditionMode: boolean = false;\n\n    public currentHeight: number;\n\n    private networkConfiguration: NetworkConfigurationModel;\n\n    /// region computed properties getter/setter\n    /**\n     * Balance entries from the currently active account's mosaics\n     * @readonly\n     * @type {BalanceEntry}\n     */\n    get balanceEntries(): BalanceEntry[] {\n        return this.balanceMosaics.map((mosaic) => {\n            return {\n                id: new MosaicId(mosaic.mosaicIdHex),\n                name: mosaic.name || mosaic.mosaicIdHex,\n                amount: mosaic.balance || 0,\n                mosaic: mosaic,\n            };\n        });\n    }\n\n    /**\n     * All balance entries except expired mosaics\n     * @readonly\n     * @type {BalanceEntry[]}\n     */\n    get allBalanceEntries(): BalanceEntry[] {\n        return this.balanceEntries.filter((entry) => {\n            // calculate expiration\n            const expiration = MosaicService.getExpiration(\n                entry.mosaic,\n                this.currentHeight,\n                this.networkConfiguration.blockGenerationTargetTime,\n            );\n            // skip if mosaic is expired\n            return expiration !== 'expired';\n        });\n    }\n\n    /**\n     * Balance entries of active and not hidden mosaics\n     * @readonly\n     * @type {BalanceEntry[]}\n     */\n    get filteredBalanceEntries(): BalanceEntry[] {\n        // filter out hidden mosaics\n        return this.allBalanceEntries.filter((entry) => {\n            return !this.isMosaicHidden(entry.id);\n        });\n    }\n\n    /// end-region computed properties getter/setter\n\n    /**\n     * Returns true when mosaic \\a mosaicId is hidden\n     * @param {MosaicId} mosaicId\n     * @return {boolean}\n     */\n    public isMosaicHidden(mosaicId: MosaicId | NamespaceId): boolean {\n        const mosaicConfiguration = this.accountMosaicConfigurations[mosaicId.toHex()];\n        return mosaicConfiguration && mosaicConfiguration.hidden;\n    }\n\n    /**\n     * Returns true if no mosaic is hidden\n     * @returns {boolean}\n     */\n    public areAllMosaicsShown(): boolean {\n        return !Object.values(this.accountMosaicConfigurations).find((c) => c.hidden);\n    }\n\n    /**\n     * Toggle whether all mosaics are shown or hidden\n     * @return {void}\n     */\n    public toggleMosaicDisplay(mosaicId?: MosaicId | NamespaceId) {\n        // - clicked singular checkbox\n        if (mosaicId !== undefined) {\n            const isHidden = this.isMosaicHidden(mosaicId);\n            const action = isHidden ? 'SHOW_MOSAIC' : 'HIDE_MOSAIC';\n            return this.$store.dispatch('mosaic/' + action, { mosaicId: mosaicId, account: this.currentAccount });\n        }\n\n        // - update state\n        const action = this.areAllMosaicsShown() ? 'HIDE_MOSAIC' : 'SHOW_MOSAIC';\n        return this.balanceMosaics.forEach((mosaic) =>\n            this.$store.dispatch('mosaic/' + action, {\n                mosaicId: new MosaicId(mosaic.mosaicIdHex),\n                account: this.currentAccount,\n            }),\n        );\n    }\n}\n"],"sourceRoot":""}]}