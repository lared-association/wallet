{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/storage/AccountModelStorage.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/storage/AccountModelStorage.ts","mtime":1611927227183},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/database/storage/AccountModelStorage.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { VersionedObjectStorage } from '@/core/database/backends/VersionedObjectStorage';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\nimport { HarvestingService } from '@/services/HarvestingService';\nimport { Address } from 'symbol-sdk';\n\nexport class AccountModelStorage extends VersionedObjectStorage<Record<string, AccountModel>> {\n    /**\n     * Singleton instance as we want to run the migration just once\n     */\n    public static INSTANCE = new AccountModelStorage();\n\n    private constructor() {\n        super('accounts', [\n            {\n                description: 'Update accounts to hold encRemoteAccountPrivateKey',\n                migrate: (from: any) => {\n                    // update all accounts\n                    const accounts = Object.keys(from);\n\n                    const modified: any = from;\n                    accounts.map((name: string) => {\n                        modified[name] = {\n                            ...modified[name],\n                            encRemoteAccountPrivateKey: '',\n                        };\n                    });\n\n                    return modified;\n                },\n            },\n            {\n                description: 'Update accounts for 0.9.6.3 network (address changes)',\n                migrate: (from: any) => {\n                    // update all pre-0.9.6.x profiles\n                    const profiles = Object.keys(from);\n\n                    const modified: any = from;\n                    profiles.map((name: string) => {\n                        modified[name] = {\n                            ...modified[name],\n                            // re-generating address from public key (0.9.6.x changes in addresses format)\n                            address: Address.createFromPublicKey(modified[name].publicKey, modified[name].networkType).plain(),\n                        };\n                    });\n\n                    return modified;\n                },\n            },\n            {\n                description: 'Reset accounts for 0.9.6.3 network (non backwards compatible)',\n                migrate: () => undefined,\n            },\n            {\n                description: 'Update accounts to move harvesting fields to HarvestingModelStorage',\n                migrate: (from: any) => {\n                    const harvestingService = new HarvestingService();\n\n                    // update all accounts\n                    const accounts = Object.keys(from);\n\n                    const modified: any = from;\n                    accounts.map((name: string) => {\n                        const {\n                            address,\n                            signedPersistentDelReqTxs,\n                            isPersistentDelReqSent,\n                            selectedHarvestingNode,\n                            ...nonHarvesting\n                        } = modified[name];\n\n                        try {\n                            harvestingService.saveHarvestingModel({\n                                accountAddress: address,\n                                signedPersistentDelReqTxs,\n                                isPersistentDelReqSent,\n                                selectedHarvestingNode,\n                            });\n                            modified[name] = { address, ...nonHarvesting };\n                        } catch (error) {\n                            console.log(error);\n                        }\n                    });\n\n                    return modified;\n                },\n            },\n            {\n                description: 'Reset accounts for 0.10.0.5 network (non backwards compatible)',\n                migrate: () => undefined,\n            },\n        ]);\n    }\n}\n"],"sourceRoot":""}]}