{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/UIHelpers.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/UIHelpers.ts","mtime":1611927203920},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KZXhwb3J0IHZhciBVSUhlbHBlcnMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFVJSGVscGVycygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVSUhlbHBlcnMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFVJSGVscGVycywgbnVsbCwgW3sKICAgIGtleTogImNvcHlUb0NsaXBib2FyZCIsCgogICAgLyoqCiAgICAgKiBIZWxwZXIgbWV0aG9kIHRvIGNvcHkgdGV4dCB0byBjbGlwYm9hcmQKICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0CiAgICAgKiBAcmV0dXJuIHtib29sZWFufQogICAgICovCiAgICB2YWx1ZTogZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKHRleHQpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyBjcmVhdGUgZ2hvc3QgZWxlbWVudAogICAgICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7CiAgICAgICAgaW5wdXQuc2V0QXR0cmlidXRlKCdyZWFkb25seScsICdyZWFkb25seScpOwogICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgndmFsdWUnLCB0ZXh0KTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlucHV0KTsgLy8gdXNlIERPTSBjb21tYW5kcwoKICAgICAgICBpbnB1dC5zZWxlY3QoKTsKICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCgnY29weScpOyAvLyBmbHVzaAoKICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGlucHV0KTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBIZWxwZXIgbWV0aG9kIHRvIGRvd25sb2FkIGJ5dGUgYXJyYXkgYXMgYSBmaWxlCiAgICAgKgogICAgICogQHBhcmFtIHtVaW50OEFycmF5IHwgc3RyaW5nfSBieXRlcyBCeXRlIGFycmF5IHRvIGJlIGRvd25sb2FkZWQgYXMgYSBmaWxlCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmlsZU5hbWUKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlTWltZVR5cGUKICAgICAqIEByZXR1cm4ge09ic2VydmFibGU8Ym9vbGVhbj59CiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZG93bmxvYWRCeXRlc0FzRmlsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZG93bmxvYWRCeXRlc0FzRmlsZShieXRlcywgZmlsZU5hbWUsIGZpbGVNaW1lVHlwZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtieXRlc10sIHsKICAgICAgICAgIHR5cGU6IGZpbGVNaW1lVHlwZQogICAgICAgIH0pOwogICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsgLy8gLSBjcmVhdGUgbGluayAoPGE+KQoKICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICB2YXIgZXZlbnQgPSBuZXcgTW91c2VFdmVudCgnY2xpY2snKTsKICAgICAgICBhLmRvd25sb2FkID0gZmlsZU5hbWU7CiAgICAgICAgYS5ocmVmID0gdXJsOyAvLyAtIHN0YXJ0IGRvd25sb2FkCgogICAgICAgIGEuZGlzcGF0Y2hFdmVudChldmVudCk7CiAgICAgICAgcmVzb2x2ZSh0cnVlKTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVUlIZWxwZXJzOwp9KCk7"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/utils/UIHelpers.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;AAEH,WAAa,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACI;;;;AAIG;AALP,oCAMkC,IANlC,EAM8C;AACtC,UAAI;AACA;AACA,YAAM,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAd;AACA,QAAA,KAAK,CAAC,YAAN,CAAmB,UAAnB,EAA+B,UAA/B;AACA,QAAA,KAAK,CAAC,YAAN,CAAmB,OAAnB,EAA4B,IAA5B;AACA,QAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,KAA1B,EALA,CAOA;;AACA,QAAA,KAAK,CAAC,MAAN;AACA,QAAA,QAAQ,CAAC,WAAT,CAAqB,MAArB,EATA,CAWA;;AACA,QAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,KAA1B;AACA,eAAO,IAAP;AACH,OAdD,CAcE,OAAO,CAAP,EAAU;AACR,eAAO,KAAP;AACH;AACJ;AAED;;;;;;;AAOG;;AAjCP;AAAA;AAAA,wCAkCsC,KAlCtC,EAkCkE,QAlClE,EAkCoF,YAlCpF,EAkCwG;AAChG,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAY;AAC3B,YAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,CAAC,KAAD,CAAT,EAAkB;AAC3B,UAAA,IAAI,EAAE;AADqB,SAAlB,CAAb;AAGA,YAAM,GAAG,GAAG,MAAM,CAAC,GAAP,CAAW,eAAX,CAA2B,IAA3B,CAAZ,CAJ2B,CAM3B;;AACA,YAAM,CAAC,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAV;AACA,YAAM,KAAK,GAAG,IAAI,UAAJ,CAAe,OAAf,CAAd;AACA,QAAA,CAAC,CAAC,QAAF,GAAa,QAAb;AACA,QAAA,CAAC,CAAC,IAAF,GAAS,GAAT,CAV2B,CAW3B;;AACA,QAAA,CAAC,CAAC,aAAF,CAAgB,KAAhB;AACA,QAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAdM,CAAP;AAeH;AAlDL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nexport class UIHelpers {\n    /**\n     * Helper method to copy text to clipboard\n     * @param {string} text\n     * @return {boolean}\n     */\n    public static copyToClipboard(text: string): boolean {\n        try {\n            // create ghost element\n            const input = document.createElement('input');\n            input.setAttribute('readonly', 'readonly');\n            input.setAttribute('value', text);\n            document.body.appendChild(input);\n\n            // use DOM commands\n            input.select();\n            document.execCommand('copy');\n\n            // flush\n            document.body.removeChild(input);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Helper method to download byte array as a file\n     *\n     * @param {Uint8Array | string} bytes Byte array to be downloaded as a file\n     * @param {string} fileName\n     * @param {string} fileMimeType\n     * @return {Observable<boolean>}\n     */\n    public static downloadBytesAsFile(bytes: Uint8Array | string, fileName: string, fileMimeType: string): Promise<boolean> {\n        return new Promise((resolve) => {\n            const blob = new Blob([bytes], {\n                type: fileMimeType,\n            });\n            const url = window.URL.createObjectURL(blob);\n\n            // - create link (<a>)\n            const a = document.createElement('a');\n            const event = new MouseEvent('click');\n            a.download = fileName;\n            a.href = url;\n            // - start download\n            a.dispatchEvent(event);\n            resolve(true);\n        });\n    }\n}\n"],"sourceRoot":""}]}