{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/database/entities/AccountModel.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/database/entities/AccountModel.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgQWRkcmVzcywgUHVibGljQWNjb3VudCB9IGZyb20gJ3N5bWJvbC1zZGsnOwpleHBvcnQgdmFyIEFjY291bnRUeXBlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBY2NvdW50VHlwZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBY2NvdW50VHlwZSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQWNjb3VudFR5cGUsIG51bGwsIFt7CiAgICBrZXk6ICJmcm9tRGVzY3JpcHRvciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZnJvbURlc2NyaXB0b3IoZGVzY3JpcHRvcikgewogICAgICBzd2l0Y2ggKGRlc2NyaXB0b3IpIHsKICAgICAgICBkZWZhdWx0OgogICAgICAgIGNhc2UgJ0tzJzoKICAgICAgICAgIHJldHVybiBBY2NvdW50VHlwZS5LRVlTVE9SRTsKCiAgICAgICAgY2FzZSAnUGsnOgogICAgICAgICAgcmV0dXJuIEFjY291bnRUeXBlLlBSSVZBVEVfS0VZOwoKICAgICAgICBjYXNlICdTZWVkJzoKICAgICAgICAgIHJldHVybiBBY2NvdW50VHlwZS5TRUVEOwoKICAgICAgICBjYXNlICdUcmV6b3InOgogICAgICAgICAgcmV0dXJuIEFjY291bnRUeXBlLlRSRVpPUjsKICAgICAgfQogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFjY291bnRUeXBlOwp9KCk7CkFjY291bnRUeXBlLlNFRUQgPSAxOwpBY2NvdW50VHlwZS5QUklWQVRFX0tFWSA9IDI7CkFjY291bnRUeXBlLktFWVNUT1JFID0gMzsKQWNjb3VudFR5cGUuVFJFWk9SID0gNDsKLyoqCiAqIFN0b3JlZCBQT0pPIHRoYXQgaG9sZHMgdXNlciBwcm92aWRlZCBhY2NvdW50IGluZm9ybWF0aW9uLgogKgogKiBUaGUgb2JqZWN0IGlzIHNlcmlhbGl6ZWQgYW5kIGRlc2VyaWFsaXplZCB0by9mcm9tIEpTT04uIG5vIG1ldGhvZCBvciBjb21wbGV4IGF0dHJpYnV0ZXMgY2FuIGJlIGZpbmVkLgogKi8KCmV4cG9ydCB2YXIgQWNjb3VudE1vZGVsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBY2NvdW50TW9kZWwoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNjb3VudE1vZGVsKTsKICB9CgogIF9jcmVhdGVDbGFzcyhBY2NvdW50TW9kZWwsIG51bGwsIFt7CiAgICBrZXk6ICJnZXRPYmplY3RzIiwKCiAgICAvKioKICAgICAqIFBlcm1pdHMgdG8gcmV0dXJuIHNwZWNpZmljIGZpZWxkJ3MgbWFwcGVkIG9iamVjdCBpbnN0YW5jZXMKICAgICAqIEByZXR1cm4gYW55CiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRPYmplY3RzKG1vZGVsKSB7CiAgICAgIHZhciBhZGRyZXNzID0gQWRkcmVzcy5jcmVhdGVGcm9tUmF3QWRkcmVzcyhtb2RlbC5hZGRyZXNzKTsKICAgICAgdmFyIHB1YmxpY0FjY291bnQgPSBQdWJsaWNBY2NvdW50LmNyZWF0ZUZyb21QdWJsaWNLZXkobW9kZWwucHVibGljS2V5LCBhZGRyZXNzLm5ldHdvcmtUeXBlKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLAogICAgICAgIHB1YmxpY0FjY291bnQ6IHB1YmxpY0FjY291bnQKICAgICAgfTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBY2NvdW50TW9kZWw7Cn0oKTs="},{"version":3,"sources":["/home/hero/lared-wallet/src/core/database/entities/AccountModel.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;AAgBA,SAAS,OAAT,EAAkB,aAAlB,QAA0D,YAA1D;AAGA,WAAa,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAMiC,UANjC,EAMmD;AAC3C,cAAQ,UAAR;AACI;AACA,aAAK,IAAL;AACI,iBAAO,WAAW,CAAC,QAAnB;;AACJ,aAAK,IAAL;AACI,iBAAO,WAAW,CAAC,WAAnB;;AACJ,aAAK,MAAL;AACI,iBAAO,WAAW,CAAC,IAAnB;;AACJ,aAAK,QAAL;AACI,iBAAO,WAAW,CAAC,MAAnB;AATR;AAWH;AAlBL;;AAAA;AAAA;AAC2B,WAAA,CAAA,IAAA,GAAe,CAAf;AACA,WAAA,CAAA,WAAA,GAAc,CAAd;AACA,WAAA,CAAA,QAAA,GAAW,CAAX;AACA,WAAA,CAAA,MAAA,GAAS,CAAT;AAiB3B;;;;;;AAKA,WAAa,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAeI;;;;AAfJ,+BAmB6B,KAnB7B,EAmBgD;AACxC,UAAM,OAAO,GAAG,OAAO,CAAC,oBAAR,CAA6B,KAAK,CAAC,OAAnC,CAAhB;AACA,UAAM,aAAa,GAAG,aAAa,CAAC,mBAAd,CAAkC,KAAK,CAAC,SAAxC,EAAmD,OAAO,CAAC,WAA3D,CAAtB;AACA,aAAO;AAAE,QAAA,OAAO,EAAP,OAAF;AAAW,QAAA,aAAa,EAAb;AAAX,OAAP;AACH;AAvBL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { Address, PublicAccount, SignedTransaction } from 'symbol-sdk';\nimport { NodeModel } from './NodeModel';\n\nexport class AccountType {\n    public static readonly SEED: number = 1;\n    public static readonly PRIVATE_KEY = 2;\n    public static readonly KEYSTORE = 3;\n    public static readonly TREZOR = 4;\n\n    public static fromDescriptor(descriptor: string) {\n        switch (descriptor) {\n            default:\n            case 'Ks':\n                return AccountType.KEYSTORE;\n            case 'Pk':\n                return AccountType.PRIVATE_KEY;\n            case 'Seed':\n                return AccountType.SEED;\n            case 'Trezor':\n                return AccountType.TREZOR;\n        }\n    }\n}\n\n/**\n * Stored POJO that holds user provided account information.\n *\n * The object is serialized and deserialized to/from JSON. no method or complex attributes can be fined.\n */\nexport class AccountModel {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly profileName: string;\n    public readonly node: string;\n    public readonly type: number;\n    public readonly address: string;\n    public readonly publicKey: string;\n    public readonly encryptedPrivateKey: string;\n    public readonly path: string;\n    public readonly isMultisig: boolean;\n    public readonly encRemoteAccountPrivateKey?: string;\n    public readonly signedPersistentDelReqTxs?: SignedTransaction[];\n    public readonly isPersistentDelReqSent?: boolean;\n    public readonly selectedHarvestingNode?: NodeModel;\n    /**\n     * Permits to return specific field's mapped object instances\n     * @return any\n     */\n    public static getObjects(model: AccountModel): { address: Address; publicAccount: PublicAccount } {\n        const address = Address.createFromRawAddress(model.address);\n        const publicAccount = PublicAccount.createFromPublicKey(model.publicKey, address.networkType);\n        return { address, publicAccount };\n    }\n}\n"],"sourceRoot":""}]}