{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountNameDisplay/AccountNameDisplayTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountNameDisplay/AccountNameDisplayTs.ts","mtime":1611927201490},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwoKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUsIFByb3AgfSBmcm9tICd2dWUtcHJvcGVydHktZGVjb3JhdG9yJzsKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyIH0gZnJvbSAndmVlLXZhbGlkYXRlJzsKaW1wb3J0IHsgVmFsaWRhdGlvblJ1bGVzZXQgfSBmcm9tICdAL2NvcmUvdmFsaWRhdGlvbi9WYWxpZGF0aW9uUnVsZXNldCc7IC8vIGNoaWxkIGNvbXBvbmVudHMKLy8gQHRzLWlnbm9yZQoKaW1wb3J0IE1vZGFsRm9ybUFjY291bnROYW1lVXBkYXRlIGZyb20gJ0Avdmlld3MvbW9kYWxzL01vZGFsRm9ybUFjY291bnROYW1lVXBkYXRlL01vZGFsRm9ybUFjY291bnROYW1lVXBkYXRlLnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBFcnJvclRvb2x0aXAgZnJvbSAnQC9jb21wb25lbnRzL0Vycm9yVG9vbHRpcC9FcnJvclRvb2x0aXAudnVlJzsgLy8gQHRzLWlnbm9yZQoKaW1wb3J0IEZvcm1MYWJlbCBmcm9tICdAL2NvbXBvbmVudHMvRm9ybUxhYmVsL0Zvcm1MYWJlbC52dWUnOwoKdmFyIEFjY291bnROYW1lRGlzcGxheVRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEFjY291bnROYW1lRGlzcGxheVRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBY2NvdW50TmFtZURpc3BsYXlUcyk7CgogIGZ1bmN0aW9uIEFjY291bnROYW1lRGlzcGxheVRzKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBY2NvdW50TmFtZURpc3BsYXlUcyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIC8qKgogICAgICogV2hldGhlciBuYW1lIGlzIGN1cnJlbnRseSBiZWluZyBlZGl0ZWQKICAgICAqIEB2YXIge2Jvb2xlYW59CiAgICAgKi8KCiAgICBfdGhpcy5pc0VkaXRpbmdOYW1lID0gZmFsc2U7CiAgICAvKioKICAgICAqIFZhbGlkYXRpb24gcnVsZXMKICAgICAqIEB2YXIge1ZhbGlkYXRpb25SdWxlc2V0fQogICAgICovCgogICAgX3RoaXMudmFsaWRhdGlvblJ1bGVzID0gVmFsaWRhdGlvblJ1bGVzZXQ7IC8vLyBlbmQtcmVnaW9uIGNvbXB1dGVkIHByb3BlcnRpZXMgZ2V0dGVyL3NldHRlcgoKICAgIHJldHVybiBfdGhpczsKICB9IC8vLyByZWdpb24gY29tcHV0ZWQgcHJvcGVydGllcyBnZXR0ZXIvc2V0dGVyCgoKICBfY3JlYXRlQ2xhc3MoQWNjb3VudE5hbWVEaXNwbGF5VHMsIFt7CiAgICBrZXk6ICJoYXNOYW1lRm9ybU1vZGFsIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5lZGl0YWJsZSAmJiB0aGlzLmlzRWRpdGluZ05hbWU7CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQoZikgewogICAgICB0aGlzLmlzRWRpdGluZ05hbWUgPSBmOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFjY291bnROYW1lRGlzcGxheVRzOwp9KFZ1ZSk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiBudWxsCn0pXSwgQWNjb3VudE5hbWVEaXNwbGF5VHMucHJvdG90eXBlLCAiYWNjb3VudCIsIHZvaWQgMCk7CgpfX2RlY29yYXRlKFtQcm9wKHsKICBkZWZhdWx0OiBmYWxzZQp9KV0sIEFjY291bnROYW1lRGlzcGxheVRzLnByb3RvdHlwZSwgImVkaXRhYmxlIiwgdm9pZCAwKTsKCkFjY291bnROYW1lRGlzcGxheVRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBNb2RhbEZvcm1BY2NvdW50TmFtZVVwZGF0ZTogTW9kYWxGb3JtQWNjb3VudE5hbWVVcGRhdGUsCiAgICBWYWxpZGF0aW9uUHJvdmlkZXI6IFZhbGlkYXRpb25Qcm92aWRlciwKICAgIEVycm9yVG9vbHRpcDogRXJyb3JUb29sdGlwLAogICAgRm9ybUxhYmVsOiBGb3JtTGFiZWwKICB9Cn0pXSwgQWNjb3VudE5hbWVEaXNwbGF5VHMpOwpleHBvcnQgeyBBY2NvdW50TmFtZURpc3BsYXlUcyB9Ow=="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/AccountNameDisplay/AccountNameDisplayTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,kBAAT,QAAmC,cAAnC;AAIA,SAAS,iBAAT,QAAkC,qCAAlC,C,CAEA;AACA;;AACA,OAAO,0BAAP,MAAuC,0EAAvC,C,CACA;;AACA,OAAO,YAAP,MAAyB,4CAAzB,C,CACA;;AACA,OAAO,SAAP,MAAsB,sCAAtB;;AAUA,IAAa,oBAAb;AAAA;;AAAA;;AAAA,kCAAA;AAAA;;AAAA;;;AAWI;;;AAGG;;AACI,UAAA,aAAA,GAAyB,KAAzB;AAEP;;;AAGG;;AACI,UAAA,eAAA,GAAkB,iBAAlB,CArBX,CA+BI;;AA/BJ;AAgCC,GAhCD,CAuBI;;;AAvBJ;AAAA;AAAA,wBAwB+B;AACvB,aAAO,KAAK,QAAL,IAAiB,KAAK,aAA7B;AACH,KA1BL;AAAA,sBA4BgC,CA5BhC,EA4B0C;AAClC,WAAK,aAAL,GAAqB,CAArB;AACH;AA9BL;;AAAA;AAAA,EAA0C,GAA1C,CAAA;;AAII,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,8BAAA,E,SAAA,E,KAAsB,CAAtB,CAAA;;AAKA,UAAA,CAAA,CAHC,IAAI,CAAC;AACF,EAAA,OAAO,EAAE;AADP,CAAD,CAGL,CAAA,E,8BAAA,E,UAAA,E,KAAkB,CAAlB,CAAA;;AATS,oBAAoB,GAAA,UAAA,CAAA,CARhC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,0BAA0B,EAA1B,0BADQ;AAER,IAAA,kBAAkB,EAAlB,kBAFQ;AAGR,IAAA,YAAY,EAAZ,YAHQ;AAIR,IAAA,SAAS,EAAT;AAJQ;AADL,CAAD,CAQuB,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { ValidationProvider } from 'vee-validate';\n\n// internal dependencies\nimport { AccountModel } from '@/core/database/entities/AccountModel';\nimport { ValidationRuleset } from '@/core/validation/ValidationRuleset';\n\n// child components\n// @ts-ignore\nimport ModalFormAccountNameUpdate from '@/views/modals/ModalFormAccountNameUpdate/ModalFormAccountNameUpdate.vue';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport FormLabel from '@/components/FormLabel/FormLabel.vue';\n\n@Component({\n    components: {\n        ModalFormAccountNameUpdate,\n        ValidationProvider,\n        ErrorTooltip,\n        FormLabel,\n    },\n})\nexport class AccountNameDisplayTs extends Vue {\n    @Prop({\n        default: null,\n    })\n    account: AccountModel;\n\n    @Prop({\n        default: false,\n    })\n    editable: boolean;\n\n    /**\n     * Whether name is currently being edited\n     * @var {boolean}\n     */\n    public isEditingName: boolean = false;\n\n    /**\n     * Validation rules\n     * @var {ValidationRuleset}\n     */\n    public validationRules = ValidationRuleset;\n\n    /// region computed properties getter/setter\n    public get hasNameFormModal(): boolean {\n        return this.editable && this.isEditingName;\n    }\n\n    public set hasNameFormModal(f: boolean) {\n        this.isEditingName = f;\n    }\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}