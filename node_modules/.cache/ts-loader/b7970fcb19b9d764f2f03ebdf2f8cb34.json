{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/store/Community.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/store/Community.ts","mtime":1606213958969},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/store/Community.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,OAAO,GAAP,MAAgB,KAAhB,C,CACA;;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,gBAAT,QAA+C,6BAA/C;AAEA,IAAM,IAAI,GAAG,SAAS,CAAC,MAAV,EAAb;AAEA;;;;AAGA,eAAe;AACX,EAAA,UAAU,EAAE,IADD;AAEX,EAAA,KAAK,EAAE;AACH,IAAA,WAAW,EAAE,KADV;AAEH,IAAA,QAAQ,EAAE;AAFP,GAFI;AAMX,EAAA,OAAO,EAAE;AACL,IAAA,cAAc,EAAE,wBAAC,KAAD;AAAA,aAAW,KAAK,CAAC,WAAjB;AAAA,KADX;AAEL,IAAA,cAAc,EAAE,wBAAC,KAAD;AAAA,aAAW,KAAK,CAAC,QAAjB;AAAA;AAFX,GANE;AAUX,EAAA,SAAS,EAAE;AACP,IAAA,cAAc,EAAE,wBAAC,KAAD,EAAQ,WAAR,EAAuB;AACnC,MAAA,KAAK,CAAC,WAAN,GAAoB,WAApB;AACH,KAHM;AAIP,IAAA,WAAW,EAAE,qBAAC,KAAD,EAAQ,QAAR,EAA0C;AACnD,UAAM,WAAW,gCAAO,QAAP,sBAAoB,KAAK,CAAC,QAA1B,EAAjB;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAR,EAAe,UAAf,EAA2B,WAA3B;AACH;AAPM,GAVA;AAmBX,EAAA,OAAO,EAAE;AACC,IAAA,UADD,4BACyC;AAAA,UAA3B,MAA2B,QAA3B,MAA2B;AAAA,UAAnB,QAAmB,QAAnB,QAAmB;AAAA,UAAT,OAAS,QAAT,OAAS;;;;;;;;;AACpC,gBAAA,Q,GAAW,SAAX,QAAW;AAAA,yBAAW,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExB,mCAAM,QAAQ,CAAC,gBAAD,CAAd;;AAFwB;AAGxB,4BAAA,MAAM,CAAC,gBAAD,EAAmB,IAAnB,CAAN;;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAX;AAAA,iB;;;AAKjB,uBAAM,IAAI,CAAC,UAAL,CAAgB,QAAhB,EAA0B;AAAE,kBAAA,OAAO,EAAP;AAAF,iBAA1B,CAAN;;;;;;;;;AACH,KARI;AASC,IAAA,YATD,+BASiC;AAAA,UAAjB,MAAiB,SAAjB,MAAiB;AAAA,UAAT,OAAS,SAAT,OAAS;;;;;;;;;AAC5B,gBAAA,Q,GAAW,SAAX,QAAW;AAAA,yBAAW,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA,4BAAA,MAAM,CAAC,gBAAD,EAAmB,KAAnB,CAAN;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAX;AAAA,iB;;;AAIjB,uBAAM,IAAI,CAAC,YAAL,CAAkB,QAAlB,EAA4B;AAAE,kBAAA,OAAO,EAAP;AAAF,iBAA5B,CAAN;;;;;;;;;AACH,KAfI;AAgBL;AACM,IAAA,cAjBD,iCAiB0B;AAAA,UAAR,MAAQ,SAAR,MAAQ;;;;;;;;AAGjB,gBAAA,O,GAAU,IAAI,gBAAJ,E;;AACiB,uBAAM,OAAO,CAAC,iBAAR,EAAN;;;AAA3B,gBAAA,Q;AACN,gBAAA,MAAM,CAAC,aAAD,EAAgB,QAAhB,CAAN;;;;;;;sBAGM,IAAI,KAAJ,c;;;;;;;;;AAEb;AA3BI;AAnBE,CAAf","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport Vue from 'vue';\n// internal dependencies\nimport { AwaitLock } from './AwaitLock';\nimport { CommunityService, ArticleEntry } from '@/services/CommunityService';\n\nconst Lock = AwaitLock.create();\n\n/**\n * Community Store\n */\nexport default {\n    namespaced: true,\n    state: {\n        initialized: false,\n        articles: [],\n    },\n    getters: {\n        getInitialized: (state) => state.initialized,\n        latestArticles: (state) => state.articles,\n    },\n    mutations: {\n        setInitialized: (state, initialized) => {\n            state.initialized = initialized;\n        },\n        addArticles: (state, articles: ArticleEntry[]): void => {\n            const newArticles = [...articles, ...state.articles];\n            Vue.set(state, 'articles', newArticles);\n        },\n    },\n    actions: {\n        async initialize({ commit, dispatch, getters }) {\n            const callback = async () => {\n                // fetch news\n                await dispatch('FETCH_ARTICLES');\n                commit('setInitialized', true);\n            };\n            await Lock.initialize(callback, { getters });\n        },\n        async uninitialize({ commit, getters }) {\n            const callback = async () => {\n                // close websocket connections\n                commit('setInitialized', false);\n            };\n            await Lock.uninitialize(callback, { getters });\n        },\n        /// region scoped actions\n        async FETCH_ARTICLES({ commit }) {\n            // fetch articles from external feed\n            try {\n                const service = new CommunityService();\n                const articles: ArticleEntry[] = await service.getLatestArticles();\n                commit('addArticles', articles);\n            } catch (e) {\n                // forward error\n                throw new Error(e);\n            }\n        },\n        /// end-region scoped actions\n    },\n};\n"],"sourceRoot":""}]}