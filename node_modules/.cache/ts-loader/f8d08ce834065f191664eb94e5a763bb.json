{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/ViewTransferTransaction.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/ViewTransferTransaction.ts","mtime":1611927203797},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/core/transactions/ViewTransferTransaction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH,SAAS,aAAT,QAAmD,YAAnD,C,CACA;;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,OAAO,IAAP,MAAiB,YAAjB;AAEA,SAAS,aAAT,QAA8B,0BAA9B;AAGA,WAAa,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAgCI;;AAEG;AAlCP,yCAmCgC;AAAA;;AACxB,UAAM,WAAW,GAAG,KAAK,WAAzB;AACA,UAAM,eAAe,GAAG,WAAW,CAAC,OAAZ,CAAoB,GAApB,CAAwB,UAAC,iBAAD,EAAsB;AAClE,eAAO;AACH,UAAA,EAAE,EAAE,iBAAiB,CAAC,EADnB;AAEH,UAAA,SAAS,EAAE,iBAAiB,CAAC,EAAlB,CAAqB,KAArB,EAFR;AAGH,UAAA,MAAM,EAAE,iBAAiB,CAAC,MAAlB,CAAyB,OAAzB;AAHL,SAAP;AAKH,OANuB,CAAxB;AAOA,UAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,OAAjC;AACA,UAAM,QAAQ,GAAG,KAAK,UAAtB;AACA,UAAM,WAAW,GAAG,eAAe,CAAC,GAAhB,CAAoB,UAAC,MAAD,EAAS,KAAT,EAAgB,IAAhB,EAAwB;AAC5D,YAAM,KAAK,GAAG,QAAQ,GAAG,OAAH,GAAa,KAAnC;AACA,YAAM,WAAW,GAAG,IAAI,CAAC,CAAL,CAAO,QAAP,CAApB,CAF4D,CAG5D;;AACA,eAAO,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,UAAC,KAAD;AAAA,iBAAW,KAAK,CAAC,WAAN,IAAqB,MAAM,CAAC,SAAvC;AAAA,SAA3B,IACD;AACI,UAAA,GAAG,YAAK,WAAL,eAAqB,KAAK,GAAG,CAA7B,cAAkC,IAAI,CAAC,MAAvC,MADP;AAEI,UAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAa;AAAE,YAAA,KAAK,EAAL;AAAF,WAAb,CAFT;AAGI,UAAA,QAAQ,EAAE;AAHd,SADC,GAMD;AACI,UAAA,GAAG,YAAK,WAAL,eAAqB,KAAK,GAAG,CAA7B,cAAkC,IAAI,CAAC,MAAvC,eAAkD,IAAI,CAAC,CAAL,CAAO,gBAAP,CAAlD,CADP;AAEI,UAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAa;AAAE,YAAA,KAAK,EAAL;AAAF,WAAb,CAFT;AAGI,UAAA,QAAQ,EAAE;AAHd,SANN;AAWH,OAfmB,CAApB;AAiBA,cACI;AAAE,QAAA,GAAG,EAAE,QAAP;AAAiB,QAAA,KAAK,EAAE,KAAK;AAA7B,OADJ,EAEI;AAAE,QAAA,GAAG,EAAE,iBAAP;AAA0B,QAAA,KAAK,EAAE,KAAK,WAAL,CAAiB,gBAAlD;AAAoE,QAAA,SAAS,EAAE;AAA/E,OAFJ,4BAGO,WAHP,IAII;AACI,QAAA,GAAG,EAAE,SADT;AAEI,QAAA,KAAK,EAAE;AACH,UAAA,OAAO,EAAE,OADN;AAEH,UAAA,QAAQ,EAAE,KAAK,UAFZ;AAGH,UAAA,SAAS,EAAE,KAAK,WAAL,CAAiB,gBAHzB;AAIH,UAAA,WAAW,EAAE,KAAK,WAAL,CAAiB,aAAjB,EAJV;AAKH,UAAA,MAAM,EAAE,KAAK,WAAL,CAAiB,MAAjB,GACF,aAAa,CAAC,mBAAd,CAAkC,KAAK,WAAL,CAAiB,MAAjB,CAAwB,SAA1D,EAAqE,KAAK,WAAL,CAAiB,WAAtF,CADE,GAEF;AAPH,SAFX;AAWI,QAAA,SAAS,EAAE;AAXf,OAJJ;AAkBH;AAjFL;AAAA;AAAA,wBACyB;AACjB,UAAM,oBAAoB,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,8BAApB,CAA7B;AACA,aAAO,KAAK,WAAL,CAAiB,gBAAjB,IAAqC,oBAArC,IAA6D,KAAK,WAAL,CAAiB,gBAAjB,CAAkC,MAAlC,CAAyC,oBAAzC,CAApE;AACH;AAED;;;AAGG;;AATP;AAAA;AAAA,wBAUsB;AACd,UAAI,KAAK,WAAL,CAAiB,MAArB,EAA6B;AACzB,eAAO,KAAK,WAAL,CAAiB,MAAjB,CAAwB,OAAxB,CAAgC,MAAhC,EAAP;AACH;;AACD,UAAM,oBAAoB,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,8BAApB,CAA7B;AACA,aAAO,oBAAoB,GAAG,oBAAoB,CAAC,MAArB,EAAH,GAAmC,EAA9D;AACH;AAED;;;AAGG;;AArBP;AAAA;AAAA,wBAsBgC;AACxB,UAAM,aAAa,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,uBAApB,CAAtB;AACA,UAAM,oBAAoB,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,8BAApB,CAA7B;AACA,UAAM,cAAc,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,uBAApB,CAAvB;AACA,aAAO,cAAc,CAAC,MAAf,CAAsB,UAAC,KAAD,EAAU;AACnC,YAAM,UAAU,GAAG,aAAa,CAAC,aAAd,CAA4B,KAA5B,EAAmC,aAAnC,EAAkD,oBAAoB,CAAC,yBAAvE,CAAnB;AACA,eAAO,UAAU,KAAK,SAAtB;AACH,OAHM,CAAP;AAIH;AA9BL;;AAAA;AAAA,EAA6C,eAA7C","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { PublicAccount, TransferTransaction } from 'symbol-sdk';\n// internal dependencies\nimport { TransactionView } from './TransactionView';\nimport { AttachedMosaic } from '@/services/MosaicService';\nimport i18n from '@/language';\nimport { TransactionDetailItem } from '@/core/transactions/TransactionDetailItem';\nimport { MosaicService } from '@/services/MosaicService';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\n\nexport class ViewTransferTransaction extends TransactionView<TransferTransaction> {\n    public get isIncoming() {\n        const currentSignerAddress = this.$store.getters['account/currentSignerAddress'];\n        return this.transaction.recipientAddress && currentSignerAddress && this.transaction.recipientAddress.equals(currentSignerAddress);\n    }\n\n    /**\n     * Displayed sender\n     * @var {string}\n     */\n    private get sender(): string {\n        if (this.transaction.signer) {\n            return this.transaction.signer.address.pretty();\n        }\n        const currentSignerAddress = this.$store.getters['account/currentSignerAddress'];\n        return currentSignerAddress ? currentSignerAddress.pretty() : '';\n    }\n\n    /**\n     * get available mosaics to check if any of them is expired\n     * @var {MosaicModel[]}\n     */\n    private get availableMosaics(): MosaicModel[] {\n        const currentHeight = this.$store.getters['network/currentHeight'];\n        const networkConfiguration = this.$store.getters['network/networkConfiguration'];\n        const balanceMosaics = this.$store.getters['mosaic/balanceMosaics'];\n        return balanceMosaics.filter((entry) => {\n            const expiration = MosaicService.getExpiration(entry, currentHeight, networkConfiguration.blockGenerationTargetTime);\n            return expiration !== 'expired';\n        });\n    }\n\n    /**\n     * Displayed items\n     */\n    protected resolveDetailItems(): TransactionDetailItem[] {\n        const transaction = this.transaction;\n        const attachedMosaics = transaction.mosaics.map((transactionMosaic) => {\n            return {\n                id: transactionMosaic.id,\n                mosaicHex: transactionMosaic.id.toHex(),\n                amount: transactionMosaic.amount.compact(),\n            } as AttachedMosaic;\n        });\n        const message = this.transaction.message;\n        const incoming = this.isIncoming;\n        const mosaicItems = attachedMosaics.map((mosaic, index, self) => {\n            const color = incoming ? 'green' : 'red';\n            const mosaicLabel = i18n.t('mosaic');\n            // check if mosaic not expired yet\n            return this.availableMosaics.some((entry) => entry.mosaicIdHex == mosaic.mosaicHex)\n                ? {\n                      key: `${mosaicLabel} (${index + 1}/${self.length})`,\n                      value: { ...mosaic, color },\n                      isMosaic: true,\n                  }\n                : {\n                      key: `${mosaicLabel} (${index + 1}/${self.length}) ${i18n.t('mosaic_expired')}`,\n                      value: { ...mosaic, color },\n                      isMosaic: true,\n                  };\n        });\n\n        return [\n            { key: 'sender', value: this.sender },\n            { key: 'transfer_target', value: this.transaction.recipientAddress, isAddress: true },\n            ...mosaicItems,\n            {\n                key: 'message',\n                value: {\n                    message: message,\n                    incoming: this.isIncoming,\n                    recipient: this.transaction.recipientAddress,\n                    unannounced: this.transaction.isUnannounced(),\n                    signer: this.transaction.signer\n                        ? PublicAccount.createFromPublicKey(this.transaction.signer.publicKey, this.transaction.networkType)\n                        : null,\n                },\n                isMessage: true,\n            },\n        ];\n    }\n}\n"],"sourceRoot":""}]}