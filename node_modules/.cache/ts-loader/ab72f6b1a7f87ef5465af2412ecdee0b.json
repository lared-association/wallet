{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/pages/dashboard/invoice/DashboardInvoicePageTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/pages/dashboard/invoice/DashboardInvoicePageTs.ts","mtime":1606213958977},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/views/pages/dashboard/invoice/DashboardInvoicePageTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeA;;AACA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,SAAS,eAAT,QAA+C,mBAA/C;AACA,SAAS,OAAT,QAA0D,YAA1D,C,CAEA;AACA;;AACA,OAAO,uBAAP,MAAoC,mEAApC,C,CACA;;AACA,OAAO,aAAP,MAA0B,qDAA1B;;AAmBA,IAAa,sBAAb;AAAA;;AAAA;;AAAA,oCAAA;AAAA;;AAAA;;;AAeI;;;;;AAIO,UAAA,YAAA,GAAoC,EAApC;AAnBX;AA6GC,GA7GD,CAqBI;;AACA;;;;;;;AAtBJ;AAAA;AAmGI;;AAEA;;;;;AArGJ,oCA0G2B,YA1G3B,EA0G4D;AACpD,MAAA,GAAG,CAAC,GAAJ,CAAQ,IAAR,EAAc,cAAd,EAA8B,YAA9B;AACH;AA5GL;AAAA;AAAA,wBA2BwB;AAChB;AAEA,UAAI,CAAC,KAAK,kBAAN,IAA4B,CAAC,KAAK,kBAAL,CAAwB,gBAAzD,EAA2E;AACvE,eAAO,EAAP;AACH,OALe,CAOhB;AACA;;;AACA,UAAM,QAAQ,GAAG,KAAK,kBAAtB;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,gBAA3B;AACA,aAAO,SAAS,YAAY,OAArB,GAA+B,SAAS,CAAC,MAAV,EAA/B,GAAoD,SAAS,CAAC,KAAV,EAA3D;AACH;AAED;;;;;;AAzCJ;AAAA;AAAA,wBA8C4B;AACpB;AACA,UAAI,CAAC,KAAK,kBAAV,EAA8B;AAC1B,eAAO,IAAP;AACH,OAJmB,CAMpB;AACA;;;AACA,UAAM,QAAQ,GAAG,KAAK,kBAAtB;;AAEA,UAAI;AACA,eAAO,eAAe,CAAC,wBAAhB,EACH;AACA,QAAA,QAFG,EAGH,KAAK,WAHF,EAIH,KAAK,cAJF,CAAP;AAMH,OAPD,CAOE,OAAO,CAAP,EAAU;AACR,eAAO,IAAP;AACH;AACJ;AAED;;;;;AApEJ;AAAA;AAAA,wBAwE0B;AAClB,UAAI,KAAK,gBAAT,EAA2B;AACvB,eAAO,KAAK,gBAAL,CAAsB,WAA7B;AACH;AACJ;AAED;;;;;AA9EJ;AAAA;AAAA,wBAkFwB;AAChB,UAAI,KAAK,YAAL,CAAkB,MAAtB,EAA8B;AAC1B,eAAO,KAAK,YAAL,CAAkB,CAAlB,CAAP;AACH;AACJ;AAED;;;;;AAxFJ;AAAA;AAAA,wBA4FsB;AACd,UAAI,CAAC,KAAK,gBAAV,EAA4B;AACxB,eAAO,EAAP;AACH;;AACD,aAAO,KAAK,gBAAL,CAAsB,WAA7B;AACH;AAjGL;;AAAA;AAAA,EAA4C,GAA5C,CAAA;;AAAa,sBAAsB,GAAA,UAAA,CAAA,CAZlC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AACR,IAAA,uBAAuB,EAAvB,uBADQ;AAER,IAAA,aAAa,EAAb;AAFQ,GADL;AAKP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,WAAW,EAAE,qBADH;AAEV,IAAA,cAAc,EAAE;AAFN,GAAD,CADT;AALD,CAAD,CAYyB,CAAA,EAAtB,sBAAsB,CAAtB;SAAA,sB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { QRCodeGenerator, TransactionQR } from 'symbol-qr-library';\nimport { Address, NetworkType, TransferTransaction } from 'symbol-sdk';\nimport { MosaicAttachment } from '@/views/forms/FormTransferTransaction/FormTransferTransactionTs.ts';\n// child components\n// @ts-ignore\nimport FormTransferTransaction from '@/views/forms/FormTransferTransaction/FormTransferTransaction.vue';\n// @ts-ignore\nimport QRCodeDisplay from '@/components/QRCode/QRCodeDisplay/QRCodeDisplay.vue';\n\nexport interface ITransactionEntry {\n    transaction: TransferTransaction;\n    attachments: MosaicAttachment[];\n}\n\n@Component({\n    components: {\n        FormTransferTransaction,\n        QRCodeDisplay,\n    },\n    computed: {\n        ...mapGetters({\n            networkType: 'network/networkType',\n            generationHash: 'network/generationHash',\n        }),\n    },\n})\nexport class DashboardInvoicePageTs extends Vue {\n    /**\n     * Network type\n     * @see {Store.Network}\n     * @var {NetworkType}\n     */\n    public networkType: NetworkType;\n\n    /**\n     * Network's generation hash\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * The transaction to be translated to a QR code\n     * @type {ITransactionEntry[]}\n     */\n    public transactions: ITransactionEntry[] = [];\n\n    /// region computed properties getter/setter\n    /**\n     * Recipient to be shown in the view\n     * @readonly\n     * @type {string}\n     */\n    public get recipient(): string {\n        // if (!this.transactions.length) return ''\n\n        if (!this.currentTransaction || !this.currentTransaction.recipientAddress) {\n            return '';\n        }\n\n        // - read TransferTransaction instance\n        // const transfer = this.transactions.shift() as TransferTransaction\n        const transfer = this.currentTransaction;\n        const recipient = transfer.recipientAddress;\n        return recipient instanceof Address ? recipient.pretty() : recipient.toHex();\n    }\n\n    /**\n     * Transaction QR code arguments\n     * @readonly\n     * @type {TransactionQR}\n     */\n    public get transactionQR(): TransactionQR {\n        // if (!this.transactions.length) return null\n        if (!this.currentTransaction) {\n            return null;\n        }\n\n        // this.currentTransaction = this.transactions.shift() as TransferTransaction\n        // - read TransferTransaction instance\n        const transfer = this.currentTransaction;\n\n        try {\n            return QRCodeGenerator.createTransactionRequest(\n                // @ts-ignore // @TODO SDK upgrade\n                transfer,\n                this.networkType,\n                this.generationHash,\n            );\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * The transaction object\n     * @type {TransferTransaction | undefined}\n     */\n    get currentTransaction(): TransferTransaction | undefined {\n        if (this.transactionEntry) {\n            return this.transactionEntry.transaction as TransferTransaction;\n        }\n    }\n\n    /**\n     * The first transaction in the list stack\n     * @type {ITransactionEntry}\n     */\n    get transactionEntry(): ITransactionEntry {\n        if (this.transactions.length) {\n            return this.transactions[0];\n        }\n    }\n\n    /**\n     * The transaction's mosaics to be displayed\n     * @type {MosaicAttachment[]}\n     */\n    get balanceEntries(): MosaicAttachment[] {\n        if (!this.transactionEntry) {\n            return [];\n        }\n        return this.transactionEntry.attachments;\n    }\n\n    /// end-region computed properties getter/setter\n\n    /**\n     * Hook called when the child component FormTransferTransaction\n     * emits the 'onTransactionsChange' event with its new transactions.\n     * @param {ITransactionEntry} transactions\n     */\n    public onInvoiceChange(transactions: ITransactionEntry[]) {\n        Vue.set(this, 'transactions', transactions);\n    }\n}\n"],"sourceRoot":""}]}