{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/services/AssetTableService/MosaicTableService.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/services/AssetTableService/MosaicTableService.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/services/AssetTableService/MosaicTableService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeA;AACA,SAAS,iBAAT,QAA8C,qBAA9C;AAEA,SAAS,aAAT,QAA8B,0BAA9B;AAGA,WAAa,kBAAb;AAAA;;AAAA;;AACI,8BACI,aADJ,EAEqB,OAFrB,EAGqB,oBAHrB,EAGoE;AAAA;;AAAA;;AAEhE,8BAAM,aAAN;AAHiB,UAAA,OAAA,GAAA,OAAA;AACA,UAAA,oBAAA,GAAA,oBAAA;AAA+C;AAGnE;AAED;;;;;;AATJ;AAAA;AAAA,qCAayB;AACjB,aAAO,CACH;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE;AAAxB,OADG,EAEH;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,KAAK,EAAE;AAAvB,OAFG,EAGH;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,KAAK,EAAE;AAAzB,OAHG,EAIH;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,KAAK,EAAE;AAA1B,OAJG,EAKH;AAAE,QAAA,IAAI,EAAE,YAAR;AAAsB,QAAA,KAAK,EAAE;AAA7B,OALG,EAMH;AAAE,QAAA,IAAI,EAAE,cAAR;AAAwB,QAAA,KAAK,EAAE;AAA/B,OANG,EAOH;AAAE,QAAA,IAAI,EAAE,cAAR;AAAwB,QAAA,KAAK,EAAE;AAA/B,OAPG,EAQH;AAAE,QAAA,IAAI,EAAE,eAAR;AAAyB,QAAA,KAAK,EAAE;AAAhC,OARG,EASH;AAAE,QAAA,IAAI,EAAE,cAAR;AAAwB,QAAA,KAAK,EAAE;AAA/B,OATG,CAAP;AAWH;AAED;;;;;AA3BJ;AAAA;AAAA,mCA+BuB;AAAA;;AACf;AACA,UAAM,WAAW,GAAG,KAAK,OAAzB;AACA,UAAM,aAAa,GAAG,KAAK,aAA3B;AACA,aAAO,WAAW,CACb,GADE,CACE,UAAC,UAAD,EAAe;AAChB,YAAM,UAAU,GAAG,aAAa,CAAC,aAAd,CACf,UADe,EAEf,aAFe,EAGf,MAAI,CAAC,oBAAL,CAA0B,yBAHX,CAAnB,CADgB,CAMhB;;AACA,eAAO;AACH,UAAA,KAAK,EAAE,UAAU,CAAC,WADf;AAEH,UAAA,IAAI,EAAE,UAAU,CAAC,IAAX,IAAmB,KAFtB;AAGH,UAAA,MAAM,EAAE,UAAU,CAAC,MAAX,CAAkB,cAAlB,EAHL;AAIH,UAAA,OAAO,EAAE,CAAC,UAAU,CAAC,OAAX,IAAsB,CAAvB,IAA4B,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,UAAU,CAAC,YAAxB,CAJlC;AAKH,UAAA,UAAU,EAAE,UALT;AAMH,UAAA,YAAY,EAAE,UAAU,CAAC,YANtB;AAOH,UAAA,YAAY,EAAE,UAAU,CAAC,YAPtB;AAQH,UAAA,aAAa,EAAE,UAAU,CAAC,aARvB;AASH,UAAA,YAAY,EAAE,UAAU,CAAC,YATtB;AAUH,UAAA,YAAY,EAAE,UAAU,CAAC,YAAX,IAA2B;AAVtC,SAAP;AAYH,OApBE,EAqBF,MArBE,CAqBK,UAAC,CAAD;AAAA,eAAO,CAAP;AAAA,OArBL,CAAP,CAJe,CAyBQ;AAC1B;AAzDL;;AAAA;AAAA,EAAwC,iBAAxC","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// internal dependencies\nimport { AssetTableService, TableField } from './AssetTableService';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\nimport { MosaicService } from '@/services/MosaicService';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\n\nexport class MosaicTableService extends AssetTableService {\n    constructor(\n        currentHeight: number,\n        private readonly mosaics: MosaicModel[],\n        private readonly networkConfiguration: NetworkConfigurationModel,\n    ) {\n        super(currentHeight);\n    }\n\n    /**\n     * Return table fields to be displayed in a table header\n     * @returns {TableField[]}\n     */\n    public getTableFields(): TableField[] {\n        return [\n            { name: 'hexId', label: 'table_header_hex_id' },\n            { name: 'name', label: 'table_header_name' },\n            { name: 'supply', label: 'table_header_supply' },\n            { name: 'balance', label: 'table_header_balance' },\n            { name: 'expiration', label: 'table_header_expiration' },\n            { name: 'divisibility', label: 'table_header_divisibility' },\n            { name: 'transferable', label: 'table_header_transferable' },\n            { name: 'supplyMutable', label: 'table_header_supply_mutable' },\n            { name: 'restrictable', label: 'table_header_restrictable' },\n        ];\n    }\n\n    /**\n     * Return table values to be displayed in a table rows\n     * @returns {MosaicTableRowValues[]}\n     */\n    public getTableRows(): any[] {\n        // - get reactive mosaic data from the store\n        const mosaicsInfo = this.mosaics;\n        const currentHeight = this.currentHeight;\n        return mosaicsInfo\n            .map((mosaicInfo) => {\n                const expiration = MosaicService.getExpiration(\n                    mosaicInfo,\n                    currentHeight,\n                    this.networkConfiguration.blockGenerationTargetTime,\n                );\n                // - map table fields\n                return {\n                    hexId: mosaicInfo.mosaicIdHex,\n                    name: mosaicInfo.name || 'N/A',\n                    supply: mosaicInfo.supply.toLocaleString(),\n                    balance: (mosaicInfo.balance || 0) / Math.pow(10, mosaicInfo.divisibility),\n                    expiration: expiration,\n                    divisibility: mosaicInfo.divisibility,\n                    transferable: mosaicInfo.transferable,\n                    supplyMutable: mosaicInfo.supplyMutable,\n                    restrictable: mosaicInfo.restrictable,\n                    metadataList: mosaicInfo.metadataList || [],\n                };\n            })\n            .filter((x) => x); // filter out mosaics that are not yet available\n    }\n}\n"],"sourceRoot":""}]}