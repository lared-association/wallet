{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormAliasTransaction/FormAliasTransactionTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormAliasTransaction/FormAliasTransactionTs.ts","mtime":1611927204645},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormAliasTransaction/FormAliasTransactionTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n    Address,\n    AddressAliasTransaction,\n    AliasAction,\n    AliasTransaction,\n    AliasType,\n    MosaicAliasTransaction,\n    MosaicId,\n    NamespaceId,\n    UInt64,\n} from 'symbol-sdk';\nimport { Component, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\nimport { ValidationRuleset } from '@/core/validation/ValidationRuleset';\nimport { FormTransactionBase } from '../FormTransactionBase/FormTransactionBase';\n// child components\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\n// @ts-ignore\nimport FormWrapper from '@/components/FormWrapper/FormWrapper.vue';\n// @ts-ignore\nimport FormRow from '@/components/FormRow/FormRow.vue';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport NamespaceSelector from '@/components/NamespaceSelector/NamespaceSelector.vue';\n// @ts-ignore\nimport MosaicSelector from '@/components/MosaicSelector/MosaicSelector.vue';\n// @ts-ignore\nimport AddressInput from '@/components/AddressInput/AddressInput.vue';\n// @ts-ignore\nimport MaxFeeSelector from '@/components/MaxFeeSelector/MaxFeeSelector.vue';\n// @ts-ignore\nimport ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';\n// @ts-ignore\nimport MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\nimport { NamespaceModel } from '@/core/database/entities/NamespaceModel';\n// @ts-ignore\nimport SignerSelector from '@/components/SignerSelector/SignerSelector.vue';\n\n@Component({\n    components: {\n        ValidationProvider,\n        ValidationObserver,\n        FormWrapper,\n        FormRow,\n        ErrorTooltip,\n        NamespaceSelector,\n        MosaicSelector,\n        AddressInput,\n        MaxFeeSelector,\n        ModalTransactionConfirmation,\n        MaxFeeAndSubmit,\n        SignerSelector,\n    },\n    computed: {\n        ...mapGetters({\n            namespaces: 'namespace/ownedNamespaces',\n            mosaics: 'mosaic/ownedMosaics',\n            currentHeight: 'network/currentHeight',\n        }),\n    },\n})\nexport class FormAliasTransactionTs extends FormTransactionBase {\n    @Prop({ default: null }) namespaceId: NamespaceId;\n    @Prop({ default: null }) aliasTarget: MosaicId | Address;\n    @Prop({ default: null, required: true }) aliasAction: AliasAction;\n    @Prop({ default: false }) hideSubmit: boolean;\n    /**\n     * Type of assets shown in the form alias\n     * @type {string}\n     */\n    @Prop({ default: 'namespace' }) assetType: string;\n    /**\n     * Alias action\n     * @protected\n     */\n    protected AliasAction = AliasAction;\n\n    /**\n     * Validation rules\n     */\n    protected validationRules = ValidationRuleset;\n\n    /**\n     * Form items\n     */\n    protected formItems = {\n        namespaceFullName: null,\n        aliasTarget: null,\n        aliasAction: null,\n        maxFee: 0,\n        signerAddress: '',\n    };\n\n    /**\n     * Alias target type\n     * @protected\n     * @type {('mosaic' | 'address')}\n     */\n    protected aliasTargetType: 'mosaic' | 'address' = this.aliasTarget instanceof Address ? 'address' : 'mosaic';\n\n    /**\n     * Current account owned namespaces\n     * @private\n     */\n    private namespaces: NamespaceModel[];\n\n    /**\n     * Current account owned mosaics\n     * @private\n     */\n    private mosaics: MosaicModel[];\n\n    /**\n     * Current network height\n     * @private\n     * @type {number}\n     */\n    private currentHeight: number;\n\n    /**\n     * Current account namespace hex Ids that can be linked\n     * @readonly\n     * @protected\n     * @type {string []}\n     */\n    protected get linkableNamespaces(): NamespaceModel[] {\n        return this.namespaces.filter(({ aliasType }) => aliasType === AliasType.None);\n    }\n\n    /**\n     * Current account mosaics hex Ids that can be linked\n     * @readonly\n     * @protected\n     */\n    protected get linkableMosaics(): string[] {\n        return this.mosaics\n            .filter((mosaicInfo) => {\n                // no mosaics with names\n                const mosaicName = mosaicInfo.name;\n                if (mosaicName && mosaicName.length) {\n                    return false;\n                }\n\n                // mosaics must not be expired\n                if (mosaicInfo.duration == 0) {\n                    return true;\n                }\n                return mosaicInfo.height + mosaicInfo.duration > this.currentHeight;\n            })\n            .map(({ mosaicIdHex }) => mosaicIdHex);\n    }\n\n    /**\n     * Reset the form with properties\n     * @return {void}\n     */\n    protected resetForm() {\n        // - re-populate form if transaction staged\n        // if (this.stagedTransactions.length) {\n        //   const transaction = this.stagedTransactions.find(\n        //     staged => staged.type === TransactionType.MOSAIC_ALIAS || staged.type ===\n        // TransactionType.ADDRESS_ALIAS, ) this.setTransactions([transaction as AliasTransaction])\n        // this.isAwaitingSignature = true return }\n\n        this.formItems.signerAddress = this.selectedSigner ? this.selectedSigner.address.plain() : this.currentAccount.address;\n\n        /**\n         * Helper function to get the alias target as a string\n         * @param {(MosaicId | Address)} aliasTarget\n         * @returns {string}\n         */\n        const getAliasTarget = (aliasTarget: MosaicId | Address): string => {\n            if (!aliasTarget) {\n                return null;\n            }\n            if (aliasTarget instanceof Address) {\n                return aliasTarget.plain();\n            }\n            return aliasTarget.id.toHex();\n        };\n\n        // - set default form values\n        this.formItems.namespaceFullName = this.namespaceId ? this.namespaceId.fullName : null;\n        this.formItems.aliasTarget = getAliasTarget(this.aliasTarget);\n        this.formItems.aliasAction = this.aliasAction;\n\n        // - maxFee must be absolute\n        this.formItems.maxFee = this.defaultFee;\n    }\n\n    /**\n     * Getter for ALIAS transactions that will be staged\n     * @see {FormTransactionBase}\n     * @return {AliasTransaction[]}\n     */\n    protected getTransactions(): AliasTransaction[] {\n        const namespaceId = new NamespaceId(this.formItems.namespaceFullName);\n        const maxFee = UInt64.fromUint(this.formItems.maxFee);\n        if (this.aliasTargetType === 'address') {\n            return [\n                AddressAliasTransaction.create(\n                    this.createDeadline(),\n                    this.formItems.aliasAction,\n                    namespaceId,\n                    Address.createFromRawAddress(this.formItems.aliasTarget),\n                    this.networkType,\n                    maxFee,\n                ),\n            ];\n        } else {\n            return [\n                MosaicAliasTransaction.create(\n                    this.createDeadline(),\n                    this.formItems.aliasAction,\n                    namespaceId,\n                    new MosaicId(this.formItems.aliasTarget),\n                    this.networkType,\n                    maxFee,\n                ),\n            ];\n        }\n    }\n\n    /**\n     * Setter for Alias transactions that will be staged\n     * @see {FormTransactionBase}\n     * @param {AliasTransaction[]} transactions\n     * @throws {Error} If not overloaded in derivate component\n     */\n    protected setTransactions(transactions: AliasTransaction[]) {\n        // - this form creates only 1 transaction\n        const transaction = transactions.shift();\n        if (!transaction) {\n            return;\n        }\n\n        // - populate for items if transaction is an address alias\n        if (transaction instanceof AddressAliasTransaction) {\n            this.formItems.namespaceFullName = transaction.namespaceId.fullName;\n            this.formItems.aliasTarget = transaction.address.plain();\n            this.formItems.aliasAction = transaction.aliasAction;\n        }\n\n        // - populate for items if transaction is an mosaic alias\n        if (transaction instanceof MosaicAliasTransaction) {\n            this.formItems.namespaceFullName = transaction.namespaceId.fullName;\n            this.formItems.aliasTarget = transaction.namespaceId.toHex();\n            this.formItems.aliasAction = transaction.aliasAction;\n        }\n\n        // - populate maxFee\n        this.formItems.maxFee = transaction.maxFee.compact();\n    }\n}\n"],"sourceRoot":""}]}