{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AddressBookService.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AddressBookService.ts","mtime":1611927204158},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgQWRkcmVzc0Jvb2tNb2RlbFN0b3JhZ2UgfSBmcm9tICdAL2NvcmUvZGF0YWJhc2Uvc3RvcmFnZS9BZGRyZXNzQm9va01vZGVsU3RvcmFnZSc7CmltcG9ydCB7IEFkZHJlc3NCb29rIH0gZnJvbSAnc3ltYm9sLWFkZHJlc3MtYm9vay9BZGRyZXNzQm9vayc7CmV4cG9ydCB2YXIgQWRkcmVzc0Jvb2tTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBBZGRyZXNzQm9va1NlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWRkcmVzc0Jvb2tTZXJ2aWNlKTsKCiAgICAvKioKICAgICAqIFRoZSBuYW1lc3BhY2UgaW5mb3JtYXRpb24gbG9jYWwgY2FjaGUuCiAgICAgKi8KICAgIHRoaXMuYWRkcmVzc0Jvb2tNb2RlbFN0b3JhZ2UgPSBBZGRyZXNzQm9va01vZGVsU3RvcmFnZS5JTlNUQU5DRTsKICB9CgogIF9jcmVhdGVDbGFzcyhBZGRyZXNzQm9va1NlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRBZGRyZXNzQm9vayIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QWRkcmVzc0Jvb2socHJvZmlsZU5hbWUpIHsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgYWxsQWRkcmVzc0Jvb2tzID0gdGhpcy5hZGRyZXNzQm9va01vZGVsU3RvcmFnZS5nZXQoKSB8fCB7fTsKICAgICAgICByZXR1cm4gQWRkcmVzc0Jvb2suZnJvbUpTT04oYWxsQWRkcmVzc0Jvb2tzW3Byb2ZpbGVOYW1lXSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICByZXR1cm4gbmV3IEFkZHJlc3NCb29rKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJzYXZlQWRkcmVzc0Jvb2siLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNhdmVBZGRyZXNzQm9vayhhZGRyZXNzQm9vaywgcHJvZmlsZU5hbWUpIHsKICAgICAgdmFyIGFsbEFkZHJlc3NCb29rcyA9IHRoaXMuYWRkcmVzc0Jvb2tNb2RlbFN0b3JhZ2UuZ2V0KCkgfHwge307CiAgICAgIGFsbEFkZHJlc3NCb29rc1twcm9maWxlTmFtZV0gPSBhZGRyZXNzQm9vay50b0pTT04oZmFsc2UpOwogICAgICByZXR1cm4gdGhpcy5hZGRyZXNzQm9va01vZGVsU3RvcmFnZS5zZXQoYWxsQWRkcmVzc0Jvb2tzKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBBZGRyZXNzQm9va1NlcnZpY2U7Cn0oKTs="},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AddressBookService.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;AAEH,SAAS,uBAAT,QAAwC,iDAAxC;AACA,SAAS,WAAT,QAA4B,iCAA5B;AAEA,WAAa,kBAAb;AAAA,gCAAA;AAAA;;AACI;;AAEG;AACc,SAAA,uBAAA,GAA0B,uBAAuB,CAAC,QAAlD;AAgBpB;;AApBD;AAAA;AAAA,mCAM0B,WAN1B,EAM6C;AACrC,UAAI;AACA,YAAM,eAAe,GAAG,KAAK,uBAAL,CAA6B,GAA7B,MAAsC,EAA9D;AACA,eAAO,WAAW,CAAC,QAAZ,CAAqB,eAAe,CAAC,WAAD,CAApC,CAAP;AACH,OAHD,CAGE,OAAO,CAAP,EAAU;AACR,eAAO,IAAI,WAAJ,EAAP;AACH;AACJ;AAbL;AAAA;AAAA,oCAe2B,WAf3B,EAeqD,WAfrD,EAewE;AAChE,UAAM,eAAe,GAAG,KAAK,uBAAL,CAA6B,GAA7B,MAAsC,EAA9D;AACA,MAAA,eAAe,CAAC,WAAD,CAAf,GAA+B,WAAW,CAAC,MAAZ,CAAmB,KAAnB,CAA/B;AACA,aAAO,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,eAAjC,CAAP;AACH;AAnBL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AddressBookModelStorage } from '@/core/database/storage/AddressBookModelStorage';\nimport { AddressBook } from 'symbol-address-book/AddressBook';\n\nexport class AddressBookService {\n    /**\n     * The namespace information local cache.\n     */\n    private readonly addressBookModelStorage = AddressBookModelStorage.INSTANCE;\n\n    public getAddressBook(profileName: string): AddressBook {\n        try {\n            const allAddressBooks = this.addressBookModelStorage.get() || {};\n            return AddressBook.fromJSON(allAddressBooks[profileName]);\n        } catch (e) {\n            return new AddressBook();\n        }\n    }\n\n    public saveAddressBook(addressBook: AddressBook, profileName: string) {\n        const allAddressBooks = this.addressBookModelStorage.get() || {};\n        allAddressBooks[profileName] = addressBook.toJSON(false);\n        return this.addressBookModelStorage.set(allAddressBooks);\n    }\n}\n"],"sourceRoot":""}]}