{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/TableDisplay/TableDisplayTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/TableDisplay/TableDisplayTs.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/TableDisplay/TableDisplayTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { Address, AliasAction, MosaicId, NamespaceId } from 'symbol-sdk';\n// internal dependencies\nimport {\n    AssetTableService,\n    FilteringTypes,\n    SortingDirections,\n    TableField,\n    TableFilteringOptions,\n    TableSortingOptions,\n} from '@/services/AssetTableService/AssetTableService';\nimport { MosaicTableService } from '@/services/AssetTableService/MosaicTableService';\nimport { NamespaceTableService } from '@/services/AssetTableService/NamespaceTableService';\nimport { MetadataTableService } from '@/services/AssetTableService/MetadataTableService';\n// table asset types\nimport { TableAssetType } from './TableAssetType';\n// child components\n// @ts-ignore\nimport TableRow from '@/components/TableRow/TableRow.vue';\n// @ts-ignore\nimport ButtonAdd from '@/components/ButtonAdd/ButtonAdd';\n// @ts-ignore\nimport ModalFormWrap from '@/views/modals/ModalFormWrap/ModalFormWrap.vue';\n// @ts-ignore\nimport FormAliasTransaction from '@/views/forms/FormAliasTransaction/FormAliasTransaction.vue';\n// @ts-ignore\nimport FormExtendNamespaceDurationTransaction from '@/views/forms/FormExtendNamespaceDurationTransaction/FormExtendNamespaceDurationTransaction.vue';\n// @ts-ignore\nimport FormMosaicSupplyChangeTransaction from '@/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransaction.vue';\n// @ts-ignore\nimport ModalMetadataDisplay from '@/views/modals/ModalMetadataDisplay/ModalMetadataDisplay.vue';\nimport { NamespaceModel } from '@/core/database/entities/NamespaceModel';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\nimport { NetworkConfigurationModel } from '@/core/database/entities/NetworkConfigurationModel';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\nimport { Signer } from '@/store/Account';\n// @ts-ignore\nimport SignerFilter from '@/components/SignerFilter/SignerFilter.vue';\nimport { MetadataModel } from '@/core/database/entities/MetadataModel';\n\n@Component({\n    components: {\n        TableRow,\n        ModalFormWrap,\n        FormAliasTransaction,\n        FormExtendNamespaceDurationTransaction,\n        FormMosaicSupplyChangeTransaction,\n        ModalMetadataDisplay,\n        SignerFilter,\n        ButtonAdd,\n    },\n    computed: {\n        ...mapGetters({\n            currentHeight: 'network/currentHeight',\n            currentAccount: 'account/currentAccount',\n            holdMosaics: 'mosaic/holdMosaics',\n            ownedNamespaces: 'namespace/ownedNamespaces',\n            attachedMetadataList: 'metadata/accountMetadataList',\n            networkConfiguration: 'network/networkConfiguration',\n            signers: 'account/signers',\n            isFetchingNamespaces: 'namespace/isFetchingNamespaces',\n            isFetchingMosaics: 'mosaic/isFetchingMosaics',\n            isFetchingMetadata: 'metadata/isFetchingMetadata',\n        }),\n    },\n})\nexport class TableDisplayTs extends Vue {\n    /**\n     * Type of assets shown in the table\n     * @type {string}\n     */\n    @Prop({\n        default: TableAssetType.Mosaic,\n    })\n    assetType: TableAssetType;\n\n    /**\n     * Current account owned mosaics\n     * @protected\n     * @type {MosaicModel[]}\n     */\n    private holdMosaics: MosaicModel[];\n\n    /**\n     * Current account owned namespaces\n     * @protected\n     * @type {NamespaceModel[]}\n     */\n    private ownedNamespaces: NamespaceModel[];\n\n    /**\n     * Current account attached metadata list\n     * @protected\n     * @type {MetadataModel[]}\n     */\n    private attachedMetadataList: MetadataModel[];\n\n    /**\n     * target mosaic or namespace metadata view\n     * @type {MetadataModel[]}\n     */\n    protected targetedMetadataList: MetadataModel[];\n\n    private currentAccount: AccountModel;\n\n    private currentHeight: number;\n\n    private networkConfiguration: NetworkConfigurationModel;\n\n    /**\n     * current signers\n     */\n    public signers: Signer[];\n\n    public isFetchingNamespaces: boolean;\n\n    public isFetchingMosaics: boolean;\n\n    public isFetchingMetadata: boolean;\n\n    /**\n     * Loading state of the data to be shown in the table\n     * @type {boolean}\n     */\n    public get isLoading() {\n        switch (this.assetType) {\n            case TableAssetType.Namespace:\n                return this.isFetchingNamespaces;\n            case TableAssetType.Metadata:\n                return this.isFetchingMetadata;\n            default:\n                return this.isFetchingMosaics;\n        }\n    }\n\n    /**\n     * Hook called when the signer selector has changed\n     * @protected\n     */\n    protected onSignerSelectorChange(address: string): void {\n        // clear previous account transactions\n        if (address) {\n            this.$store.dispatch('account/SET_CURRENT_SIGNER', { address: Address.createFromRawAddress(address) });\n        }\n    }\n\n    /**\n     * Current table sorting state\n     * @var {TableSortingOptions}\n     */\n    public sortedBy: TableSortingOptions = {\n        fieldName: undefined,\n        direction: undefined,\n    };\n\n    /**\n     * Current table filtering state\n     * @var {TableFilteringOptions}\n     */\n    public filteredBy: TableFilteringOptions = {\n        fieldName: undefined,\n        filteringType: undefined,\n    };\n\n    /**\n     * Pagination page size\n     * @type {number}\n     */\n    public pageSize: number = 10;\n\n    /**\n     * Pagination page number\n     * @type {number}\n     */\n    public currentPage: number = 1;\n\n    public nodata = [...new Array(this.pageSize).keys()];\n\n    protected get ownedAssetHexIds(): string[] {\n        return this.assetType === 'namespace'\n            ? this.ownedNamespaces.map(({ namespaceIdHex }) => namespaceIdHex)\n            : this.holdMosaics\n                  .filter(({ ownerRawPlain }) => ownerRawPlain === this.currentAccount.address)\n                  .map(({ mosaicIdHex }) => mosaicIdHex);\n    }\n\n    /**\n     * Modal forms visibility states\n     * @protected\n     * @type {{\n     *     aliasTransaction: boolean\n     *     extendNamespaceDuration: boolean\n     *     mosaicSupplyChangeTransaction: boolean\n     *   }}\n     */\n    protected modalFormsVisibility: {\n        aliasTransaction: boolean;\n        extendNamespaceDurationTransaction: boolean;\n        mosaicSupplyChangeTransaction: boolean;\n    } = {\n        aliasTransaction: false,\n        extendNamespaceDurationTransaction: false,\n        mosaicSupplyChangeTransaction: false,\n    };\n\n    /**\n     * Action forms props\n     * @protected\n     * @type {({\n     *     namespaceId: NamespaceId\n     *     aliasTarget: MosaicId | Address\n     *     aliasAction: AliasAction\n     *     mosaicId: MosaicId\n     *   })}\n     */\n    protected modalFormsProps: {\n        namespaceId: NamespaceId;\n        aliasTarget: MosaicId | Address;\n        aliasAction: AliasAction;\n        mosaicId: MosaicId;\n    } = {\n        namespaceId: null,\n        aliasTarget: null,\n        aliasAction: null,\n        mosaicId: null,\n    };\n\n    // Alias forms props\n\n    /**\n     * Instantiate the table service around {assetType}\n     * @return {AssetTableService}\n     */\n    protected getService(): AssetTableService {\n        switch (this.assetType) {\n            case TableAssetType.Mosaic:\n                return new MosaicTableService(this.currentHeight, this.holdMosaics, this.networkConfiguration);\n\n            case TableAssetType.Namespace:\n                return new NamespaceTableService(this.currentHeight, this.ownedNamespaces, this.networkConfiguration);\n\n            case TableAssetType.Metadata:\n                return new MetadataTableService(this.currentHeight, this.attachedMetadataList, this.networkConfiguration);\n\n            default:\n                throw new Error(`Asset type '${this.assetType}' does not exist in TableDisplay.`);\n        }\n    }\n\n    /// region getters and setters\n    /**\n     * Non-filtered table data\n     * @var {TableRowValues[]}\n     */\n    private get tableRows(): any[] {\n        return this.getService().getTableRows();\n    }\n\n    /**\n     * Values displayed in the table\n     * @readonly\n     * @return {TableRowValues[]}\n     */\n    get displayedValues(): any[] {\n        return this.getService().sort(this.getService().filter(this.tableRows, this.filteredBy), this.sortedBy);\n    }\n\n    /**\n     * Header fields displayed in the table\n     * @readonly\n     * @return {TableField[]}\n     */\n    get tableFields(): TableField[] {\n        return this.getService().getTableFields();\n    }\n\n    /**\n     * Get current page rows\n     * @readonly\n     * @return {TableRowValues[]}\n     */\n    get currentPageRows(): any[] {\n        return this.displayedValues.slice((this.currentPage - 1) * this.pageSize, this.currentPage * this.pageSize);\n    }\n\n    /**\n     * getter and setter for the showExpired button\n     *\n     */\n    get showExpired(): boolean {\n        return this.filteredBy.fieldName === 'expiration' && this.filteredBy.filteringType === 'show';\n    }\n\n    set showExpired(newVal: boolean) {\n        this.setFilteredBy('expiration');\n    }\n\n    /**\n     * Alias form modal title\n     * @type {string}\n     * @protected\n     */\n    protected get aliasModalTitle(): string {\n        return this.modalFormsProps.aliasAction === AliasAction.Link ? 'modal_title_link_alias' : 'modal_title_unlink_alias';\n    }\n\n    /// end-region getters and setters\n\n    /**\n     * Hook called when the component is created\n     * @return {void}\n     */\n    public async created(): Promise<void> {\n        // refresh owned assets\n        this.refresh();\n        // initialize sorting and filtering\n        this.setDefaultFiltering();\n        // await this.refresh()\n        this.setDefaultSorting();\n    }\n\n    /**\n     * Refreshes the owned assets\n     * @returns {void}\n     */\n    private async refresh(): Promise<void> {\n        switch (this.assetType) {\n            case TableAssetType.Mosaic:\n                await this.$store.dispatch('mosaic/LOAD_MOSAICS');\n                break;\n\n            case TableAssetType.Namespace:\n                await this.$store.dispatch('namespace/LOAD_NAMESPACES');\n                break;\n\n            case TableAssetType.Metadata:\n                await this.$store.dispatch('metadata/LOAD_METADATA_LIST');\n                break;\n        }\n    }\n\n    /**\n     * Sets the default filtering state\n     */\n    public setDefaultFiltering(): void {\n        const defaultFilteringType: FilteringTypes = 'hide';\n        const defaultFilteringFieldName: string = 'expiration';\n\n        Vue.set(this, 'filteredBy', {\n            fieldName: defaultFilteringFieldName,\n            filteringType: defaultFilteringType,\n        });\n    }\n\n    /**\n     * Sets the default sorting state and trigger it\n     */\n    public setDefaultSorting(): void {\n        const defaultSort = 'asc';\n        const defaultField = 'namespace' === this.assetType ? 'name' : 'hexId';\n\n        Vue.set(this, 'sortedBy', {\n            fieldName: defaultField,\n            direction: defaultSort,\n        });\n\n        this.setSortedBy(defaultField);\n    }\n\n    /**\n     * Triggers table filtering by setting its filtering options\n     * @param {TableFieldNames} fieldName\n     */\n    public setFilteredBy(fieldName: string): void {\n        const filteredBy = { ...this.filteredBy };\n        const filteringType: FilteringTypes = filteredBy.fieldName === fieldName && filteredBy.filteringType === 'show' ? 'hide' : 'show';\n\n        this.filteredBy = { fieldName, filteringType };\n    }\n\n    /**\n     * Sorts the table data\n     * @param {TableFieldNames} fieldName\n     */\n    public setSortedBy(fieldName: string): void {\n        const sortedBy = { ...this.sortedBy };\n        const direction: SortingDirections = sortedBy.fieldName === fieldName && sortedBy.direction === 'asc' ? 'desc' : 'asc';\n\n        Vue.set(this, 'sortedBy', { fieldName, direction });\n    }\n\n    /**\n     * Handle pagination page change\n     * @param {number} page\n     */\n    public handlePageChange(page: number): void {\n        this.currentPage = page;\n    }\n\n    /**\n     * Triggers the alias form modal\n     * @protected\n     * @param {Record<string, string>} rowValues\n     * @return {void}\n     */\n    protected showAliasForm(rowValues: Record<string, string>): void {\n        // populate asset form modal props if asset is a mosaic\n        if (this.assetType === 'mosaic') {\n            this.modalFormsProps.namespaceId = rowValues.name !== 'N/A' ? new NamespaceId(rowValues.name) : null;\n            this.modalFormsProps.aliasTarget = new MosaicId(rowValues.hexId);\n            this.modalFormsProps.aliasAction = rowValues.name !== 'N/A' ? AliasAction.Unlink : AliasAction.Link;\n        }\n\n        /**\n         * Helper function to instantiate the alias target if any\n         * @param {string} aliasTarget\n         * @param {('address' | 'mosaic')} aliasType\n         * @returns {(MosaicId | Address)}\n         */\n        const getInstantiatedAlias = (aliasType: string, aliasTarget: string): MosaicId | Address => {\n            if (aliasType === 'mosaic') {\n                return new MosaicId(aliasTarget);\n            }\n            return Address.createFromRawAddress(aliasTarget);\n        };\n\n        // populate asset form modal props if asset is a namespace\n        if (this.assetType === 'namespace') {\n            (this.modalFormsProps.namespaceId = new NamespaceId(rowValues.name)),\n                (this.modalFormsProps.aliasTarget =\n                    rowValues.aliasIdentifier === 'N/A'\n                        ? null\n                        : rowValues.aliasIdentifier\n                        ? getInstantiatedAlias(rowValues.aliasType, rowValues.aliasIdentifier)\n                        : null);\n            this.modalFormsProps.aliasAction = rowValues.aliasIdentifier === 'N/A' ? AliasAction.Link : AliasAction.Unlink;\n        }\n\n        // show the alias form modal\n        Vue.set(this.modalFormsVisibility, 'aliasTransaction', true);\n    }\n\n    /**\n     * Triggers the extend namespace duration form modal\n     * @protected\n     * @param {Record<string, string>} rowValues\n     * @return {void}\n     */\n    protected showExtendNamespaceDurationForm(rowValues: Record<string, string>): void {\n        this.modalFormsProps.namespaceId = new NamespaceId(rowValues.name);\n        Vue.set(this.modalFormsVisibility, 'extendNamespaceDurationTransaction', true);\n    }\n\n    /**\n     * Triggers the modify mosaic supply form modal\n     * @protected\n     * @param {Record<string, string>} rowValues\n     * @return {void}\n     */\n    protected showModifyMosaicSupplyForm(rowValues: Record<string, string>): void {\n        this.modalFormsProps.mosaicId = new MosaicId(rowValues.hexId);\n        Vue.set(this.modalFormsVisibility, 'mosaicSupplyChangeTransaction', true);\n    }\n\n    protected showMetadataValue(metadataList: MetadataModel[]) {\n        this.targetedMetadataList = metadataList;\n        Vue.set(this.modalFormsVisibility, 'targetedMetadataValue', true);\n    }\n\n    /**\n     * Closes a modal\n     * @protected\n     * @param {string} modalIdentifier\n     * @return {void}\n     */\n    protected closeModal(modalIdentifier: string): void {\n        Vue.set(this.modalFormsVisibility, modalIdentifier, false);\n    }\n\n    /**\n     * avoid multiple clicks\n     * @protected\n     * @param {string}\n     * @return {void}\n     */\n    public isRefreshing: boolean = false;\n\n    protected async onRefresh() {\n        if (!this.isRefreshing) {\n            this.isRefreshing = true;\n            try {\n                await this.refresh();\n            } catch (e) {\n                console.log('Cannot refresh', e);\n            }\n            this.isRefreshing = false;\n        }\n    }\n}\n"],"sourceRoot":""}]}