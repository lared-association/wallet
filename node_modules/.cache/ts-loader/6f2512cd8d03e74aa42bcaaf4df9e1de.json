{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AssetTableService/AccountRestrictionTableService.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AssetTableService/AccountRestrictionTableService.ts","mtime":1611927227356},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/services/AssetTableService/AccountRestrictionTableService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH;AACA;AACA,OAAO,IAAP,MAAiB,YAAjB;AACA,OAAO,sBAAP,MAAmC,wEAAnC;AACA,SAA6B,OAA7B,EAAsC,QAAtC,QAAsD,YAAtD;AACA,SAAS,iBAAT,QAA8C,qBAA9C;AAEA,WAAa,8BAAb;AAAA;;AAAA;;AACI,0CAA6B,mBAA7B,EAAsE;AAAA;;AAAA;;AAClE,8BAAM,CAAN;AADyB,UAAA,mBAAA,GAAA,mBAAA;AAAyC;AAErE;AAED;;;AAGG;;;AARP;AAAA;AAAA,qCASyB;AACjB,aAAO,CACH;AAAE,QAAA,IAAI,EAAE,WAAR;AAAqB,QAAA,KAAK,EAAE;AAA5B,OADG,EAEH;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE;AAAxB,OAFG,EAGH;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,KAAK,EAAE;AAAzB,OAHG,CAAP;AAKH;AAED;;;AAGG;;AApBP;AAAA;AAAA,mCAqBuB;AACf,aAAO,KAAK,mBAAL,CACF,OADE,CACM,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,MAAF,CAAS,GAAT,CAAa,UAAC,CAAD;AAAA,iBAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,CAAL,CAAA,EAAM;AAAE,YAAA,MAAM,EAAE,CAAC,CAAD;AAAV,WAAN,CAAR;AAAA,SAAb,CAAP;AAAA,OADN,EAEF,GAFE,CAEE,UAAC,kBAAD,EAAuB;AACxB,YAAM,SAAS,GAAG,sBAAsB,CAAC,WAAvB,CAAmC,kBAAkB,CAAC,gBAAtD,CAAlB;AACA,YAAM,MAAM,GAAG,sBAAsB,CAAC,WAAvB,CAAmC,kBAAkB,CAAC,gBAAtD,CAAf;AACA,YAAI,QAAQ,GAAG,EAAf;;AAEA,YAAI,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAA,kBAAkB,CAAE,MAAxB,EAAgC;AAC5B,cAAM,KAAK,GAAG,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAA,kBAAkB,CAAE,MAApB,CAA2B,CAA3B,CAAd;;AACA,cAAI,KAAK,YAAY,OAArB,EAA8B;AAC1B,YAAA,QAAQ,GAAG,KAAK,CAAC,MAAN,EAAX;AACH,WAFD,MAEO,IAAI,KAAK,YAAY,QAArB,EAA+B;AAClC,YAAA,QAAQ,GAAG,KAAK,CAAC,KAAN,EAAX;AACH,WAFM,MAEA;AACH,YAAA,QAAQ,IAAI,IAAI,CAAC,CAAL,kCAAiC,KAAjC,EAAZ;AACH;AACJ;;AACD,eAAO;AACH,UAAA,SAAS,EAAE,SADR;AAEH,UAAA,KAAK,EAAE,QAFJ;AAGH,UAAA,MAAM,EAAE,MAHL;AAIH,UAAA,UAAU,EAAE;AACR,YAAA,SAAS,EAAE;AADH;AAJT,SAAP;AAQH,OAzBE,EA0BF,MA1BE,CA0BK,UAAC,CAAD;AAAA,eAAO,CAAP;AAAA,OA1BL,CAAP,CADe,CA2BQ;AAC1B;AAjDL;;AAAA;AAAA,EAAoD,iBAApD","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// internal dependencies\n// @ts-ignore\nimport i18n from '@/language';\nimport RestrictionFlagMapping from '@/views/forms/FormAccountRestrictionTransaction/RestrictionFlagMapping';\nimport { AccountRestriction, Address, MosaicId } from 'symbol-sdk';\nimport { AssetTableService, TableField } from './AssetTableService';\n\nexport class AccountRestrictionTableService extends AssetTableService {\n    constructor(private readonly accountRestrictions: AccountRestriction[]) {\n        super(0);\n    }\n\n    /**\n     * Return table fields to be displayed in a table header\n     * @returns {TableField[]}\n     */\n    public getTableFields(): TableField[] {\n        return [\n            { name: 'direction', label: 'table_header_direction' },\n            { name: 'value', label: 'table_header_value' },\n            { name: 'action', label: 'table_header_action' },\n        ];\n    }\n\n    /**\n     * Return table values to be displayed in a table rows\n     * @returns {MosaicTableRowValues[]}\n     */\n    public getTableRows(): any[] {\n        return this.accountRestrictions\n            .flatMap((r) => r.values.map((v) => ({ ...r, values: [v] } as AccountRestriction)))\n            .map((accountRestriction) => {\n                const direction = RestrictionFlagMapping.toDirection(accountRestriction.restrictionFlags);\n                const action = RestrictionFlagMapping.toBlockType(accountRestriction.restrictionFlags);\n                let rawValue = '';\n\n                if (accountRestriction?.values) {\n                    const value = accountRestriction?.values[0];\n                    if (value instanceof Address) {\n                        rawValue = value.pretty();\n                    } else if (value instanceof MosaicId) {\n                        rawValue = value.toHex();\n                    } else {\n                        rawValue += i18n.t(`transaction_descriptor_${value}`);\n                    }\n                }\n                return {\n                    direction: direction,\n                    value: rawValue,\n                    action: action,\n                    hiddenData: {\n                        rowObject: accountRestriction,\n                    },\n                };\n            })\n            .filter((x) => x); // filter out mosaics that are not yet available\n    }\n}\n"],"sourceRoot":""}]}