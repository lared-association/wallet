{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/pages/profiles/create-profile/finalize/FinalizeTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/pages/profiles/create-profile/finalize/FinalizeTs.ts","mtime":1606213958977},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/views/pages/profiles/create-profile/finalize/FinalizeTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B,C,CAGA;;AACA,SAAS,cAAT,QAA+B,2BAA/B;AACA,SAAS,gBAAT,QAAiC,+BAAjC;;AAaA,IAAqB,UAArB;AAAA;;AAAA;;AAAA,wBAAA;AAAA;;AAAA;;;AA6BI;;;;;AAIO,UAAA,cAAA,GAAiC,IAAI,cAAJ,EAAjC;AAjCX;AA6DC;AA1BG;;;;;;;AAnCJ;AAAA;AAAA,6BAwCuB;;;;;;;AACf;AACM,gBAAA,O,GAAU,KAAK,cAAL,CAAoB,iBAApB,CACZ,KAAK,cADO,EAEZ,KAAK,eAFO,EAGZ,KAAK,eAHO,EAIZ,KAAK,WAJO,C,EAMhB;;AACA,qBAAK,cAAL,CAAoB,WAApB,CAAgC,OAAhC,E,CAEA;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,qBAArB,EAA4C,OAA5C,CAAN;;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,6BAArB,EAAoD,OAApD,CAAN;;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,4BAArB,EAAmD,CAAC,OAAO,CAAC,EAAT,CAAnD,CAAN;;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,uBAArB,CAAN;;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,0BAArB,EAAiD,gBAAgB,CAAC,iBAAlE,CAAN;;;iDAGO,KAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAAlB,C;;;;;;;;;AACV;AA5DL;;AAAA;AAAA,EAAwC,GAAxC,CAAA;;AAAqB,UAAU,GAAA,UAAA,CAAA,CAV9B,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,WAAW,EAAE,qBADH;AAEV,IAAA,cAAc,EAAE,wBAFN;AAGV,IAAA,eAAe,EAAE,oBAHP;AAIV,IAAA,eAAe,EAAE;AAJP,GAAD,CADT;AADD,CAAD,CAUqB,CAAA,EAAV,UAAU,CAAV;eAAA,U","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { NetworkType, Password } from 'symbol-sdk';\nimport { MnemonicPassPhrase } from 'symbol-hd-wallets';\n// internal dependencies\nimport { AccountService } from '@/services/AccountService';\nimport { NotificationType } from '@/core/utils/NotificationType';\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkType: 'network/networkType',\n            currentProfile: 'profile/currentProfile',\n            currentPassword: 'temporary/password',\n            currentMnemonic: 'temporary/mnemonic',\n        }),\n    },\n})\nexport default class FinalizeTs extends Vue {\n    /**\n     * Currently active networkType\n     * @see {Store.Network}\n     * @var {NetworkType}\n     */\n    public networkType: NetworkType;\n\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {ProfileModel}\n     */\n    public currentProfile: ProfileModel;\n\n    /**\n     * Temporary stored password\n     * @see {Store.Temporary}\n     * @var {Password}\n     */\n    public currentPassword: Password;\n\n    /**\n     * Temporary stored password\n     * @see {Store.Temporary}\n     * @var {MnemonicPassPhrase}\n     */\n    public currentMnemonic: MnemonicPassPhrase;\n\n    /**\n     * Account Service\n     * @var {AccountService}\n     */\n    public accountService: AccountService = new AccountService();\n\n    /**\n     * Finalize the profile creation process by adding\n     * the account created from mnemonic pass phrase.\n     * @return {void}\n     */\n    public async submit() {\n        // create profile by mnemonic\n        const account = this.accountService.getDefaultAccount(\n            this.currentProfile,\n            this.currentMnemonic,\n            this.currentPassword,\n            this.networkType,\n        );\n        // use repository for storage\n        this.accountService.saveAccount(account);\n\n        // execute store actions\n        await this.$store.dispatch('profile/ADD_ACCOUNT', account);\n        await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);\n        await this.$store.dispatch('account/SET_KNOWN_ACCOUNTS', [account.id]);\n        await this.$store.dispatch('temporary/RESET_STATE');\n        await this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.OPERATION_SUCCESS);\n\n        // flush and continue\n        return this.$router.push({ name: 'dashboard' });\n    }\n}\n"],"sourceRoot":""}]}