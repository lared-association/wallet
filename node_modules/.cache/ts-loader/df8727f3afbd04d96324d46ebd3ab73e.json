{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Block.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Block.ts","mtime":1611927204403},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiL21udC9jL1VzZXJzL2p1c3RpL0Rlc2t0b3AvU1VQRVJIT1cvU3ltYm9sV2FsbGV0L2xhcmVkLXdhbGxldC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwoKLyoKICogQ29weXJpZ2h0IDIwMjAgTkVNIChodHRwczovL25lbS5pbykKICoKICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlICJMaWNlbnNlIik7CiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiAqCiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiAqCiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUKICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuCiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiAqCiAqLwppbXBvcnQgeyBfX2F3YWl0ZXIgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IEJsb2NrU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvQmxvY2tTZXJ2aWNlJzsKaW1wb3J0IHsgZmlyc3QgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CnZhciBibG9ja3NTdGF0ZSA9IHsKICBibG9ja3M6IFtdCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBibG9ja3NTdGF0ZSwKICBnZXR0ZXJzOiB7CiAgICBibG9ja3M6IGZ1bmN0aW9uIGJsb2NrcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuYmxvY2tzOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBibG9ja3M6IGZ1bmN0aW9uIGJsb2NrcyhzdGF0ZSwgX2Jsb2NrcykgewogICAgICBzdGF0ZS5ibG9ja3MgPSBfYmxvY2tzOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgR0VUX0JMT0NLOiBmdW5jdGlvbiBHRVRfQkxPQ0soX3JlZiwgaGVpZ2h0KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdCwKICAgICAgICAgIHJvb3RHZXR0ZXJzID0gX3JlZi5yb290R2V0dGVycywKICAgICAgICAgIGdldHRlcnMgPSBfcmVmLmdldHRlcnM7CiAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZ2VuZXJhdGlvbkhhc2gsIHJlcG9zaXRvcnlGYWN0b3J5LCBhbHJlYWR5TG9hZGVkQmxvY2tzLCBibG9ja0luZm9Nb2RlbDsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZ2VuZXJhdGlvbkhhc2ggPSByb290R2V0dGVyc1snbmV0d29yay9nZW5lcmF0aW9uSGFzaCddOwogICAgICAgICAgICAgICAgcmVwb3NpdG9yeUZhY3RvcnkgPSByb290R2V0dGVyc1snbmV0d29yay9yZXBvc2l0b3J5RmFjdG9yeSddOwogICAgICAgICAgICAgICAgYWxyZWFkeUxvYWRlZEJsb2NrcyA9IGdldHRlcnMuYmxvY2tzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEJsb2NrU2VydmljZSgpLmdldEJsb2NrSW5mbyhyZXBvc2l0b3J5RmFjdG9yeSwgaGVpZ2h0LCBhbHJlYWR5TG9hZGVkQmxvY2tzKS5waXBlKGZpcnN0KCkpLnRvUHJvbWlzZSgpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBibG9ja0luZm9Nb2RlbCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ2Jsb2NrcycsIG5ldyBCbG9ja1NlcnZpY2UoKS5nZXRLbm93bkJsb2NrSW5mb3MoZ2VuZXJhdGlvbkhhc2gpKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGJsb2NrSW5mb01vZGVsKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Block.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;AAcG;;AAKH,SAAS,YAAT,QAA6B,yBAA7B;AACA,SAAS,KAAT,QAAsB,gBAAtB;AAMA,IAAM,WAAW,GAAe;AAC5B,EAAA,MAAM,EAAE;AADoB,CAAhC;AAIA,eAAe;AACX,EAAA,UAAU,EAAE,IADD;AAEX,EAAA,KAAK,EAAE,WAFI;AAGX,EAAA,OAAO,EAAE;AACL,IAAA,MAAM,EAAE,gBAAC,KAAD;AAAA,aAAuB,KAAK,CAAC,MAA7B;AAAA;AADH,GAHE;AAMX,EAAA,SAAS,EAAE;AACP,IAAA,MAAM,EAAE,gBAAC,KAAD,EAAoB,OAApB,EAAgD;AACpD,MAAA,KAAK,CAAC,MAAN,GAAe,OAAf;AACH;AAHM,GANA;AAWX,EAAA,OAAO,EAAE;AACC,IAAA,SADD,2BAC6C,MAD7C,EAC2D;AAAA,UAA9C,MAA8C,QAA9C,MAA8C;AAAA,UAAtC,WAAsC,QAAtC,WAAsC;AAAA,UAAzB,OAAyB,QAAzB,OAAyB;;;;;;;AACtD,gBAAA,c,GAAyB,WAAW,CAAC,wBAAD,C;AACpC,gBAAA,iB,GAAuC,WAAW,CAAC,2BAAD,C;AAClD,gBAAA,mB,GAAwC,OAAO,CAAC,M;;AAC/B,uBAAM,IAAI,YAAJ,GACxB,YADwB,CACX,iBADW,EACQ,MADR,EACgB,mBADhB,EAExB,IAFwB,CAEnB,KAAK,EAFc,EAGxB,SAHwB,EAAN;;;AAAjB,gBAAA,c;AAIN,gBAAA,MAAM,CAAC,QAAD,EAAW,IAAI,YAAJ,GAAmB,kBAAnB,CAAsC,cAAtC,CAAX,CAAN;iDACO,c;;;;;;;;;AACV;AAXI;AAXE,CAAf","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n// internal dependencies\nimport { BlockInfoModel } from '@/core/database/entities/BlockInfoModel';\nimport { RepositoryFactory, UInt64 } from 'symbol-sdk';\nimport { BlockService } from '@/services/BlockService';\nimport { first } from 'rxjs/operators';\n\ninterface BlockState {\n    blocks: BlockInfoModel[];\n}\n\nconst blocksState: BlockState = {\n    blocks: [],\n};\n\nexport default {\n    namespaced: true,\n    state: blocksState,\n    getters: {\n        blocks: (state: BlockState) => state.blocks,\n    },\n    mutations: {\n        blocks: (state: BlockState, blocks: BlockInfoModel[]) => {\n            state.blocks = blocks;\n        },\n    },\n    actions: {\n        async GET_BLOCK({ commit, rootGetters, getters }, height: UInt64): Promise<BlockInfoModel> {\n            const generationHash: string = rootGetters['network/generationHash'];\n            const repositoryFactory: RepositoryFactory = rootGetters['network/repositoryFactory'];\n            const alreadyLoadedBlocks: BlockInfoModel[] = getters.blocks;\n            const blockInfoModel = await new BlockService()\n                .getBlockInfo(repositoryFactory, height, alreadyLoadedBlocks)\n                .pipe(first())\n                .toPromise();\n            commit('blocks', new BlockService().getKnownBlockInfos(generationHash));\n            return blockInfoModel;\n        },\n    },\n};\n"],"sourceRoot":""}]}