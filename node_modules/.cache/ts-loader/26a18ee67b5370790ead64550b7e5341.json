{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Notification.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Notification.ts","mtime":1611927204513},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/store/Notification.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport Vue from 'vue';\n// internal dependencies\nimport app from '@/main';\nimport { AwaitLock } from './AwaitLock';\nimport { FilterHelpers } from '../core/utils/FilterHelpers';\n\nconst Lock = AwaitLock.create();\n\nexport default {\n    namespaced: true,\n    state: {\n        initialized: false,\n        history: [],\n    },\n    getters: {\n        getInitialized: (state) => state.initialized,\n        history: (state) => state.history,\n        lastNotification: (state) => state.history.pop(),\n        successes: (state) => {\n            return state.history.filter((row) => row.level === 'success').map((log) => log.message);\n        },\n        warnings: (state) => {\n            return state.history.filter((row) => row.level === 'warning').map((log) => log.message);\n        },\n        errors: (state) => {\n            return state.history.filter((row) => row.level === 'error').map((log) => log.message);\n        },\n    },\n    mutations: {\n        setInitialized: (state, initialized) => {\n            state.initialized = initialized;\n        },\n        add: (state, payload) => {\n            // strip tags to remove XSS vulnerability\n            const message = FilterHelpers.stripFilter(payload.message);\n            const history = state.history;\n            history.push({\n                level: payload.level || 'warning',\n                message: message,\n            });\n            Vue.set(state, 'history', history);\n\n            /// region trigger notice UI\n            app.$Notice.destroy();\n            app.$Notice[payload.level]({ title: app.$t(message) });\n            /// end-region trigger notice UI\n        },\n    },\n    actions: {\n        async initialize({ commit, getters }) {\n            const callback = async () => {\n                /// region initialize $Notice\n                app.$Notice.config({ duration: 4 });\n                /// end-region initialize $Notice\n\n                // update store\n                commit('setInitialized', true);\n            };\n\n            // aquire async lock until initialized\n            await Lock.initialize(callback, { getters });\n        },\n        async uninitialize({ commit, getters }) {\n            const callback = async () => {\n                commit('setInitialized', false);\n            };\n            await Lock.uninitialize(callback, { getters });\n        },\n        /// region scoped actions\n        async ADD_SUCCESS({ commit, dispatch }, message) {\n            commit('add', { level: 'success', message });\n            dispatch('diagnostic/ADD_INFO', `Notification (Success): ${message}`, {\n                root: true,\n            });\n        },\n        async ADD_WARNING({ commit, dispatch }, message) {\n            commit('add', { level: 'warning', message });\n            dispatch('diagnostic/ADD_WARNING', `Notification (Warning): ${message}`, {\n                root: true,\n            });\n        },\n        async ADD_ERROR({ commit, dispatch }, message) {\n            commit('add', { level: 'error', message });\n            dispatch('diagnostic/ADD_ERROR', `Notification (Error): ${message}`, {\n                root: true,\n            });\n        },\n        /// end-region scoped actions\n    },\n};\n"],"sourceRoot":""}]}