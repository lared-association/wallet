{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts","mtime":1611927227693},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvbW50L2MvVXNlcnMvanVzdGkvRGVza3RvcC9TVVBFUkhPVy9TeW1ib2xXYWxsZXQvbGFyZWQtd2FsbGV0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvciI7CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfQoKaW1wb3J0IHsgX19hd2FpdGVyLCBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwovKgogKiBDb3B5cmlnaHQgMjAyMCBORU0gKGh0dHBzOi8vbmVtLmlvKQogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KICoKICovCgppbXBvcnQgeyBOZXR3b3JrVHlwZSB9IGZyb20gJ3N5bWJvbC1zZGsnOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IEFjY291bnRTZXJ2aWNlIH0gZnJvbSAnQC9zZXJ2aWNlcy9BY2NvdW50U2VydmljZSc7IC8vIGNoaWxkIGNvbXBvbmVudHMKLy8gQHRzLWlnbm9yZQoKaW1wb3J0IEFwcExvZ28gZnJvbSAnQC9jb21wb25lbnRzL0FwcExvZ28vQXBwTG9nby52dWUnOyAvLyBAdHMtaWdub3JlCgppbXBvcnQgRXJyb3JUb29sdGlwIGZyb20gJ0AvY29tcG9uZW50cy9FcnJvclRvb2x0aXAvRXJyb3JUb29sdGlwLnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBQYWdlTmF2aWdhdG9yIGZyb20gJ0AvY29tcG9uZW50cy9QYWdlTmF2aWdhdG9yL1BhZ2VOYXZpZ2F0b3IudnVlJzsgLy8gQHRzLWlnbm9yZQoKaW1wb3J0IFdpbmRvd0NvbnRyb2xzIGZyb20gJ0AvY29tcG9uZW50cy9XaW5kb3dDb250cm9scy9XaW5kb3dDb250cm9scy52dWUnOyAvLyBAdHMtaWdub3JlCgppbXBvcnQgUGVlclNlbGVjdG9yIGZyb20gJ0AvY29tcG9uZW50cy9QZWVyU2VsZWN0b3IvUGVlclNlbGVjdG9yLnZ1ZSc7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBMYW5ndWFnZVNlbGVjdG9yIGZyb20gJ0AvY29tcG9uZW50cy9MYW5ndWFnZVNlbGVjdG9yL0xhbmd1YWdlU2VsZWN0b3IudnVlJzsgLy8gQHRzLWlnbm9yZQoKaW1wb3J0IEFjY291bnRTZWxlY3RvckZpZWxkIGZyb20gJ0AvY29tcG9uZW50cy9BY2NvdW50U2VsZWN0b3JGaWVsZC9BY2NvdW50U2VsZWN0b3JGaWVsZC52dWUnOyAvLyBAdHMtaWdub3JlCi8vaW1wb3J0IERlYnVnQ29uc29sZUJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvRGVidWdDb25zb2xlQnV0dG9uL0RlYnVnQ29uc29sZUJ1dHRvbi52dWUnOwoKaW1wb3J0IE1vZGFsRGVidWdDb25zb2xlIGZyb20gJ0Avdmlld3MvbW9kYWxzL01vZGFsRGVidWdDb25zb2xlL01vZGFsRGVidWdDb25zb2xlLnZ1ZSc7IC8vQHRzLWlnbm9yZQoKaW1wb3J0IFNldHRpbmdzIGZyb20gJ0AvY29tcG9uZW50cy9TZXR0aW5ncy9TZXR0aW5ncy52dWUnOyAvL0B0cy1pZ25vcmUKCmltcG9ydCBJbXBvcnRRUkJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvUVJDb2RlL0ltcG9ydFFSQnV0dG9uL0ltcG9ydFFSQnV0dG9uLnZ1ZSc7IC8vQHRzLWlnbm9yZQoKaW1wb3J0IEFjY291bnRMaW5rcyBmcm9tICdAL2NvbXBvbmVudHMvQWNjb3VudExpbmtzL0FjY291bnRMaW5rcy52dWUnOwppbXBvcnQgeyBvZmZpY2lhbEljb25zIH0gZnJvbSAnQC92aWV3cy9yZXNvdXJjZXMvSW1hZ2VzJzsKCnZhciBQYWdlTGF5b3V0VHMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoUGFnZUxheW91dFRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihQYWdlTGF5b3V0VHMpOwoKICBmdW5jdGlvbiBQYWdlTGF5b3V0VHMoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhZ2VMYXlvdXRUcyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIC8qKgogICAgICogV2hldGhlciBjdXJyZW50bHkgZGlzcGxheWluZyBkZWJ1ZyBjb25zb2xlCiAgICAgKiBAdmFyIHtib29sZWFufQogICAgICovCgogICAgX3RoaXMuaXNEaXNwbGF5aW5nRGVidWdDb25zb2xlID0gZmFsc2U7CiAgICByZXR1cm4gX3RoaXM7CiAgfSAvLy8gcmVnaW9uIGNvbXB1dGVkIHByb3BlcnRpZXMgZ2V0dGVyL3NldHRlcgoKICAvKioKICAgKiBIb2xkcyBhbGVydCBtZXNzYWdlCiAgICogQHZhciB7T2JqZWN0fQogICAqLwoKCiAgX2NyZWF0ZUNsYXNzKFBhZ2VMYXlvdXRUcywgW3sKICAgIGtleTogIm9uQ2hhbmdlQWNjb3VudCIsCiAgICAvLy8gZW5kLXJlZ2lvbiBjb21wdXRlZCBwcm9wZXJ0aWVzIGdldHRlci9zZXR0ZXIKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNoYW5nZUFjY291bnQoYWNjb3VudElkKSB7CiAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc2VydmljZSwgYWNjb3VudDsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc2VydmljZSA9IG5ldyBBY2NvdW50U2VydmljZSgpOwogICAgICAgICAgICAgICAgYWNjb3VudCA9IHNlcnZpY2UuZ2V0QWNjb3VudChhY2NvdW50SWQpOwoKICAgICAgICAgICAgICAgIGlmIChhY2NvdW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnV2FsbGV0IG5vdCBmb3VuZDogJywgYWNjb3VudElkKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWNjb3VudC9TRVRfQ1VSUkVOVF9BQ0NPVU5UJywgYWNjb3VudCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiYWxlcnQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIGlmICghdGhpcy5jdXJyZW50UGVlciB8fCAhdGhpcy5pc0Nvbm5lY3RlZCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ25vZGVfbm90X2F2YWlsYWJsZV9wbGVhc2VfY2hlY2tfeW91cl9ub2RlX29yX25ldHdvcmtfc2V0dGluZ3MnCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY3VycmVudFByb2ZpbGUgJiYgdGhpcy5jdXJyZW50UHJvZmlsZS5uZXR3b3JrVHlwZSAhPT0gdGhpcy5uZXR3b3JrVHlwZSkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCduZXR3b3JrL1NFVF9ORVRXT1JLX0lTX05PVF9NQVRDSElOR19QUk9GSUxFJywgdHJ1ZSk7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAnYWNjb3VudF9uZXR3b3JrX3R5cGVfZG9lc19ub3RfbWF0Y2hfY3VycmVudF9uZXR3b3JrX3R5cGUnCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY3VycmVudFByb2ZpbGUgJiYgdGhpcy5jdXJyZW50UHJvZmlsZS5nZW5lcmF0aW9uSGFzaCAhPT0gdGhpcy5nZW5lcmF0aW9uSGFzaCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCduZXR3b3JrL1NFVF9ORVRXT1JLX0lTX05PVF9NQVRDSElOR19QUk9GSUxFJywgdHJ1ZSk7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAnYWNjb3VudF9uZXR3b3JrX2RvZXNfbm90X21hdGNoX2N1cnJlbnRfbmV0d29ya190eXBlJwogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgbWVzc2FnZTogJycKICAgICAgfTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbmZvIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICBpZiAodGhpcy5pc0Nvc2lnbmF0b3J5TW9kZSAmJiAhdGhpcy5jdXJyZW50QWNjb3VudC5pc011bHRpc2lnKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAnaW5mb19hY3RpdmVfY29zaWduYXRvcnlfbW9kZScKICAgICAgICB9OwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgIG1lc3NhZ2U6ICcnCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAiaGFzRGVidWdDb25zb2xlTW9kYWwiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLmlzRGlzcGxheWluZ0RlYnVnQ29uc29sZTsKICAgIH0sCiAgICBzZXQ6IGZ1bmN0aW9uIHNldChmKSB7CiAgICAgIHRoaXMuaXNEaXNwbGF5aW5nRGVidWdDb25zb2xlID0gZjsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJleHBsb3JlclVybCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEFjY291bnQgPyB0aGlzLmV4cGxvcmVyQmFzZVVybC5yZXBsYWNlKC9cLyskLywgJycpICsgJy9hY2NvdW50cy8nICsgdGhpcy5jdXJyZW50QWNjb3VudC5hZGRyZXNzIDogdGhpcy5leHBsb3JlckJhc2VVcmw7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmF1Y2V0VXJsIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5jdXJyZW50QWNjb3VudCA/IHRoaXMuZmF1Y2V0QmFzZVVybCArICc/cmVjaXBpZW50PScgKyB0aGlzLmN1cnJlbnRBY2NvdW50LmFkZHJlc3MgOiB0aGlzLmZhdWNldEJhc2VVcmw7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNUZXN0bmV0IiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5uZXR3b3JrVHlwZSA9PT0gTmV0d29ya1R5cGUuVEVTVF9ORVQ7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmF1Y2V0SWNvbiIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIG9mZmljaWFsSWNvbnMuZmF1Y2V0OwogICAgfQogIH0sIHsKICAgIGtleTogImV4cGxvcmVySWNvbiIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIG9mZmljaWFsSWNvbnMudm90aW5nOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFBhZ2VMYXlvdXRUczsKfShWdWUpOwoKUGFnZUxheW91dFRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBBcHBMb2dvOiBBcHBMb2dvLAogICAgRXJyb3JUb29sdGlwOiBFcnJvclRvb2x0aXAsCiAgICBQYWdlTmF2aWdhdG9yOiBQYWdlTmF2aWdhdG9yLAogICAgV2luZG93Q29udHJvbHM6IFdpbmRvd0NvbnRyb2xzLAogICAgUGVlclNlbGVjdG9yOiBQZWVyU2VsZWN0b3IsCiAgICBMYW5ndWFnZVNlbGVjdG9yOiBMYW5ndWFnZVNlbGVjdG9yLAogICAgQWNjb3VudFNlbGVjdG9yRmllbGQ6IEFjY291bnRTZWxlY3RvckZpZWxkLAogICAgTW9kYWxEZWJ1Z0NvbnNvbGU6IE1vZGFsRGVidWdDb25zb2xlLAogICAgU2V0dGluZ3M6IFNldHRpbmdzLAogICAgSW1wb3J0UVJCdXR0b246IEltcG9ydFFSQnV0dG9uLAogICAgQWNjb3VudExpbmtzOiBBY2NvdW50TGlua3MKICB9LAogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGN1cnJlbnRQZWVyOiAnbmV0d29yay9jdXJyZW50UGVlcicsCiAgICBpc0Nvbm5lY3RlZDogJ25ldHdvcmsvaXNDb25uZWN0ZWQnLAogICAgbmV0d29ya1R5cGU6ICduZXR3b3JrL25ldHdvcmtUeXBlJywKICAgIGdlbmVyYXRpb25IYXNoOiAnbmV0d29yay9nZW5lcmF0aW9uSGFzaCcsCiAgICBjdXJyZW50UHJvZmlsZTogJ3Byb2ZpbGUvY3VycmVudFByb2ZpbGUnLAogICAgaXNDb3NpZ25hdG9yeU1vZGU6ICdhY2NvdW50L2lzQ29zaWduYXRvcnlNb2RlJywKICAgIGN1cnJlbnRBY2NvdW50OiAnYWNjb3VudC9jdXJyZW50QWNjb3VudCcsCiAgICBleHBsb3JlckJhc2VVcmw6ICdhcHAvZXhwbG9yZXJVcmwnLAogICAgZmF1Y2V0QmFzZVVybDogJ2FwcC9mYXVjZXRVcmwnCiAgfSkpCn0pXSwgUGFnZUxheW91dFRzKTsKZXhwb3J0IHsgUGFnZUxheW91dFRzIH07"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/layout/PageLayout/PageLayoutTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { NetworkType } from 'symbol-sdk';\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// internal dependencies\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\nimport { AccountService } from '@/services/AccountService';\n// child components\n// @ts-ignore\nimport AppLogo from '@/components/AppLogo/AppLogo.vue';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport PageNavigator from '@/components/PageNavigator/PageNavigator.vue';\n// @ts-ignore\nimport WindowControls from '@/components/WindowControls/WindowControls.vue';\n// @ts-ignore\nimport PeerSelector from '@/components/PeerSelector/PeerSelector.vue';\n// @ts-ignore\nimport LanguageSelector from '@/components/LanguageSelector/LanguageSelector.vue';\n// @ts-ignore\nimport AccountSelectorField from '@/components/AccountSelectorField/AccountSelectorField.vue';\n// @ts-ignore\n//import DebugConsoleButton from '@/components/DebugConsoleButton/DebugConsoleButton.vue';\nimport ModalDebugConsole from '@/views/modals/ModalDebugConsole/ModalDebugConsole.vue';\n//@ts-ignore\nimport Settings from '@/components/Settings/Settings.vue';\nimport { URLInfo } from '@/core/utils/URLInfo';\n//@ts-ignore\nimport ImportQRButton from '@/components/QRCode/ImportQRButton/ImportQRButton.vue';\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n//@ts-ignore\nimport AccountLinks from '@/components/AccountLinks/AccountLinks.vue';\nimport { officialIcons } from '@/views/resources/Images';\n\n@Component({\n    components: {\n        AppLogo,\n        ErrorTooltip,\n        PageNavigator,\n        WindowControls,\n        PeerSelector,\n        LanguageSelector,\n        AccountSelectorField,\n        ModalDebugConsole,\n        Settings,\n        ImportQRButton,\n        AccountLinks,\n    },\n    computed: {\n        ...mapGetters({\n            currentPeer: 'network/currentPeer',\n            isConnected: 'network/isConnected',\n            networkType: 'network/networkType',\n            generationHash: 'network/generationHash',\n            currentProfile: 'profile/currentProfile',\n            isCosignatoryMode: 'account/isCosignatoryMode',\n            currentAccount: 'account/currentAccount',\n            explorerBaseUrl: 'app/explorerUrl',\n            faucetBaseUrl: 'app/faucetUrl',\n        }),\n    },\n})\nexport class PageLayoutTs extends Vue {\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {string}\n     */\n    public currentProfile: ProfileModel;\n\n    /**\n     * Currently active peer\n     * @see {Store.Network}\n     * @var {Object}\n     */\n    public currentPeer: URLInfo;\n\n    /**\n     * Whether the connection is up\n     * @see {Store.Network}\n     * @var {boolean}\n     */\n    public isConnected: boolean;\n\n    /**\n     * Current networkType\n     * @see {Store.Network}\n     * @var {NetworkType}\n     */\n    public networkType: NetworkType;\n\n    /**\n     * Current generationHash\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * Whether cosignatory mode is active\n     * @see {Store.Account}\n     * @var {boolean}\n     */\n    public isCosignatoryMode: boolean;\n\n    /**\n     * Whether currently displaying debug console\n     * @var {boolean}\n     */\n    public isDisplayingDebugConsole: boolean = false;\n\n    /**\n     * Currently active account\n     * @see {Store.Account}\n     * @var {AccountModel}\n     */\n    public currentAccount: AccountModel;\n    /**\n     * Explorer base url\n     * @var {string}\n     */\n    public explorerBaseUrl: string;\n    /**\n     * Faucet base url\n     * @var {string}\n     */\n    public faucetBaseUrl: string;\n\n    /// region computed properties getter/setter\n    /**\n     * Holds alert message\n     * @var {Object}\n     */\n    get alert(): { show: boolean; message: string } {\n        if (!this.currentPeer || !this.isConnected) {\n            return {\n                show: true,\n                message: 'node_not_available_please_check_your_node_or_network_settings',\n            };\n        }\n\n        if (this.currentProfile && this.currentProfile.networkType !== this.networkType) {\n            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);\n            return {\n                show: true,\n                message: 'account_network_type_does_not_match_current_network_type',\n            };\n        }\n\n        if (this.currentProfile && this.currentProfile.generationHash !== this.generationHash) {\n            this.$store.dispatch('network/SET_NETWORK_IS_NOT_MATCHING_PROFILE', true);\n            return {\n                show: true,\n                message: 'account_network_does_not_match_current_network_type',\n            };\n        }\n\n        return { show: false, message: '' };\n    }\n\n    get info(): { show: boolean; message: string } {\n        if (this.isCosignatoryMode && !this.currentAccount.isMultisig) {\n            return { show: true, message: 'info_active_cosignatory_mode' };\n        }\n\n        return { show: false, message: '' };\n    }\n\n    get hasDebugConsoleModal(): boolean {\n        return this.isDisplayingDebugConsole;\n    }\n\n    set hasDebugConsoleModal(f: boolean) {\n        this.isDisplayingDebugConsole = f;\n    }\n\n    public get explorerUrl() {\n        return this.currentAccount\n            ? this.explorerBaseUrl.replace(/\\/+$/, '') + '/accounts/' + this.currentAccount.address\n            : this.explorerBaseUrl;\n    }\n\n    public get faucetUrl() {\n        return this.currentAccount ? this.faucetBaseUrl + '?recipient=' + this.currentAccount.address : this.faucetBaseUrl;\n    }\n\n    public get isTestnet() {\n        return this.networkType === NetworkType.TEST_NET;\n    }\n\n    public get faucetIcon() {\n        return officialIcons.faucet;\n    }\n\n    public get explorerIcon() {\n        return officialIcons.voting;\n    }\n\n    /// end-region computed properties getter/setter\n\n    public async onChangeAccount(accountId: string) {\n        const service = new AccountService();\n        const account = service.getAccount(accountId);\n        if (!account) {\n            console.log('Wallet not found: ', accountId);\n            return;\n        }\n\n        await this.$store.dispatch('account/SET_CURRENT_ACCOUNT', account);\n    }\n}\n"],"sourceRoot":""}]}