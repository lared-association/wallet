{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/HarvestStatisticsPanel/HarvestStatisticsPanelTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/HarvestStatisticsPanel/HarvestStatisticsPanelTs.ts","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/HarvestStatisticsPanel/HarvestStatisticsPanelTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,SAAT,EAAoB,GAApB,EAAyB,KAAzB,QAAsC,wBAAtC;AACA,SAAS,UAAT,QAA2B,MAA3B;AAGA,SAA8B,gBAA9B,QAAsD,oBAAtD;;AAcA,IAAa,wBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,8BAOW;AACH,WAAK,OAAL;AACH;AATL;AAAA;AAAA,8BAWkB;AACV,WAAK,uBAAL;AACA,WAAK,sBAAL;AACH;AAdL;AAAA;AAAA,6CAgBiC;AACzB,WAAK,MAAL,CAAY,QAAZ,CAAqB,wCAArB;AACH;AAlBL;AAAA;AAAA,8CAoBkC;AAC1B,WAAK,MAAL,CAAY,QAAZ,CAAqB,yBAArB;AACH;AAtBL;AAAA;AAAA,qCA4CyB;AACjB,WAAK,OAAL;AACH;AA9CL;AAAA;AAAA,wBAwBwC;AAChC,cAAQ,KAAK,gBAAb;AACI,aAAK,gBAAgB,CAAC,MAAtB;AACI,iBAAO;AAAE,YAAA,GAAG,EAAE,wBAAP;AAAiC,YAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,0BAAR;AAAvC,WAAP;;AACJ,aAAK,gBAAgB,CAAC,QAAtB;AACI,iBAAO;AAAE,YAAA,GAAG,EAAE,sBAAP;AAA+B,YAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,4BAAR;AAArC,WAAP;;AACJ,aAAK,gBAAgB,CAAC,WAAtB;AACI,iBAAO;AAAE,YAAA,GAAG,EAAE,wBAAP;AAAiC,YAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,+BAAR;AAAvC,WAAP;;AACJ,aAAK,gBAAgB,CAAC,qBAAtB;AACI,iBAAO;AAAE,YAAA,GAAG,EAAE,wBAAP;AAAiC,YAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,yCAAR;AAAvC,WAAP;;AACJ,aAAK,gBAAgB,CAAC,uBAAtB;AACI,iBAAO;AAAE,YAAA,GAAG,EAAE,wBAAP;AAAiC,YAAA,IAAI,EAAE,KAAK,EAAL,CAAQ,2CAAR;AAAvC,WAAP;AAVR;AAYH;AArCL;AAAA;AAAA,wBAuC8B;AACtB,aAAO,KAAK,mBAAL,CAAyB,eAAzB,CAAyC,OAAzC,KAAqD,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,KAAK,eAAL,CAAqB,YAAlC,CAA5D;AACH;AAzCL;;AAAA;AAAA,EAA8C,GAA9C,CAAA;;AA4CI,UAAA,CAAA,CADC,KAAK,CAAC,0BAAD,CACN,CAAA,E,kCAAA,E,gBAAA,EAEC,IAFD,CAAA;;AA5CS,wBAAwB,GAAA,UAAA,CAAA,CAXpC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,wBAAwB,EAAE,kCADhB;AAEV,IAAA,gBAAgB,EAAE,mBAFR;AAGV,IAAA,mBAAmB,EAAE,gCAHX;AAIV,IAAA,6BAA6B,EAAE,0CAJrB;AAKV,IAAA,eAAe,EAAE;AALP,GAAD,CADT;AADD,CAAD,CAW2B,CAAA,EAAxB,wBAAwB,CAAxB;SAAA,wB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n\nimport { AccountInfo } from 'symbol-sdk';\nimport { HarvestedBlockStats, HarvestingStatus } from '@/store/Harvesting';\nimport { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            currentSignerAccountInfo: 'account/currentSignerAccountInfo',\n            harvestingStatus: 'harvesting/status',\n            harvestedBlockStats: 'harvesting/harvestedBlockStats',\n            isFetchingHarvestedBlockStats: 'harvesting/isFetchingHarvestedBlockStats',\n            networkCurrency: 'mosaic/networkCurrency',\n        }),\n    },\n})\nexport class HarvestStatisticsPanelTs extends Vue {\n    public currentSignerAccountInfo: AccountInfo;\n    public harvestingStatus: HarvestingStatus;\n    public harvestedBlockStats: HarvestedBlockStats;\n    public isFetchingHarvestedBlockStats: boolean;\n    public networkCurrency: NetworkCurrencyModel;\n\n    created() {\n        this.refresh();\n    }\n\n    public refresh() {\n        this.refreshHarvestingStatus();\n        this.refreshHarvestingStats();\n    }\n\n    public refreshHarvestingStats() {\n        this.$store.dispatch('harvesting/LOAD_HARVESTED_BLOCKS_STATS');\n    }\n\n    public refreshHarvestingStatus() {\n        this.$store.dispatch('harvesting/FETCH_STATUS');\n    }\n\n    public get harvestingStatusIndicator() {\n        switch (this.harvestingStatus) {\n            case HarvestingStatus.ACTIVE:\n                return { cls: 'status-indicator green', text: this.$t('harvesting_status_active') };\n            case HarvestingStatus.INACTIVE:\n                return { cls: 'status-indicator red', text: this.$t('harvesting_status_inactive') };\n            case HarvestingStatus.KEYS_LINKED:\n                return { cls: 'status-indicator amber', text: this.$t('harvesting_status_keys_linked') };\n            case HarvestingStatus.INPROGRESS_ACTIVATION:\n                return { cls: 'status-indicator amber', text: this.$t('harvesting_status_inprogress_activation') };\n            case HarvestingStatus.INPROGRESS_DEACTIVATION:\n                return { cls: 'status-indicator amber', text: this.$t('harvesting_status_inprogress_deactivation') };\n        }\n    }\n\n    public get totalFeesEarned() {\n        return this.harvestedBlockStats.totalFeesEarned.compact() / Math.pow(10, this.networkCurrency.divisibility);\n    }\n\n    @Watch('currentSignerAccountInfo')\n    public refreshWatcher() {\n        this.refresh();\n    }\n}\n"],"sourceRoot":""}]}