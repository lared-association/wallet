{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/hero/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgTm90aWZpY2F0aW9uVHlwZSB9IGZyb20gJ0AvY29yZS91dGlscy9Ob3RpZmljYXRpb25UeXBlJzsKCnZhciBEaXNhYmxlZEZvcm1PdmVybGF5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKERpc2FibGVkRm9ybU92ZXJsYXksIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKERpc2FibGVkRm9ybU92ZXJsYXkpOwoKICBmdW5jdGlvbiBEaXNhYmxlZEZvcm1PdmVybGF5KCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIERpc2FibGVkRm9ybU92ZXJsYXkpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhEaXNhYmxlZEZvcm1PdmVybGF5LCBbewogICAga2V5OiAiZGlzYWJsZVRvTXVsdGlzaWciLAogICAgLy8vIHJlZ2lvbiBjb21wdXRlZCBwcm9wZXJ0aWVzIGdldHRlci9zZXR0ZXIKCiAgICAvKioKICAgICAqIFdoZXRoZXIgYSBmb3JtIHNob3VsZCBiZSBkaXNhYmxlZCB0byBhIG11bHRpc2lnIGFjY291bnQKICAgICAqIEByZXR1cm5zIHtib29sZWFufQogICAgICovCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vIERvbid0IGRpc2FibGUgZm9ybSB3aGVuIHRoZSBmb3JtIGlzIG11bHRpc2lnLWZyaWVuZGx5CiAgICAgIHZhciBtdWx0aXNpZ0ZyaWVuZGx5Um91dGVOYW1lcyA9IFsnZGFzaGJvYXJkLmludm9pY2UnXTsKCiAgICAgIGlmIChtdWx0aXNpZ0ZyaWVuZGx5Um91dGVOYW1lcy5zb21lKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLiRyb3V0ZS5tYXRjaGVkLm1hcChmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgdmFyIG5hbWUgPSBfcmVmLm5hbWU7CiAgICAgICAgICByZXR1cm4gbmFtZTsKICAgICAgICB9KS5zb21lKGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICByZXR1cm4gYiA9PT0gYTsKICAgICAgICB9KTsKICAgICAgfSkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gLy8gRGlzYWJsZSB0aGUgZm9ybXMgdG8gYWNjb3VudHMgd2l0aCBjb3NpZ25hdG9yaWVzCgoKICAgICAgcmV0dXJuIHRoaXMuY3VycmVudEFjY291bnRNdWx0aXNpZ0luZm8gJiYgdGhpcy5jdXJyZW50QWNjb3VudE11bHRpc2lnSW5mby5jb3NpZ25hdG9yeUFkZHJlc3Nlcy5sZW5ndGggPiAwOwogICAgfQogICAgLyoqCiAgICAgKiBBbGVydCB0byBiZSBkaXNwbGF5ZWQKICAgICAqIElkIEFsZXJ0IGlzIGFuIGVtcHR5IHN0cmluZywgdGhpcyBvdmVybGF5IHdvbid0IHJlbmRlcgogICAgICogQHJldHVybnMge3N0cmluZ30KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhbGVydCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgaWYgKHRoaXMud2hpdGVsaXN0ZWQpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5uZXR3b3JrTW9zYWljKSB7CiAgICAgICAgcmV0dXJuIE5vdGlmaWNhdGlvblR5cGUuTk9fTkVUV09SS19DVVJSRU5DWTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZGlzYWJsZVRvTXVsdGlzaWcpIHsKICAgICAgICByZXR1cm4gTm90aWZpY2F0aW9uVHlwZS5NVUxUSVNJR19BQ0NPVU5UU19OT19UWDsKICAgICAgfQoKICAgICAgcmV0dXJuICcnOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIERpc2FibGVkRm9ybU92ZXJsYXk7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogICJkZWZhdWx0IjogZmFsc2UKfSldLCBEaXNhYmxlZEZvcm1PdmVybGF5LnByb3RvdHlwZSwgIndoaXRlbGlzdGVkIiwgdm9pZCAwKTsKCkRpc2FibGVkRm9ybU92ZXJsYXkgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIGNvbXB1dGVkOiBPYmplY3QuYXNzaWduKHt9LCBtYXBHZXR0ZXJzKHsKICAgIG5ldHdvcmtNb3NhaWM6ICdtb3NhaWMvbmV0d29ya01vc2FpYycsCiAgICBjdXJyZW50QWNjb3VudE11bHRpc2lnSW5mbzogJ2FjY291bnQvY3VycmVudEFjY291bnRNdWx0aXNpZ0luZm8nCiAgfSkpCn0pXSwgRGlzYWJsZWRGb3JtT3ZlcmxheSk7CmV4cG9ydCBkZWZhdWx0IERpc2FibGVkRm9ybU92ZXJsYXk7"},{"version":3,"sources":["/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hero/lared-wallet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hero/lared-wallet/src/components/DisabledFormOverlay/DisabledFormOverlay.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,UAAT,QAA2B,MAA3B;AAEA,SAAS,gBAAT,QAAiC,+BAAjC;;AAUA,IAAqB,mBAArB;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAmBI;;AACA;;;;AApBJ,wBAwByB;AAAA;;AACjB;AACA,UAAM,0BAA0B,GAAG,CAAC,mBAAD,CAAnC;;AAEA,UAAI,0BAA0B,CAAC,IAA3B,CAAgC,UAAC,CAAD;AAAA,eAAO,KAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,GAApB,CAAwB;AAAA,cAAG,IAAH,QAAG,IAAH;AAAA,iBAAc,IAAd;AAAA,SAAxB,EAA4C,IAA5C,CAAiD,UAAC,CAAD;AAAA,iBAAO,CAAC,KAAK,CAAb;AAAA,SAAjD,CAAP;AAAA,OAAhC,CAAJ,EAA8G;AAC1G,eAAO,KAAP;AACH,OANgB,CAQjB;;;AACA,aAAO,KAAK,0BAAL,IAAmC,KAAK,0BAAL,CAAgC,oBAAhC,CAAqD,MAArD,GAA8D,CAAxG;AACH;AAED;;;;;;AApCJ;AAAA;AAAA,wBAyCa;AACL,UAAI,KAAK,WAAT,EAAsB;AAClB,eAAO,EAAP;AACH;;AACD,UAAI,CAAC,KAAK,aAAV,EAAyB;AACrB,eAAO,gBAAgB,CAAC,mBAAxB;AACH;;AACD,UAAI,KAAK,iBAAT,EAA4B;AACxB,eAAO,gBAAgB,CAAC,uBAAxB;AACH;;AACD,aAAO,EAAP;AACH;AApDL;;AAAA;AAAA,EAAiD,GAAjD,CAAA;;AAK8B,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,6BAAA,E,aAAA,E,KAAqB,CAArB,CAAA;;AALT,mBAAmB,GAAA,UAAA,CAAA,CARvC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,aAAa,EAAE,sBADL;AAEV,IAAA,0BAA0B,EAAE;AAFlB,GAAD,CADT;AADD,CAAD,CAQ8B,CAAA,EAAnB,mBAAmB,CAAnB;eAAA,mB","sourcesContent":["\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { MosaicId, MultisigAccountInfo } from 'symbol-sdk';\nimport { NotificationType } from '@/core/utils/NotificationType';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            networkMosaic: 'mosaic/networkMosaic',\n            currentAccountMultisigInfo: 'account/currentAccountMultisigInfo',\n        }),\n    },\n})\nexport default class DisabledFormOverlay extends Vue {\n    /**\n     * Overrides checks\n     * @type{boolean}\n     */\n    @Prop({ default: false }) whitelisted: boolean;\n\n    /**\n     * Networks currency mosaic\n     * @var {MosaicId}\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * Current account multisig info\n     * @type {MultisigAccountInfo}\n     */\n    public currentAccountMultisigInfo: MultisigAccountInfo;\n\n    /// region computed properties getter/setter\n    /**\n     * Whether a form should be disabled to a multisig account\n     * @returns {boolean}\n     */\n    get disableToMultisig(): boolean {\n        // Don't disable form when the form is multisig-friendly\n        const multisigFriendlyRouteNames = ['dashboard.invoice'];\n\n        if (multisigFriendlyRouteNames.some((a) => this.$route.matched.map(({ name }) => name).some((b) => b === a))) {\n            return false;\n        }\n\n        // Disable the forms to accounts with cosignatories\n        return this.currentAccountMultisigInfo && this.currentAccountMultisigInfo.cosignatoryAddresses.length > 0;\n    }\n\n    /**\n     * Alert to be displayed\n     * Id Alert is an empty string, this overlay won't render\n     * @returns {string}\n     */\n    get alert(): string {\n        if (this.whitelisted) {\n            return '';\n        }\n        if (!this.networkMosaic) {\n            return NotificationType.NO_NETWORK_CURRENCY;\n        }\n        if (this.disableToMultisig) {\n            return NotificationType.MULTISIG_ACCOUNTS_NO_TX;\n        }\n        return '';\n    }\n    /// end-region computed properties getter/setter\n}\n"],"sourceRoot":""}]}