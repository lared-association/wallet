{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/services/NodeService.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/services/NodeService.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfQoKZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgT2JzZXJ2YWJsZUhlbHBlcnMgfSBmcm9tICdAL2NvcmUvdXRpbHMvT2JzZXJ2YWJsZUhlbHBlcnMnOwppbXBvcnQgeyBtYXAsIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJzsKaW1wb3J0IHsgTm9kZU1vZGVsIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL2VudGl0aWVzL05vZGVNb2RlbCc7CmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJzsKaW1wb3J0IHsgbmV0d29ya0NvbmZpZyB9IGZyb20gJ0AvY29uZmlnJzsKaW1wb3J0IHsgTm9kZU1vZGVsU3RvcmFnZSB9IGZyb20gJ0AvY29yZS9kYXRhYmFzZS9zdG9yYWdlL05vZGVNb2RlbFN0b3JhZ2UnOwovKioKICogVGhlIHNlcnZpY2UgaW4gY2hhcmdlIG9mIGxvYWRpbmcgYW5kIGNhY2hpbmcgYW55dGhpbmcgcmVsYXRlZCB0byBOb2RlIGFuZCBQZWVycyBmcm9tIFJlc3QuCiAqIFRoZSBjYWNoZSBpcyBkb25lIGJ5IHN0b3JpbmcgdGhlIHBheWxvYWRzIGluIFNpbXBsZU9iamVjdFN0b3JhZ2UuCiAqLwoKZXhwb3J0IHZhciBOb2RlU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTm9kZVNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTm9kZVNlcnZpY2UpOwoKICAgIC8qKgogICAgICogVGhlIHBlZXIgaW5mb3JtYXRpb24gbG9jYWwgY2FjaGUuCiAgICAgKi8KICAgIHRoaXMuc3RvcmFnZSA9IE5vZGVNb2RlbFN0b3JhZ2UuSU5TVEFOQ0U7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTm9kZVNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRLbm93Tm9kZXNPbmx5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRLbm93Tm9kZXNPbmx5KCkgewogICAgICByZXR1cm4gXy51bmlxQnkodGhpcy5sb2FkTm9kZXMoKS5jb25jYXQodGhpcy5sb2FkU3RhdGljTm9kZXMoKSksICd1cmwnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXROb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Tm9kZXMocmVwb3NpdG9yeUZhY3RvcnksIHJlcG9zaXRvcnlGYWN0b3J5VXJsKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgc3RvcmVkTm9kZXMgPSB0aGlzLmdldEtub3dOb2Rlc09ubHkoKTsKICAgICAgdmFyIG5vZGVSZXBvc2l0b3J5ID0gcmVwb3NpdG9yeUZhY3RvcnkuY3JlYXRlTm9kZVJlcG9zaXRvcnkoKTsKICAgICAgcmV0dXJuIG5vZGVSZXBvc2l0b3J5LmdldE5vZGVJbmZvKCkucGlwZShtYXAoZnVuY3Rpb24gKGR0bykgewogICAgICAgIHJldHVybiBfdGhpcy5jcmVhdGVOb2RlTW9kZWwocmVwb3NpdG9yeUZhY3RvcnlVcmwsIGR0by5mcmllbmRseU5hbWUsIHVuZGVmaW5lZCwgZHRvLnB1YmxpY0tleSwgZHRvLm5vZGVQdWJsaWNLZXkpOwogICAgICB9KSwgT2JzZXJ2YWJsZUhlbHBlcnMuZGVmYXVsdExhc3QodGhpcy5jcmVhdGVOb2RlTW9kZWwocmVwb3NpdG9yeUZhY3RvcnlVcmwpKSwgbWFwKGZ1bmN0aW9uIChjdXJyZW50Tm9kZSkgewogICAgICAgIHJldHVybiBfLnVuaXFCeShbY3VycmVudE5vZGVdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RvcmVkTm9kZXMpKSwgJ3VybCcpOwogICAgICB9KSwgdGFwKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLnNhdmVOb2RlcyhwKTsKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogImxvYWRTdGF0aWNOb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZFN0YXRpY05vZGVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBuZXR3b3JrQ29uZmlnLm5vZGVzLm1hcChmdW5jdGlvbiAobikgewogICAgICAgIHJldHVybiBfdGhpczIuY3JlYXRlTm9kZU1vZGVsKG4udXJsLCBuLmZyaWVuZGx5TmFtZSwgdHJ1ZSk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZU5vZGVNb2RlbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlTm9kZU1vZGVsKHVybCkgewogICAgICB2YXIgZnJpZW5kbHlOYW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7CiAgICAgIHZhciBpc0RlZmF1bHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDsKICAgICAgdmFyIHB1YmxpY0tleSA9IGFyZ3VtZW50cy5sZW5ndGggPiAzID8gYXJndW1lbnRzWzNdIDogdW5kZWZpbmVkOwogICAgICB2YXIgbm9kZVB1YmxpY0tleSA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ID8gYXJndW1lbnRzWzRdIDogdW5kZWZpbmVkOwogICAgICByZXR1cm4gbmV3IE5vZGVNb2RlbCh1cmwsIGZyaWVuZGx5TmFtZSB8fCAnJywgaXNEZWZhdWx0IHx8ICEhbmV0d29ya0NvbmZpZy5ub2Rlcy5maW5kKGZ1bmN0aW9uIChuKSB7CiAgICAgICAgcmV0dXJuIG4udXJsID09PSB1cmw7CiAgICAgIH0pLCBwdWJsaWNLZXksIG5vZGVQdWJsaWNLZXkpOwogICAgfQogIH0sIHsKICAgIGtleTogImxvYWROb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZE5vZGVzKCkgewogICAgICByZXR1cm4gdGhpcy5zdG9yYWdlLmdldCgpIHx8IFtdOwogICAgfQogIH0sIHsKICAgIGtleTogInNhdmVOb2RlcyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZU5vZGVzKG5vZGVzKSB7CiAgICAgIHRoaXMuc3RvcmFnZS5zZXQobm9kZXMpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlc2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy5zdG9yYWdlLnJlbW92ZSgpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE5vZGVTZXJ2aWNlOwp9KCk7"},{"version":3,"sources":["/home/hero/lared-wallet/src/services/NodeService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAkBA,SAAS,iBAAT,QAAkC,gCAAlC;AACA,SAAS,GAAT,EAAc,GAAd,QAAyB,gBAAzB;AACA,SAAS,SAAT,QAA0B,oCAA1B;AACA,OAAO,KAAK,CAAZ,MAAmB,QAAnB;AACA,SAAS,aAAT,QAA8B,UAA9B;AACA,SAAS,gBAAT,QAAiC,0CAAjC;AAEA;;;;;AAIA,WAAa,WAAb;AAAA,yBAAA;AAAA;;AACI;;;AAGiB,SAAA,OAAA,GAAU,gBAAgB,CAAC,QAA3B;AAqDpB;;AAzDD;AAAA;AAAA,uCAM2B;AACnB,aAAO,CAAC,CAAC,MAAF,CAAS,KAAK,SAAL,GAAiB,MAAjB,CAAwB,KAAK,eAAL,EAAxB,CAAT,EAA0D,KAA1D,CAAP;AACH;AARL;AAAA;AAAA,6BAUoB,iBAVpB,EAU0D,oBAV1D,EAUsF;AAAA;;AAC9E,UAAM,WAAW,GAAG,KAAK,gBAAL,EAApB;AACA,UAAM,cAAc,GAAG,iBAAiB,CAAC,oBAAlB,EAAvB;AAEA,aAAO,cAAc,CAAC,WAAf,GAA6B,IAA7B,CACH,GAAG,CAAC,UAAC,GAAD;AAAA,eACA,KAAI,CAAC,eAAL,CAAqB,oBAArB,EAA2C,GAAG,CAAC,YAA/C,EAA6D,SAA7D,EAAwE,GAAG,CAAC,SAA5E,EAAuF,GAAG,CAAC,aAA3F,CADA;AAAA,OAAD,CADA,EAIH,iBAAiB,CAAC,WAAlB,CAA8B,KAAK,eAAL,CAAqB,oBAArB,CAA9B,CAJG,EAKH,GAAG,CAAC,UAAC,WAAD;AAAA,eAAiB,CAAC,CAAC,MAAF,EAAU,WAAV,4BAA0B,WAA1B,IAAwC,KAAxC,CAAjB;AAAA,OAAD,CALA,EAMH,GAAG,CAAC,UAAC,CAAD;AAAA,eAAO,KAAI,CAAC,SAAL,CAAe,CAAf,CAAP;AAAA,OAAD,CANA,CAAP;AAQH;AAtBL;AAAA;AAAA,sCAwB2B;AAAA;;AACnB,aAAO,aAAa,CAAC,KAAd,CAAoB,GAApB,CAAwB,UAAC,CAAD,EAAM;AACjC,eAAO,MAAI,CAAC,eAAL,CAAqB,CAAC,CAAC,GAAvB,EAA4B,CAAC,CAAC,YAA9B,EAA4C,IAA5C,CAAP;AACH,OAFM,CAAP;AAGH;AA5BL;AAAA;AAAA,oCA+BQ,GA/BR,EAmC8B;AAAA,UAHtB,YAGsB,uEAHa,SAGb;AAAA,UAFtB,SAEsB,uEAFW,SAEX;AAAA,UADtB,SACsB;AAAA,UAAtB,aAAsB;AAEtB,aAAO,IAAI,SAAJ,CACH,GADG,EAEH,YAAY,IAAI,EAFb,EAGH,SAAS,IAAI,CAAC,CAAC,aAAa,CAAC,KAAd,CAAoB,IAApB,CAAyB,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,GAAF,KAAU,GAAjB;AAAA,OAAzB,CAHZ,EAIH,SAJG,EAKH,aALG,CAAP;AAOH;AA5CL;AAAA;AAAA,gCA8CqB;AACb,aAAO,KAAK,OAAL,CAAa,GAAb,MAAsB,EAA7B;AACH;AAhDL;AAAA;AAAA,8BAkDqB,KAlDrB,EAkDuC;AAC/B,WAAK,OAAL,CAAa,GAAb,CAAiB,KAAjB;AACH;AApDL;AAAA;AAAA,4BAsDgB;AACR,WAAK,OAAL,CAAa,MAAb;AACH;AAxDL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { NodeInfo, RepositoryFactory } from 'symbol-sdk';\nimport { Observable } from 'rxjs';\nimport { ObservableHelpers } from '@/core/utils/ObservableHelpers';\nimport { map, tap } from 'rxjs/operators';\nimport { NodeModel } from '@/core/database/entities/NodeModel';\nimport * as _ from 'lodash';\nimport { networkConfig } from '@/config';\nimport { NodeModelStorage } from '@/core/database/storage/NodeModelStorage';\n\n/**\n * The service in charge of loading and caching anything related to Node and Peers from Rest.\n * The cache is done by storing the payloads in SimpleObjectStorage.\n */\nexport class NodeService {\n    /**\n     * The peer information local cache.\n     */\n    private readonly storage = NodeModelStorage.INSTANCE;\n\n    public getKnowNodesOnly(): NodeModel[] {\n        return _.uniqBy(this.loadNodes().concat(this.loadStaticNodes()), 'url');\n    }\n\n    public getNodes(repositoryFactory: RepositoryFactory, repositoryFactoryUrl: string): Observable<NodeModel[]> {\n        const storedNodes = this.getKnowNodesOnly();\n        const nodeRepository = repositoryFactory.createNodeRepository();\n\n        return nodeRepository.getNodeInfo().pipe(\n            map((dto: NodeInfo) =>\n                this.createNodeModel(repositoryFactoryUrl, dto.friendlyName, undefined, dto.publicKey, dto.nodePublicKey),\n            ),\n            ObservableHelpers.defaultLast(this.createNodeModel(repositoryFactoryUrl)),\n            map((currentNode) => _.uniqBy([currentNode, ...storedNodes], 'url')),\n            tap((p) => this.saveNodes(p)),\n        );\n    }\n\n    private loadStaticNodes(): NodeModel[] {\n        return networkConfig.nodes.map((n) => {\n            return this.createNodeModel(n.url, n.friendlyName, true);\n        });\n    }\n\n    private createNodeModel(\n        url: string,\n        friendlyName: string | undefined = undefined,\n        isDefault: boolean | undefined = undefined,\n        publicKey?: string,\n        nodePublicKey?: string,\n    ): NodeModel {\n        return new NodeModel(\n            url,\n            friendlyName || '',\n            isDefault || !!networkConfig.nodes.find((n) => n.url === url),\n            publicKey,\n            nodePublicKey,\n        );\n    }\n\n    private loadNodes(): NodeModel[] {\n        return this.storage.get() || [];\n    }\n\n    public saveNodes(nodes: NodeModel[]) {\n        this.storage.set(nodes);\n    }\n\n    public reset() {\n        this.storage.remove();\n    }\n}\n"],"sourceRoot":""}]}