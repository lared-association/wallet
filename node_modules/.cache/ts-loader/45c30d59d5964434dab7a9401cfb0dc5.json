{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/utils/ObservableHelpers.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/utils/ObservableHelpers.ts","mtime":1606213958965},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgRU1QVFksIG1lcmdlLCBvZiwgdGhyb3dFcnJvciB9IGZyb20gJ3J4anMnOwppbXBvcnQgeyBjYXRjaEVycm9yIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOwovKioKICogQ3VzdG9tIG9ic2VydmFibGUgcGlwZSBzdHlsZSBvcGVyYXRpb25zLgogKi8KCmV4cG9ydCB2YXIgT2JzZXJ2YWJsZUhlbHBlcnMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIE9ic2VydmFibGVIZWxwZXJzKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9ic2VydmFibGVIZWxwZXJzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhPYnNlcnZhYmxlSGVscGVycywgbnVsbCwgW3sKICAgIGtleTogImRlZmF1bHRGaXJzdCIsCgogICAgLyoqCiAgICAgKiBUaGlzIHBpcGUgb3BlcmF0aW9uIGNvbmNhdGVuYXRlcyB0aGUgZGVmYXVsdCB2YWx1ZXMgZmlyc3Qgd2hlbiBwcm92aWRlZCBvbiB0b3Agd2hhdCB0aGUKICAgICAqIGN1cnJlbnQgb2JzZXJ2YWJsZSByZXNvbHZlcy4gaWYgdGhlIGRlZmF1bHRWYWx1ZSBpcyBwcm92aWRlZCBhbmQgdGhlIGN1cnJlbnQgb2JzZXJ2YWJsZSBmYWlscywKICAgICAqIHRoZSBlcnJvciBpcyBsb2dnZWQgYW5kIGlnbm9yZWQuIElmIGRlZmF1bHQgaXMgbm90IHByb3ZpZGVkLCB0aGUgZXJyb3IgaXMgcHJvcGFnYXRlZC4KICAgICAqCiAgICAgKiAgVGhlIGlkZWEgaXMgdGhhdCBjbGllbnRzIHdpbGwgZ2V0IGEgY2FjaGVkIHZlcnNpb24gb2YgdGhlIGRhdGEgZmlyc3QsIHRoZW4gdGhlIGRhdGEgd2lsbCBiZQogICAgICogdXBncmFkZWQgd2hlbiByZXR1cm5lZCBzaW11bGF0aW5nIGEgZmFzdGVyIHJlc3BvbnNlLgogICAgICoKICAgICAqICBUaGlzIG9ic2VydmFibGUgbWF5IHNlbmQgb25lIGV4dHJhIGRhdGEgdG8gdGhlIG9ic2VydmFibGUuCiAgICAgKgogICAgICogQHBhcmFtIGRlZmF1bHRWYWx1ZSB0aGUgZGVmYXVsdCB2YWx1ZSB0byBiZSBwaXBlZCBmaXJzdCBiZWZvcmUgdGhlIG9ic2VydmFibGUuCiAgICAgKi8KICAgIHZhbHVlOiBmdW5jdGlvbiBkZWZhdWx0Rmlyc3QoZGVmYXVsdFZhbHVlKSB7CiAgICAgIHJldHVybiBmdW5jdGlvbiAob2JzZXJ2YWJsZSkgewogICAgICAgIHJldHVybiBtZXJnZShkZWZhdWx0VmFsdWUgPyBvZihkZWZhdWx0VmFsdWUpIDogRU1QVFksIG9ic2VydmFibGUucGlwZShjYXRjaEVycm9yKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBpZiAoZGVmYXVsdFZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiBFTVBUWTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB0aHJvd0Vycm9yKGUpOwogICAgICAgICAgfQogICAgICAgIH0pKSk7CiAgICAgIH07CiAgICB9CiAgICAvKioKICAgICAqIFRoaXMgcGlwZSBvcGVyYXRpb24gYXBwZW5kcyB0aGUgZGVmYXVsdCBkYXRhIHRvIHRoZSBvYnNlcnZhYmxlIGlmIHRoaXMgb25lIGZhaWxzLgogICAgICoKICAgICAqIElmIHRoZSBkZWZhdWx0IGRhdGEgaXMgbm90IHByb3ZpZGVkLCB0aGUgb2JzZXJ2YWJsZSBlcnJvciBpcyBwcm9wYWdhdGVkLiBJZiB0aGUgb2JzZXJ2YWJsZQogICAgICogc3VjY2VlZHMsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIGlnbm9yZWQuCiAgICAgKgogICAgICogVGhlIGlkZWEgaXMgdGhhdCBpZiB0aGUgcmVzcG9uc2UgY2Fubm90IGJlIG9idGFpbmVkIGZyb20gcmVzdCwgdGhlIGNhY2hlZCBkYXRhIHdpbGwgYmUgdXNlZC4KICAgICAqCiAgICAgKiBAcGFyYW0gZGVmYXVsdFZhbHVlIHRoZSBkZWZhdWx0IHZhbHVlIHRvIGJlIHByb3ZpZGVkIGlmIHRoZSBjdXJyZW50IG9ic2VydmFibGUgZmFpbHMuCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZGVmYXVsdExhc3QiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlZmF1bHRMYXN0KCkgewogICAgICB2YXIgZGVmYXVsdFZhbHVlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQ7CiAgICAgIHJldHVybiBmdW5jdGlvbiAob2JzZXJ2YWJsZSkgewogICAgICAgIHJldHVybiBvYnNlcnZhYmxlLnBpcGUoY2F0Y2hFcnJvcihmdW5jdGlvbiAoZSkgewogICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSkgewogICAgICAgICAgICByZXR1cm4gb2YoZGVmYXVsdFZhbHVlKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB0aHJvd0Vycm9yKGUpOwogICAgICAgICAgfQogICAgICAgIH0pKTsKICAgICAgfTsKICAgIH0KICB9XSk7CgogIHJldHVybiBPYnNlcnZhYmxlSGVscGVyczsKfSgpOw=="},{"version":3,"sources":["/home/hero/lared-wallet/src/core/utils/ObservableHelpers.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;AAgBA,SAAS,KAAT,EAAgB,KAAhB,EAAiD,EAAjD,EAAqD,UAArD,QAAuE,MAAvE;AACA,SAAS,UAAT,QAA2B,gBAA3B;AAEA;;;;AAGA,WAAa,iBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACI;;;;;;;;;;;;AADJ,iCAakC,YAblC,EAa6D;AACrD,aAAO,UAAC,UAAD;AAAA,eACH,KAAK,CACD,YAAY,GAAG,EAAE,CAAC,YAAD,CAAL,GAAsB,KADjC,EAED,UAAU,CAAC,IAAX,CACI,UAAU,CAAC,UAAC,CAAD,EAAM;AACb,cAAI,YAAJ,EAAkB;AACd,mBAAO,KAAP;AACH,WAFD,MAEO;AACH,mBAAO,UAAU,CAAC,CAAD,CAAjB;AACH;AACJ,SANS,CADd,CAFC,CADF;AAAA,OAAP;AAaH;AAED;;;;;;;;;;;AA7BJ;AAAA;AAAA,kCAwCwE;AAAA,UAAvC,YAAuC,uEAAT,SAAS;AAChE,aAAO,UAAC,UAAD;AAAA,eACH,UAAU,CAAC,IAAX,CACI,UAAU,CAAC,UAAC,CAAD,EAAM;AACb,cAAI,YAAJ,EAAkB;AACd,mBAAO,EAAE,CAAC,YAAD,CAAT;AACH,WAFD,MAEO;AACH,mBAAO,UAAU,CAAC,CAAD,CAAjB;AACH;AACJ,SANS,CADd,CADG;AAAA,OAAP;AAUH;AAnDL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { EMPTY, merge, MonoTypeOperatorFunction, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * Custom observable pipe style operations.\n */\nexport class ObservableHelpers {\n    /**\n     * This pipe operation concatenates the default values first when provided on top what the\n     * current observable resolves. if the defaultValue is provided and the current observable fails,\n     * the error is logged and ignored. If default is not provided, the error is propagated.\n     *\n     *  The idea is that clients will get a cached version of the data first, then the data will be\n     * upgraded when returned simulating a faster response.\n     *\n     *  This observable may send one extra data to the observable.\n     *\n     * @param defaultValue the default value to be piped first before the observable.\n     */\n    public static defaultFirst<T>(defaultValue: T | undefined): MonoTypeOperatorFunction<T> {\n        return (observable) =>\n            merge(\n                defaultValue ? of(defaultValue) : EMPTY,\n                observable.pipe(\n                    catchError((e) => {\n                        if (defaultValue) {\n                            return EMPTY;\n                        } else {\n                            return throwError(e);\n                        }\n                    }),\n                ),\n            );\n    }\n\n    /**\n     * This pipe operation appends the default data to the observable if this one fails.\n     *\n     * If the default data is not provided, the observable error is propagated. If the observable\n     * succeeds, the default value is ignored.\n     *\n     * The idea is that if the response cannot be obtained from rest, the cached data will be used.\n     *\n     * @param defaultValue the default value to be provided if the current observable fails.\n     */\n\n    public static defaultLast<T>(defaultValue: T | undefined = undefined): MonoTypeOperatorFunction<T> {\n        return (observable) =>\n            observable.pipe(\n                catchError((e) => {\n                    if (defaultValue) {\n                        return of(defaultValue);\n                    } else {\n                        return throwError(e);\n                    }\n                }),\n            );\n    }\n}\n"],"sourceRoot":""}]}