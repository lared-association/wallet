{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/MaxFeeSelector/MaxFeeSelectorTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/MaxFeeSelector/MaxFeeSelectorTs.ts","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/MaxFeeSelector/MaxFeeSelectorTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n// configuration\nimport { feesConfig } from '@/config';\n// @ts-ignore\nimport FormLabel from '@/components/FormLabel/FormLabel.vue';\nimport { NetworkCurrencyModel } from '@/core/database/entities/NetworkCurrencyModel';\n\n@Component({\n    components: {\n        FormLabel,\n    },\n    computed: {\n        ...mapGetters({\n            defaultFee: 'app/defaultFee',\n            networkMosaicName: 'mosaic/networkMosaicName',\n            networkCurrency: 'mosaic/networkCurrency',\n        }),\n    },\n})\nexport class MaxFeeSelectorTs extends Vue {\n    @Prop({\n        default: 'form-line-container',\n    })\n    public className: string;\n\n    @Prop({ default: false })\n    public displayOnly!: boolean;\n\n    /**\n     * Networks currency mosaic name\n     * @var {string}\n     */\n    private networkMosaicName: string;\n\n    /**\n     * Known mosaics info\n     * @var {MosaicInfo[]}\n     */\n    private networkCurrency: NetworkCurrencyModel;\n\n    /**\n     * Default fee setting\n     * @var {number}\n     */\n    private defaultFee: number;\n\n    /**\n     * Dynamically calculated recommended fee\n     */\n    @Prop({ default: 0 }) calculatedRecommendedFee: number;\n\n    /**\n     * Dynamically calculated highest fee\n     */\n    @Prop({ default: 0 }) calculatedHighestFee: number;\n\n    /**\n     * The fees to be displayed in the dropw down.\n     */\n    private fees: { label: string; maxFee: number; calculatedFee: number }[];\n\n    @Prop({\n        default: 1,\n    })\n    multiplier: number;\n\n    public created() {\n        this.fees = Object.entries(feesConfig).map((entry) => ({\n            label: this.getLabel([entry[0], entry[1] as number]),\n            maxFee: entry[1] as number,\n            calculatedFee: entry[1] as number,\n        }));\n    }\n\n    /**\n     * Returns the label based on the feesConfig property\n     * @param {[string, number]} key, value pair\n     */\n    private getLabel([key, value]: [string, number]) {\n        //SPECIAL VALUES!!!\n        if (value === feesConfig.median) {\n            return this.formatLabel(\n                'fee_speed_' + key,\n                this.calculatedRecommendedFee,\n                this.networkMosaicName,\n                this.calculatedRecommendedFee > 0,\n            );\n        } else if (value === feesConfig.highest) {\n            return this.formatLabel('fee_speed_' + key, this.calculatedHighestFee, this.networkMosaicName, this.calculatedHighestFee > 0);\n        }\n        return this.formatLabel('fee_speed_' + key, value, this.networkMosaicName);\n    }\n\n    /**\n     * Returns the formatted label\n     * @param labelKey\n     * @param fee\n     * @param mosaic\n     * @param showAmount\n     */\n    private formatLabel(labelKey: string, fee: number, mosaic: string, showAmount: boolean = true): string {\n        let label = this.$t(labelKey).toString();\n        if (showAmount) {\n            label += ': ' + this.getRelative(fee) + ' ' + mosaic;\n        }\n        return label;\n    }\n\n    /**\n     * Value set by the parent component's v-model\n     * @type {number}\n     */\n    @Prop({\n        default: feesConfig.median,\n    })\n    value: number;\n\n    /// region computed properties getter/setter\n    /**\n     * Value set by the parent component\n     * @type {number}\n     */\n    get chosenMaxFee(): number {\n        return this.value || this.defaultFee;\n    }\n\n    /**\n     * Emit value change\n     */\n    set chosenMaxFee(newValue: number) {\n        this.$emit('input', newValue);\n    }\n    /// end-region computed properties getter/setter\n\n    /**\n     * Convert a relative amount to absolute using mosaicInfo\n     * @param {number} price\n     * @return {number}\n     */\n    public getRelative(amount: number): number {\n        if (this.networkCurrency === undefined) {\n            return amount;\n        }\n        return amount / Math.pow(10, this.networkCurrency.divisibility);\n    }\n\n    /**\n     * Returns the sorted fees (including the calculated fees)\n     */\n    public get feesCalculated(): { label: string; maxFee: number }[] {\n        return this.fees\n            .map((i) => {\n                if (i.maxFee === 1) {\n                    return {\n                        label: this.getLabel(['median', feesConfig.median]),\n                        maxFee: i.maxFee,\n                        calculatedFee: this.calculatedRecommendedFee,\n                    };\n                } else if (i.maxFee === 2) {\n                    return {\n                        label: this.getLabel(['highest', feesConfig.highest]),\n                        maxFee: i.maxFee,\n                        calculatedFee: this.calculatedHighestFee,\n                    };\n                } else {\n                    return i;\n                }\n            })\n            .sort((a, b) => a.calculatedFee - b.calculatedFee);\n    }\n}\n"],"sourceRoot":""}]}