{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/Pagination/PaginationTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/Pagination/PaginationTs.ts","mtime":1606213958957},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/Pagination/PaginationTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n@Component\nexport default class PaginationTs extends Vue {\n    @Prop({ default: 1 }) readonly current!: number;\n    @Prop({ default: 10 }) readonly pageSize!: number;\n    @Prop({ default: false }) readonly lastPage!: boolean;\n    @Prop({ default: 'ivu-page ivu-page-simple' }) readonly simpleWrapClasses!: string;\n    @Prop({ default: 'ivu-page-prev' }) readonly prevClasses!: string;\n    @Prop({ default: 'ivu-page-simple-pager' }) readonly simplePagerClasses!: string;\n    @Prop({ default: 'ivu-page-next' }) readonly nextClasses!: string;\n\n    public targetPage: number = 0;\n\n    public prefixCls = 'ivu-page';\n\n    public mounted() {\n        this.targetPage = this.current;\n    }\n\n    public get currentPage() {\n        return this.current;\n    }\n\n    /**\n     * Class names for previous page button\n     */\n    public get prevCls() {\n        return [\n            this.prevClasses,\n            {\n                [`${this.prefixCls}-disabled`]: this.currentPage <= 1,\n            },\n        ];\n    }\n\n    /**\n     * Class names for next page button\n     */\n    public get nextCls() {\n        return [\n            this.nextClasses,\n            {\n                [`${this.prefixCls}-disabled`]: this.lastPage,\n            },\n        ];\n    }\n\n    /**\n     * Hook called when next page button is clicked\n     */\n    public next() {\n        if (this.lastPage) {\n            return;\n        }\n        this.targetPage = this.currentPage + 1;\n        this.$emit('targetPage', this.targetPage);\n    }\n\n    /**\n     * Hook called when previous page button is clicked\n     */\n    public prev() {\n        if (this.currentPage <= 1) {\n            return;\n        }\n        this.targetPage = this.currentPage - 1;\n        this.$emit('targetPage', this.targetPage);\n    }\n\n    /**\n     * Hook called when key is up\n     * @param key event\n     */\n    public keyUp(e) {\n        const key = e.keyCode;\n        const val = parseInt(e.target.value);\n        if (isNaN(val)) {\n            return;\n        }\n        if (key === 40) {\n            this.prev();\n        } else if (key === 38) {\n            this.next();\n        } else if (key === 13) {\n            this.$emit('targetPage', val);\n        }\n    }\n\n    /**\n     * Hook called when key is down\n     * Prevents the disallowed chars to be typed in\n     * @param key event\n     */\n    public keyDown(e) {\n        const key = e.keyCode;\n        const condition = (key >= 48 && key <= 57) || (key >= 96 && key <= 105) || key === 8 || key === 37 || key === 39;\n        if (!condition) {\n            e.preventDefault();\n        }\n    }\n}\n"],"sourceRoot":""}]}