{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/views/modals/ModalImportQR/ModalImportQRTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/views/modals/ModalImportQR/ModalImportQRTs.ts","mtime":1606213958973},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/views/modals/ModalImportQR/ModalImportQRTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,QAAqC,wBAArC,C,CAEA;;AACA,OAAO,YAAP,MAAyB,mDAAzB,C,CAEA;;AACA,OAAO,cAAP,MAA2B,uDAA3B,C,CAEA;;AACA,OAAO,kBAAP,MAA+B,0DAA/B,C,CAEA;;AACA,OAAO,aAAP,MAA0B,qDAA1B;AAEA,SAAiB,UAAjB,QAAmC,mBAAnC;;AAKA,IAAa,eAAb;AAAA;;AAAA;;AAAA,6BAAA;AAAA;;AAAA;;;AAMI;;;;;AAIA,UAAA,UAAA,GAAqB,IAArB;AAEA;;;;;AAIA,UAAA,MAAA,GAAiB,IAAjB;AAEA,UAAA,WAAA,GAAc;AACV,MAAA,KAAK,EAAE,CAAC,gBAAD,EAAmB,oBAAnB,CADG;AAEV,MAAA,KAAK,EAAE,EAFG;AAGV,MAAA,cAAc,EAAE;AAHN,KAAd;AAlBJ;AAyDC;AAjCG;;;;;;AAxBJ;AAAA;;AAyCI;;;;AAzCJ,qCA6C4B,IA7C5B,EA6CgC;AAAA;;AACxB,WAAK,UAAL,GAAkB,IAAlB;AACA,MAAA,UAAU,CAAC;AAAA,eAAO,MAAI,CAAC,WAAL,CAAiB,cAAjB,GAAkC,CAAzC;AAAA,OAAD,EAA8C,IAA9C,CAAV,CAFwB,CAEuC;AAClE;AAED;;;;;AAlDJ;AAAA;AAAA,sCAsD6B,MAtD7B,EAsD2C;AACnC,WAAK,MAAL,GAAc,MAAd;AACH;AAxDL;AAAA;AAAA,wBA4BsB;AACd,aAAO,KAAK,OAAZ;AACH;AAED;;;AAhCJ;AAAA,sBAmCuB,GAnCvB,EAmC0B;AAClB,UAAI,CAAC,GAAL,EAAU;AACN,aAAK,KAAL,CAAW,OAAX;AACH;AACJ;AAvCL;;AAAA;AAAA,EAAqC,GAArC,CAAA;;AAC8B,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAqB,CAAA,E,yBAAA,E,SAAA,E,KAA0B,CAA1B,CAAA;;AAG1B,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS,CAAC,UAAU,CAAC,UAAZ,EAAwB,UAAU,CAAC,kBAAnC,EAAuD,UAAU,CAAC,YAAlE;AAAX,CAAD,CACL,CAAA,E,yBAAA,E,cAAA,E,KAAqC,CAArC,CAAA;;AAJS,eAAe,GAAA,UAAA,CAAA,CAH3B,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AAAE,IAAA,YAAY,EAAZ,YAAF;AAAgB,IAAA,cAAc,EAAd,cAAhB;AAAgC,IAAA,kBAAkB,EAAlB,kBAAhC;AAAoD,IAAA,aAAa,EAAb;AAApD;AADL,CAAD,CAGkB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\n\n//@ts-ignore\nimport UploadQRCode from '@/components/QRCode/UploadQRCode/UploadQRCode.vue';\n\n//@ts-ignore\nimport QRCodePassword from '@/components/QRCode/QRCodePassword/QRCodePassword.vue';\n\n//@ts-ignore\nimport ModalWizardDisplay from '@/views/modals/ModalWizardDisplay/ModalWizardDisplay.vue';\n\n// @ts-ignore\nimport QRCodeActions from '@/components/QRCode/QRCodeActions/QRCodeActions.vue';\n\nimport { QRCode, QRCodeType } from 'symbol-qr-library';\n\n@Component({\n    components: { UploadQRCode, QRCodePassword, ModalWizardDisplay, QRCodeActions },\n})\nexport class ModalImportQRTs extends Vue {\n    @Prop({ default: false }) readonly visible: boolean;\n\n    @Prop({ default: [QRCodeType.AddContact, QRCodeType.RequestTransaction, QRCodeType.ExportObject] })\n    readonly validQrTypes!: QRCodeType[];\n\n    /**\n     * json content of uploaded qrcode\n     * @type string\n     */\n    qrcodeJson: string = null;\n\n    /**\n     * generated QR Code from uploaded qrcode image(json)\n     * @type QRCode\n     */\n    qrCode: QRCode = null;\n\n    wizardSteps = {\n        items: ['upload_qr_code', 'preview_and_action'],\n        icons: [],\n        currentStepInx: 0,\n    };\n\n    /**\n     * Internal visibility state\n     * @type {boolean}\n     */\n    protected get show(): boolean {\n        return this.visible;\n    }\n\n    /**\n     * Emits close event\n     */\n    protected set show(val) {\n        if (!val) {\n            this.$emit('close');\n        }\n    }\n\n    /**\n     * QR Code upload & decode complete handler\n     * @param {string} json decoded from uploaded qrcode\n     */\n    public onUploadComplete(json) {\n        this.qrcodeJson = json;\n        setTimeout(() => (this.wizardSteps.currentStepInx = 1), 1200); // labor illusion\n    }\n\n    /**\n     * QRCode generation complete handler\n     * @param ${QRCode} qrCode generated\n     */\n    public onQrCodeGenerated(qrCode: QRCode) {\n        this.qrCode = qrCode;\n    }\n}\n"],"sourceRoot":""}]}