{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/core/database/backends/VersionedObjectStorage.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/core/database/backends/VersionedObjectStorage.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCmltcG9ydCB7IFZlcnNpb25lZE1vZGVsIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL2VudGl0aWVzL1ZlcnNpb25lZE1vZGVsJzsKaW1wb3J0IHsgU2ltcGxlT2JqZWN0U3RvcmFnZSB9IGZyb20gJ0AvY29yZS9kYXRhYmFzZS9iYWNrZW5kcy9TaW1wbGVPYmplY3RTdG9yYWdlJzsKLyoqCiAqIEEgc3RvcmFnZSB0aGF0IHdyYXBzIHRoZSBzdG9yZWQgbW9kZWwgd2l0aCBhIHt2ZXJzaW9uOiBuLCBkYXRhOlR9IG9iamVjdCBhbmQgaXQgaGFuZGxlcyB0aGUgbWlncmF0aW9uIGZyb20gb2xkCiAqIHZlcnNpb24gdG8gbmV3IHZlcnNpb25zLgogKgogKi8KCmV4cG9ydCB2YXIgVmVyc2lvbmVkT2JqZWN0U3RvcmFnZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVmVyc2lvbmVkT2JqZWN0U3RvcmFnZShzdG9yYWdlS2V5KSB7CiAgICB2YXIgbWlncmF0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogW107CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFZlcnNpb25lZE9iamVjdFN0b3JhZ2UpOwoKICAgIHRoaXMuZGVsZWdhdGUgPSBuZXcgU2ltcGxlT2JqZWN0U3RvcmFnZShzdG9yYWdlS2V5KTsKICAgIHRoaXMuY3VycmVudFZlcnNpb24gPSBtaWdyYXRpb25zLmxlbmd0aCArIDE7CiAgICB2YXIgdmVyc2lvbmVkID0gdGhpcy5kZWxlZ2F0ZS5nZXQoKTsKCiAgICBpZiAoIXZlcnNpb25lZCB8fCB2ZXJzaW9uZWQudmVyc2lvbiA9PSB0aGlzLmN1cnJlbnRWZXJzaW9uKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAodmVyc2lvbmVkLnZlcnNpb24gPiB0aGlzLmN1cnJlbnRWZXJzaW9uKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiQ3VycmVudCBkYXRhIHZlcnNpb24gaXMgIi5jb25jYXQodmVyc2lvbmVkLnZlcnNpb24sICIgYnV0IGhpZ2hlciB2ZXJzaW9uIGlzICIpLmNvbmNhdCh0aGlzLmN1cnJlbnRWZXJzaW9uKSk7CiAgICB9CgogICAgdmFyIHZhbHVlID0gbWlncmF0aW9ucy5zbGljZSh2ZXJzaW9uZWQudmVyc2lvbiAtIDEpLnJlZHVjZShmdW5jdGlvbiAodG9NaWdyYXRlRGF0YSwgbWlncmF0aW9uKSB7CiAgICAgIGlmICh0b01pZ3JhdGVEYXRhID09PSB1bmRlZmluZWQpIHsKICAgICAgICBjb25zb2xlLmxvZygiZGF0YSB0byBtaWdyYXRlIGlzIHVuZGVmaW5lZCwgaWdub3JpbmcgbWlncmF0aW9uICIuY29uY2F0KG1pZ3JhdGlvbi5kZXNjcmlwdGlvbikpOwogICAgICAgIHJldHVybiB1bmRlZmluZWQ7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKCJBcHBseWluZyBtaWdyYXRpb24gIi5jb25jYXQobWlncmF0aW9uLmRlc2NyaXB0aW9uKSk7CiAgICAgIHJldHVybiBtaWdyYXRpb24ubWlncmF0ZSh0b01pZ3JhdGVEYXRhKTsKICAgIH0sIHZlcnNpb25lZC5kYXRhKTsKCiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgICB0aGlzLnJlbW92ZSgpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5zZXQodmFsdWUpOwogICAgfQogIH0KCiAgX2NyZWF0ZUNsYXNzKFZlcnNpb25lZE9iamVjdFN0b3JhZ2UsIFt7CiAgICBrZXk6ICJnZXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIHZlcnNpb25lZCA9IHRoaXMuZGVsZWdhdGUuZ2V0KCk7CiAgICAgIHJldHVybiB2ZXJzaW9uZWQgJiYgdmVyc2lvbmVkLmRhdGEgfHwgdW5kZWZpbmVkOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbW92ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlKCkgewogICAgICB0aGlzLmRlbGVnYXRlLnJlbW92ZSgpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgIHRoaXMuZGVsZWdhdGUuc2V0KG5ldyBWZXJzaW9uZWRNb2RlbCh0aGlzLmN1cnJlbnRWZXJzaW9uLCB2YWx1ZSkpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFZlcnNpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFZlcnNpb24oKSB7CiAgICAgIHZhciB2ZXJzaW9uZWQgPSB0aGlzLmRlbGVnYXRlLmdldCgpOwogICAgICByZXR1cm4gdmVyc2lvbmVkICYmIHZlcnNpb25lZC52ZXJzaW9uIHx8IHVuZGVmaW5lZDsKICAgIH0KICB9XSk7CgogIHJldHVybiBWZXJzaW9uZWRPYmplY3RTdG9yYWdlOwp9KCk7"},{"version":3,"sources":["/home/hero/lared-wallet/src/core/database/backends/VersionedObjectStorage.ts"],"names":[],"mappings":";;;;;;AAgBA,SAAS,cAAT,QAA+B,yCAA/B;AACA,SAAS,mBAAT,QAAoC,8CAApC;AAWA;;;;;;AAKA,WAAa,sBAAb;AAKI,kCAAY,UAAZ,EAA4D;AAAA,QAA5B,UAA4B,uEAAF,EAAE;;AAAA;;AACxD,SAAK,QAAL,GAAgB,IAAI,mBAAJ,CAA2C,UAA3C,CAAhB;AACA,SAAK,cAAL,GAAsB,UAAU,CAAC,MAAX,GAAoB,CAA1C;AACA,QAAM,SAAS,GAAG,KAAK,QAAL,CAAc,GAAd,EAAlB;;AACA,QAAI,CAAC,SAAD,IAAc,SAAS,CAAC,OAAV,IAAqB,KAAK,cAA5C,EAA4D;AACxD;AACH;;AACD,QAAI,SAAS,CAAC,OAAV,GAAoB,KAAK,cAA7B,EAA6C;AACzC,YAAM,IAAI,KAAJ,mCAAqC,SAAS,CAAC,OAA/C,oCAAgF,KAAK,cAArF,EAAN;AACH;;AACD,QAAM,KAAK,GAAG,UAAU,CAAC,KAAX,CAAiB,SAAS,CAAC,OAAV,GAAoB,CAArC,EAAwC,MAAxC,CAA+C,UAAC,aAAD,EAAgB,SAAhB,EAA6B;AACtF,UAAI,aAAa,KAAK,SAAtB,EAAiC;AAC7B,QAAA,OAAO,CAAC,GAAR,4DAAgE,SAAS,CAAC,WAA1E;AACA,eAAO,SAAP;AACH;;AACD,MAAA,OAAO,CAAC,GAAR,8BAAkC,SAAS,CAAC,WAA5C;AACA,aAAO,SAAS,CAAC,OAAV,CAAkB,aAAlB,CAAP;AACH,KAPa,EAOX,SAAS,CAAC,IAPC,CAAd;;AAQA,QAAI,KAAK,KAAK,SAAd,EAAyB;AACrB,WAAK,MAAL;AACH,KAFD,MAEO;AACH,WAAK,GAAL,CAAS,KAAT;AACH;AACJ;;AA5BL;AAAA;AAAA,0BA8BO;AACC,UAAM,SAAS,GAAG,KAAK,QAAL,CAAc,GAAd,EAAlB;AACA,aAAQ,SAAS,IAAI,SAAS,CAAC,IAAxB,IAAiC,SAAxC;AACH;AAjCL;AAAA;AAAA,6BAmCU;AACF,WAAK,QAAL,CAAc,MAAd;AACH;AArCL;AAAA;AAAA,wBAuCQ,KAvCR,EAuCgB;AACR,WAAK,QAAL,CAAc,GAAd,CAAkB,IAAI,cAAJ,CAAsB,KAAK,cAA3B,EAA2C,KAA3C,CAAlB;AACH;AAzCL;AAAA;AAAA,iCA2Cc;AACN,UAAM,SAAS,GAAG,KAAK,QAAL,CAAc,GAAd,EAAlB;AACA,aAAQ,SAAS,IAAI,SAAS,CAAC,OAAxB,IAAoC,SAA3C;AACH;AA9CL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { IStorage } from '@/core/database/backends/IStorage';\nimport { VersionedModel } from '@/core/database/entities/VersionedModel';\nimport { SimpleObjectStorage } from '@/core/database/backends/SimpleObjectStorage';\n\n/**\n * The operation to migrate the data.\n */\nexport interface Migration {\n    readonly description: string;\n\n    migrate(from: any): any;\n}\n\n/**\n * A storage that wraps the stored model with a {version: n, data:T} object and it handles the migration from old\n * version to new versions.\n *\n */\nexport class VersionedObjectStorage<E> implements IStorage<E> {\n    private readonly delegate: IStorage<VersionedModel<E>>;\n\n    private readonly currentVersion: number;\n\n    constructor(storageKey: string, migrations: Migration[] = []) {\n        this.delegate = new SimpleObjectStorage<VersionedModel<E>>(storageKey);\n        this.currentVersion = migrations.length + 1;\n        const versioned = this.delegate.get();\n        if (!versioned || versioned.version == this.currentVersion) {\n            return;\n        }\n        if (versioned.version > this.currentVersion) {\n            throw new Error(`Current data version is ${versioned.version} but higher version is ${this.currentVersion}`);\n        }\n        const value = migrations.slice(versioned.version - 1).reduce((toMigrateData, migration) => {\n            if (toMigrateData === undefined) {\n                console.log(`data to migrate is undefined, ignoring migration ${migration.description}`);\n                return undefined;\n            }\n            console.log(`Applying migration ${migration.description}`);\n            return migration.migrate(toMigrateData);\n        }, versioned.data);\n        if (value === undefined) {\n            this.remove();\n        } else {\n            this.set(value);\n        }\n    }\n\n    get(): E | undefined {\n        const versioned = this.delegate.get();\n        return (versioned && versioned.data) || undefined;\n    }\n\n    remove(): void {\n        this.delegate.remove();\n    }\n\n    set(value: E): void {\n        this.delegate.set(new VersionedModel<E>(this.currentVersion, value));\n    }\n\n    getVersion(): E | number {\n        const versioned = this.delegate.get();\n        return (versioned && versioned.version) || undefined;\n    }\n}\n"],"sourceRoot":""}]}