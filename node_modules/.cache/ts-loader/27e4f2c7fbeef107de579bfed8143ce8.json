{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-2!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/symbol-address-book/AddressBook.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/symbol-address-book/AddressBook.ts","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/symbol-address-book/AddressBook.ts"],"names":[],"mappings":"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","sourcesContent":["import {IContact} from \"./IContact\";\n\nexport class AddressBook {\n    /** Contacts index */\n    contacts: {[id: string]: IContact}\n    /** Address book version */\n    static version = 1;\n\n    constructor(contacts: IContact[] = []) {\n        this.contacts = contacts.reduce( (acc, contact) => {\n            acc[contact.id] = contact;\n            return acc;\n        }, {});\n    }\n\n    /**\n     * Get all contacts by a given address\n     */\n    getAllContacts() {\n        return Object.values(this.contacts);\n    }\n\n    /**\n     * Get all contacts by it's id\n     * @param id\n     */\n    getContactById(id: string): IContact  | undefined {\n        return this.contacts[id];\n    }\n\n    /**\n     * Get all contacts by a given address\n     * @param address\n     */\n    getContactByAddress(address: string): IContact  | undefined {\n        return Object.values(this.contacts).find( c => c.address === address || uglifyAddress(c.address) === uglifyAddress(address));\n    }\n\n    /**\n     * Add new contact\n     * @param contact\n     */\n    addContact(contact: IContact): IContact {\n        contact.id = uuidv4();\n        this.contacts[contact.id] = contact;\n        return contact;\n    }\n\n    /**\n     * Remove contact by its id\n     * @param id\n     */\n    removeContact(id: string): IContact[] {\n        delete this.contacts[id];\n        return Object.values(this.contacts);\n    }\n\n    /**\n     * Update a contact by id\n     * @param id\n     * @param newContact\n     */\n    updateContact(id: string, newContact: IContact): IContact {\n        this.contacts[id] = newContact;\n        return newContact;\n    }\n\n    /**\n     * Export AddressBook to JSON format\n     * @param pretty\n     */\n    toJSON(pretty: boolean = true): string {\n        return JSON.stringify({\n            version: AddressBook.version,\n            contacts: Object.values(this.contacts)\n        }, null, pretty ? '\\t' : '');\n    }\n\n    /**\n     * Import AddressBook from JSON format\n     * @param input\n     */\n    static fromJSON(input: string | Object): AddressBook {\n        let obj: any;\n        if (typeof input === 'string') {\n            try {\n                obj = JSON.parse(input);\n            } catch (e) {\n                throw new Error(\"Error creating AddressBook: invalid JSON string\");\n            }\n        } else {\n            obj = input;\n        }\n        if (!obj.hasOwnProperty('version') || obj.version !== AddressBook.version) {\n            throw new Error(\"Error creating AddressBook: versions don't match\");\n        }\n        if (!obj.hasOwnProperty('contacts') || !Array.isArray(obj.contacts)) {\n            throw new Error(\"Error creating AddressBook: property contacts not found\");\n        }\n        const addressBook = new AddressBook();\n        for (let contact of obj.contacts) {\n            if (!contact.hasOwnProperty('id') || !contact.hasOwnProperty('name') || !contact.hasOwnProperty('address')) {\n                throw new Error(\"Error creating AddressBook: contact has an invalid format\");\n            }\n            addressBook.addContact(contact);\n        }\n        return addressBook;\n    }\n}\n\n/**\n * Util function to uglify an address\n * @param address\n */\nconst uglifyAddress = (address: string) => {\n    return address.replace(/-/g, '');\n}\n\nconst uuidv4 = (): string => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n"],"sourceRoot":""}]}