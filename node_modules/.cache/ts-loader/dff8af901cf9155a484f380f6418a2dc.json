{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionRow/TransactionRowTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionRow/TransactionRowTs.ts","mtime":1611927203316},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionRow/TransactionRowTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { MosaicId, NamespaceId, Transaction, TransactionType, TransferTransaction } from 'symbol-sdk';\n// internal dependencies\nimport { Formatters } from '@/core/utils/Formatters';\nimport { TimeHelpers } from '@/core/utils/TimeHelpers';\n// child components\n// @ts-ignore\nimport MosaicAmountDisplay from '@/components/MosaicAmountDisplay/MosaicAmountDisplay.vue';\n// @ts-ignore\nimport ActionDisplay from '@/components/ActionDisplay/ActionDisplay.vue';\n// resources\nimport { dashboardImages, officialIcons, transactionTypeToIcon } from '@/views/resources/Images';\nimport { TransactionViewFactory } from '@/core/transactions/TransactionViewFactory';\nimport { TransactionView } from '@/core/transactions/TransactionView';\nimport { TransactionStatus } from '@/core/transactions/TransactionStatus';\nimport { NetworkConfigurationModel } from '../../../core/database/entities/NetworkConfigurationModel';\nimport { DateTimeFormatter } from '@js-joda/core';\n\n@Component({\n    components: {\n        ActionDisplay,\n        MosaicAmountDisplay,\n    },\n    computed: mapGetters({\n        networkMosaic: 'mosaic/networkMosaic',\n        explorerBaseUrl: 'app/explorerUrl',\n        networkConfiguration: 'network/networkConfiguration',\n    }),\n})\nexport class TransactionRowTs extends Vue {\n    @Prop({ default: [] })\n    public transaction: Transaction;\n\n    protected networkConfiguration: NetworkConfigurationModel;\n\n    /**\n     * Explorer base path\n     */\n    protected explorerBaseUrl: string;\n\n    /**\n     * Network mosaic id\n     * @private\n     */\n    protected networkMosaic: MosaicId;\n\n    /**\n     * Transaction type from SDK\n     */\n    private transactionType = TransactionType;\n\n    /**\n     * Formatters\n     */\n    public formatters: Formatters = Formatters;\n\n    /**\n     * Time helpers\n     */\n    protected timeHelpers: TimeHelpers = TimeHelpers;\n\n    /// region computed properties getter/setter\n    public get view(): TransactionView<Transaction> {\n        return TransactionViewFactory.getView(this.$store, this.transaction);\n    }\n\n    /// end-region computed properties getter/setter\n\n    /**\n     * Get icon per-transaction\n     * @return an icon.\n     */\n    public getIcon() {\n        if (this.transaction.isConfirmed()) {\n            // - read per-transaction-type details@\n            const view = this.view;\n\n            // - transfers have specific incoming/outgoing icons\n            if (view.transaction.type === this.transactionType.TRANSFER) {\n                return view.isIncoming ? officialIcons.incoming : officialIcons.outgoing;\n            }\n\n            // - otherwise use per-type icon\n            return transactionTypeToIcon[view.transaction.type];\n        } else {\n            return this.getTransactionStatusIcon();\n        }\n    }\n    public getTransactionStatusIcon(): string {\n        return dashboardImages.dashboardUnconfirmed;\n    }\n    /**\n     * Returns true if \\a transaction is an incoming transaction\n     */\n    public isIncomingTransaction(): boolean {\n        return this.view.isIncoming;\n    }\n\n    /**\n     * Returns the amount to be shown. The first mosaic or the paid fee.\n     */\n    public getAmount(): number {\n        if (this.transaction.type === TransactionType.TRANSFER) {\n            // We may prefer XYM over other mosaic if XYM is 2nd+\n            const transferTransaction = this.transaction as TransferTransaction;\n            return (transferTransaction.mosaics.length && transferTransaction.mosaics[0].amount.compact()) || 0;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the color of the balance\n     */\n    public getAmountColor(): string {\n        // https://github.com/nemfoundation/nem2-desktop-account/issues/879\n        if (this.transaction.type === TransactionType.TRANSFER) {\n            return this.isIncomingTransaction() ? 'green' : 'red';\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the mosaic id of the balance or undefined for the network.\n     */\n    public getAmountMosaicId(): MosaicId | NamespaceId | undefined {\n        if (this.transaction.type === TransactionType.TRANSFER) {\n            // We may prefer XYM over other mosaic if XYM is 2nd+\n            const transferTransaction = this.transaction as TransferTransaction;\n            return (transferTransaction.mosaics.length && transferTransaction.mosaics[0].id) || undefined;\n        }\n        return undefined;\n    }\n\n    /**\n     * Should he ticker be shown in the amount column\n     */\n    public isAmountShowTicker(): boolean {\n        // if (this.transaction.type === TransactionType.TRANSFER) {\n        //   const transferTransaction = this.transaction as TransferTransaction\n        //   return !!transferTransaction.mosaics.length\n        // }\n        // return true\n        return false;\n    }\n\n    /**\n     * Returns the transaction height or number of confirmations\n     */\n    public getHeight(): string {\n        const transactionStatus = TransactionView.getTransactionStatus(this.transaction);\n        if (transactionStatus == TransactionStatus.confirmed) {\n            return this.view.info?.height.compact().toLocaleString();\n        } else {\n            return this.$t(`transaction_status_${transactionStatus}`).toString();\n        }\n    }\n\n    /**\n     * Returns the explorer url\n     */\n    public get explorerUrl() {\n        return this.explorerBaseUrl.replace(/\\/+$/, '') + '/transactions/' + this.transaction.transactionInfo.hash;\n    }\n\n    public get deadline() {\n        return this.transaction.deadline\n            .toLocalDateTime(this.networkConfiguration.epochAdjustment)\n            .format(DateTimeFormatter.ofPattern('yyyy-MM-dd HH:mm:ss'));\n    }\n    public get date() {\n        return this.transaction.deadline\n            .toLocalDateTime(this.networkConfiguration.epochAdjustment)\n            .minusHours(2)\n            .format(DateTimeFormatter.ofPattern('yyyy-MM-dd HH:mm:ss'));\n    }\n}\n"],"sourceRoot":""}]}