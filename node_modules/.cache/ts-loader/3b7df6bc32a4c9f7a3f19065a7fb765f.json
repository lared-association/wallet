{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/UploadAddressBook/UploadAddressBookTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/UploadAddressBook/UploadAddressBookTs.ts","mtime":1606213958961},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/hero/lared-wallet/src/components/UploadAddressBook/UploadAddressBookTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAeA,SAAS,GAAT,EAAc,SAAd,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,WAAT,QAA4B,qBAA5B;;AAKA,IAAqB,mBAArB;AAAA;;AAAA;;AAAA,iCAAA;AAAA;;AAAA;;;AAUI;;;;AAGA,UAAA,WAAA,GAA2B,IAA3B;AAEA;;;;AAGA,UAAA,SAAA,GAAqB,KAArB;AAEA;;;;AAGA,UAAA,QAAA,GAAW,EAAX;AAvBJ;AAsDC;AA7BG;;;;;;AAzBJ;AAAA;AAAA,mCA6B0B,IA7B1B,EA6B8B;AAAA;;AACtB,WAAK,QAAL,GAAgB,IAAI,CAAC,IAArB;AACA,UAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,MAAA,UAAU,CAAC,UAAX,CAAsB,IAAtB;;AACA,MAAA,UAAU,CAAC,MAAX,GAAoB,UAAC,KAAD,EAAU;AAC1B;AACA,YAAM,QAAQ,GAAG,KAAK,CAAC,MAAN,CAAa,MAA9B;;AACA,YAAI;AACA,UAAA,MAAI,CAAC,WAAL,GAAmB,WAAW,CAAC,QAAZ,CAAqB,QAArB,CAAnB;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,UAAA,MAAI,CAAC,SAAL,GAAiB,IAAjB;AACH;AACJ,OARD;;AAUA,aAAO,KAAP,CAdsB,CAcR;AACjB;AAED;;;;AA9CJ;AAAA;AAAA,wCAiDkC;;;;;;AAC1B,qBAAK,MAAL,CAAY,MAAZ,CAAmB,4BAAnB,EAAiD,KAAK,WAAtD;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,+BAArB,CAAN;;;AACA,qBAAK,KAAL,CAAW,gBAAX;;;;;;;;;AACH;AArDL;;AAAA;AAAA,EAAiD,GAAjD,CAAA;;AAEI,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,6BAAA,E,eAAA,E,KAA8B,CAA9B,CAAA;;AAGA,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,6BAAA,E,iBAAA,E,KAAkC,CAAlC,CAAA;;AAGA,UAAA,CAAA,CADC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CACL,CAAA,E,6BAAA,E,mBAAA,E,KAAoC,CAApC,CAAA;;AARiB,mBAAmB,GAAA,UAAA,CAAA,CAHvC,SAAS,CAAC;AACP,EAAA,UAAU,EAAE;AADL,CAAD,CAG8B,CAAA,EAAnB,mBAAmB,CAAnB;eAAA,mB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Vue, Component, Prop } from 'vue-property-decorator';\nimport { AddressBook } from 'symbol-address-book';\n\n@Component({\n    components: {},\n})\nexport default class UploadAddressBookTs extends Vue {\n    @Prop({ default: true })\n    public uploadEnabled: boolean;\n\n    @Prop({ default: true })\n    readonly showExplanation: boolean;\n\n    @Prop({ default: 'upload_file_message' })\n    readonly uploadFileMessage!: string;\n\n    /**\n     * Preview uploaded addressBook\n     */\n    addressBook: AddressBook = null;\n\n    /**\n     * Error uploading\n     */\n    showError: boolean = false;\n\n    /**\n     * Uploaded file name\n     */\n    fileName = '';\n\n    /**\n     * Hook for handling file before upload completes\n     * @param file uploaded\n     */\n    public onBeforeUpload(file) {\n        this.fileName = file.name;\n        const fileReader = new FileReader();\n        fileReader.readAsText(file);\n        fileReader.onload = (event) => {\n            // called once readAsDataURL is completed\n            const jsonData = event.target.result as string;\n            try {\n                this.addressBook = AddressBook.fromJSON(jsonData);\n            } catch (e) {\n                this.showError = true;\n            }\n        };\n\n        return false; //return false now since we have the file passed to qrcodeCapture component\n    }\n\n    /**\n     * Import address book handler\n     */\n    public async importAddressBook() {\n        this.$store.commit('addressBook/setAddressBook', this.addressBook);\n        await this.$store.dispatch('addressBook/SAVE_ADDRESS_BOOK');\n        this.$emit('uploadComplete');\n    }\n}\n"],"sourceRoot":""}]}