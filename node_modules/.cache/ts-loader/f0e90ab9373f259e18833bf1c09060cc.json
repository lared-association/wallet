{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionListTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionListTs.ts","mtime":1611927203299},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/components/TransactionList/TransactionListTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { mapGetters } from 'vuex';\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator';\nimport { AggregateTransaction, Convert, MosaicId, Transaction } from 'symbol-sdk';\n// internal dependencies\nimport { AccountModel } from '@/core/database/entities/AccountModel';\n// child components\n// @ts-ignore\nimport ModalTransactionCosignature from '@/views/modals/ModalTransactionCosignature/ModalTransactionCosignature.vue';\n// @ts-ignore\nimport ModalTransactionDetails from '@/views/modals/ModalTransactionDetails/ModalTransactionDetails.vue';\n// @ts-ignore\nimport PageTitle from '@/components/PageTitle/PageTitle.vue';\n// @ts-ignore\nimport TransactionListFilters from '@/components/TransactionList/TransactionListFilters/TransactionListFilters.vue';\n// @ts-ignore\nimport TransactionTable from '@/components/TransactionList/TransactionTable/TransactionTable.vue';\n// @ts-ignore\nimport ModalTransactionExport from '@/views/modals/ModalTransactionExport/ModalTransactionExport.vue';\nimport { PageInfo } from '@/store/Transaction';\n// @ts-ignore\nimport Pagination from '@/components/Pagination/Pagination.vue';\n\n@Component({\n    components: {\n        ModalTransactionCosignature,\n        ModalTransactionDetails,\n        PageTitle,\n        TransactionListFilters,\n        TransactionTable,\n        ModalTransactionExport,\n        Pagination,\n    },\n    computed: {\n        ...mapGetters({\n            currentAccount: 'account/currentAccount',\n            networkMosaic: 'mosaic/networkMosaic',\n            filteredTransactions: 'transaction/filteredTransactions',\n            generationHash: 'network/generationHash',\n            currentConfirmedPage: 'transaction/currentConfirmedPage',\n        }),\n    },\n})\nexport class TransactionListTs extends Vue {\n    @Prop({\n        default: '',\n    })\n    address: string;\n\n    /**\n     * Number of txs visible in each page\n     */\n    @Prop({\n        default: 10,\n    })\n    pageSize: number;\n\n    @Prop({\n        default: 'pagination',\n    })\n    paginationType: 'pagination' | 'scroll';\n\n    /**\n     * Number of txs to be loaded from repository in each request\n     */\n    @Prop({\n        default: 20,\n    })\n    requestPageSize: number;\n\n    /**\n     * Currently active account\n     * @see {Store.Account}\n     * @var {AccountModel}\n     */\n    public currentAccount: AccountModel;\n\n    /**\n     * Network mosaic id\n     * @see {Store.Mosaic}\n     * @var {MosaicId}\n     */\n    public networkMosaic: MosaicId;\n\n    /**\n     * List of filtered transactions (per-request)\n     */\n    public filteredTransactions: Transaction[];\n\n    /**\n     * The current page number\n     * @var {number}\n     */\n    public currentPage: number = 1;\n\n    /**\n     * Active transaction (in-modal)\n     * @var {Transaction}\n     */\n    public activeTransaction: Transaction = null;\n\n    /**\n     * Active bonded transaction (in-modal)\n     * @var {AggregateTransaction}\n     */\n    public activePartialTransaction: AggregateTransaction = null;\n\n    /**\n     * Whether the detail modal box is open\n     * @var {boolean}\n     */\n    public isDisplayingDetails: boolean = false;\n\n    /**\n     * Whether the cosignature modal box is open\n     * @var {boolean}\n     */\n    public isAwaitingCosignature: boolean = false;\n\n    /**\n     * Current generationHash\n     * @see {Store.Network}\n     * @var {string}\n     */\n    public generationHash: string;\n\n    /**\n     * Whether currently viewing export\n     * @var {boolean}\n     */\n    public isViewingExportModal: boolean = false;\n\n    /**\n     * Current confirmed page info\n     * @see {Transaction.PageInfo}\n     * @var {PageInfo}\n     */\n    public currentConfirmedPage: PageInfo;\n\n    public getEmptyMessage() {\n        return 'no_data_transactions';\n    }\n\n    /// region computed properties getter/setter\n    public get countPages(): number {\n        if (!this.filteredTransactions) {\n            return 0;\n        }\n        return Math.ceil([...this.filteredTransactions].length / this.pageSize);\n    }\n\n    public get totalCountItems(): number {\n        return this.filteredTransactions.length;\n    }\n\n    /**\n     * Returns the transactions of the current page\n     * from the getter that matches the provided tab name.\n     * Undefined means the list is being loaded.\n     * @returns {Transaction[]}\n     */\n    public getCurrentPageTransactions(): Transaction[] {\n        // get current tab transactions\n        const transactions = this.filteredTransactions;\n        // get pagination params\n        const start = (this.currentPage - 1) * this.pageSize;\n        const end = this.currentPage * this.pageSize;\n        // slice and return\n        return [...transactions].slice(start, end);\n    }\n\n    /**\n     * Returns the transctions\n     * If the pagination type is (infinite) scroll then returns all\n     * If the pagination type is pagination(paginated) then returns the current page txs\n     *\n     * @return {Transaction[]}\n     */\n    public getTransactions(): Transaction[] {\n        return this.paginationType === 'pagination' ? this.getCurrentPageTransactions() : this.filteredTransactions;\n    }\n\n    public get hasDetailModal(): boolean {\n        return this.isDisplayingDetails;\n    }\n\n    public set hasDetailModal(f: boolean) {\n        this.isDisplayingDetails = f;\n    }\n\n    public get hasCosignatureModal(): boolean {\n        return this.isAwaitingCosignature;\n    }\n\n    public set hasCosignatureModal(f: boolean) {\n        this.isAwaitingCosignature = f;\n    }\n\n    public get aggregateTransactionHash() {\n        if (!this.activePartialTransaction.transactionInfo) {\n            return Transaction.createTransactionHash(\n                this.activePartialTransaction.serialize(),\n                Array.from(Convert.hexToUint8(this.generationHash)),\n            );\n        }\n        return this.activePartialTransaction.transactionInfo.hash;\n    }\n\n    /// end-region computed properties getter/setter\n\n    created() {\n        if (this.$route.params.transaction) {\n            // @ts-ignore\n            this.activePartialTransaction = this.$route.params.transaction as AggregateTransaction;\n            this.hasCosignatureModal = true;\n        }\n    }\n\n    /**\n     * Refresh transaction list\n     * @return {void}\n     */\n    /* public async getTransactionListByOption(filter: TransactionGroupState) {\n    this.selectedOption = filter\n  } */\n\n    /**\n     * Hook called when a transaction is clicked\n     * @param {Transaction} transaction\n     */\n    public onClickTransaction(transaction: Transaction | AggregateTransaction) {\n        if (transaction.hasMissingSignatures()) {\n            this.activePartialTransaction = transaction as AggregateTransaction;\n            this.hasCosignatureModal = true;\n        } else {\n            this.activeTransaction = transaction;\n            this.hasDetailModal = true;\n        }\n    }\n\n    public onCloseDetailModal() {\n        this.hasDetailModal = false;\n        this.activeTransaction = undefined;\n    }\n\n    public onCloseCosignatureModal() {\n        this.hasCosignatureModal = false;\n        this.activePartialTransaction = undefined;\n        this.$router.push({ name: 'dashboard.index' });\n    }\n\n    /**\n     * Hook called at each page change\n     */\n    public onPageChange(page: number): void {\n        if (page === this.countPages) {\n            this.loadMore();\n        } else if (page > this.countPages) {\n            page = this.countPages;\n        } else if (page < 1) {\n            page = 1;\n        }\n        this.currentPage = page;\n    }\n\n    /**\n     * Loads next page of transactions from repository\n     */\n    public loadMore() {\n        if (!this.currentConfirmedPage.isLastPage) {\n            this.$store.dispatch('transaction/LOAD_TRANSACTIONS', {\n                pageNumber: ++this.currentConfirmedPage.pageNumber,\n                pageSize: this.requestPageSize,\n            });\n        }\n    }\n\n    /**\n     * Whether currently viewed page is the last page retrieved from repository\n     */\n    public get isLastPage(): boolean {\n        return this.currentConfirmedPage.isLastPage && this.currentPage * this.pageSize >= this.totalCountItems;\n    }\n\n    /**\n     * Watching if refreshed triggered\n     * @param newVal\n     */\n    @Watch('currentConfirmedPage')\n    public watchRefresh(newVal: PageInfo) {\n        // if page refresh is triggered then reset page info\n        if (newVal.pageNumber === 1) {\n            this.currentPage = 1;\n        }\n    }\n\n    public get hasTransactionExportModal(): boolean {\n        return this.isViewingExportModal;\n    }\n\n    public set hasTransactionExportModal(f: boolean) {\n        this.isViewingExportModal = f;\n    }\n    public downloadTransaction() {\n        this.hasTransactionExportModal = true;\n    }\n}\n"],"sourceRoot":""}]}