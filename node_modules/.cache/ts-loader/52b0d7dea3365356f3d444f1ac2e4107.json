{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransactionTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransactionTs.ts","mtime":1611927204769},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/forms/FormMosaicSupplyChangeTransaction/FormMosaicSupplyChangeTransactionTs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n// external dependencies\nimport { MosaicId, MosaicSupplyChangeAction, MosaicSupplyChangeTransaction, Transaction, UInt64 } from 'symbol-sdk';\nimport { Component, Prop } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\n\nimport { FormTransactionBase } from '@/views/forms/FormTransactionBase/FormTransactionBase';\nimport { ValidationRuleset } from '@/core/validation/ValidationRuleset';\n// child components\nimport { ValidationObserver, ValidationProvider } from 'vee-validate';\n// @ts-ignore\nimport FormWrapper from '@/components/FormWrapper/FormWrapper.vue';\n// @ts-ignore\nimport SignerSelector from '@/components/SignerSelector/SignerSelector.vue';\n// @ts-ignore\nimport SupplyInput from '@/components/SupplyInput/SupplyInput.vue';\n// @ts-ignore\nimport DivisibilityInput from '@/components/DivisibilityInput/DivisibilityInput.vue';\n// @ts-ignore\nimport DurationInput from '@/components/DurationInput/DurationInput.vue';\n// @ts-ignore\nimport ModalTransactionConfirmation from '@/views/modals/ModalTransactionConfirmation/ModalTransactionConfirmation.vue';\n// @ts-ignore\nimport FormRow from '@/components/FormRow/FormRow.vue';\n// @ts-ignore\nimport ErrorTooltip from '@/components/ErrorTooltip/ErrorTooltip.vue';\n// @ts-ignore\nimport MaxFeeAndSubmit from '@/components/MaxFeeAndSubmit/MaxFeeAndSubmit.vue';\nimport { MosaicModel } from '@/core/database/entities/MosaicModel';\n\n@Component({\n    components: {\n        ValidationObserver,\n        ValidationProvider,\n        FormWrapper,\n        SignerSelector,\n        SupplyInput,\n        DivisibilityInput,\n        DurationInput,\n        ModalTransactionConfirmation,\n        FormRow,\n        ErrorTooltip,\n        MaxFeeAndSubmit,\n    },\n    computed: { ...mapGetters({ mosaics: 'mosaic/mosaics' }) },\n})\nexport class FormMosaicSupplyChangeTransactionTs extends FormTransactionBase {\n    /**\n     * Mosaic hex Id\n     * @type {string}\n     */\n    @Prop({ default: null, required: true }) mosaicHexId: string;\n\n    /**\n     * Validation rules\n     * @var {ValidationRuleset}\n     */\n    protected validationRules = ValidationRuleset;\n\n    /**\n     * Mosaic supply change enum\n     * @protected\n     */\n    protected MosaicSupplyChangeAction = MosaicSupplyChangeAction;\n\n    /**\n     * Form items\n     * @protected\n     * @var {Record<string, any>}\n     */\n    protected formItems = {\n        mosaicHexId: null,\n        action: null,\n        delta: null,\n        maxFee: this.defaultFee,\n    };\n\n    /**\n     * Mosaics owned by the current account\n     * @protected\n     */\n    private mosaics: MosaicModel[];\n\n    /**\n     * Current mosaic info\n     * @readonly\n     * @protected\n     */\n    protected get currentMosaicInfo(): MosaicModel {\n        return this.mosaics.find(({ mosaicIdHex }) => mosaicIdHex === this.formItems.mosaicHexId);\n    }\n\n    /**\n     * Current mosaic relative supply\n     * @readonly\n     * @protected\n     * @type {number}\n     */\n    protected get currentMosaicRelativeSupply(): string | null {\n        const currentMosaicInfo = this.currentMosaicInfo;\n        if (!currentMosaicInfo) {\n            return null;\n        }\n        const relative = currentMosaicInfo.supply / Math.pow(10, currentMosaicInfo.divisibility);\n        return isNaN(relative) ? null : relative.toLocaleString();\n    }\n\n    /**\n     * New absolute supply\n     * @readonly\n     * @protected\n     * @type {(number | null)}\n     */\n    protected get newMosaicAbsoluteSupply(): number | null {\n        const currentMosaicInfo = this.currentMosaicInfo;\n        if (currentMosaicInfo === undefined) {\n            return null;\n        }\n        const newSupply =\n            this.formItems.action === MosaicSupplyChangeAction.Increase\n                ? currentMosaicInfo.supply + Number(this.formItems.delta)\n                : currentMosaicInfo.supply - Number(this.formItems.delta);\n\n        return isNaN(newSupply) ? null : newSupply;\n    }\n\n    /**\n     * New relative supply\n     * @readonly\n     * @protected\n     * @type {(number | null)}\n     */\n    protected get newMosaicRelativeSupply(): string | null {\n        if (!this.newMosaicAbsoluteSupply) {\n            return null;\n        }\n        const relative = this.newMosaicAbsoluteSupply / Math.pow(10, this.currentMosaicInfo.divisibility);\n        return isNaN(relative) ? null : relative.toLocaleString();\n    }\n\n    /**\n     * Reset the form with properties\n     * @return {void}\n     */\n    protected resetForm() {\n        // - re-populate form if transaction staged\n        // if (this.stagedTransactions.length) {\n        //   // @TODO: initialization from staged transactions\n        //   this.isAwaitingSignature = true\n        //   return\n        // }\n\n        // - set default form values\n        this.formItems.mosaicHexId = this.mosaicHexId;\n        this.formItems.action = MosaicSupplyChangeAction.Increase;\n        this.formItems.delta = 1;\n\n        // - maxFee must be absolute\n        this.formItems.maxFee = this.defaultFee;\n    }\n\n    /**\n     * Getter for SUPPLY CHANGE transactions that will be staged\n     * @see {FormTransactionBase}\n     * @return {Transaction[]}\n     */\n    protected getTransactions(): Transaction[] {\n        return [\n            MosaicSupplyChangeTransaction.create(\n                this.createDeadline(),\n                new MosaicId(this.formItems.mosaicHexId),\n                this.formItems.action,\n                UInt64.fromUint(this.formItems.delta),\n                this.networkType,\n                UInt64.fromUint(this.formItems.maxFee),\n            ),\n        ];\n    }\n\n    /**\n     * Setter for TRANSFER transactions that will be staged\n     * @see {FormTransactionBase}\n     * @param {TransferTransaction[]} transactions\n     * @throws {Error} If not overloaded in derivate component\n     */\n    protected setTransactions(transactions: Transaction[]) {\n        // - this form creates 1 transaction\n        const supplyChange = transactions.shift() as MosaicSupplyChangeTransaction;\n\n        // - populate from definition\n        this.formItems.mosaicHexId = supplyChange.mosaicId.toHex();\n        this.formItems.action = supplyChange.action;\n        this.formItems.delta = supplyChange.delta.compact();\n\n        // - populate maxFee\n        this.formItems.maxFee = supplyChange.maxFee.compact();\n    }\n}\n"],"sourceRoot":""}]}