{"remainingRequest":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js!/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js!/home/hero/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/home/hero/lared-wallet/src/components/ButtonCopyToClipboard/ButtonCopyToClipboardTs.ts","dependencies":[{"path":"/home/hero/lared-wallet/src/components/ButtonCopyToClipboard/ButtonCopyToClipboardTs.ts","mtime":1606213958953},{"path":"/home/hero/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hero/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/ICJzeW1ib2wiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9CgpmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvbiIpOyB9IH0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKCJ2YWx1ZSIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9CgpmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfQoKZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gImZ1bmN0aW9uIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfQoKZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH0KCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7CiAgZnVuY3Rpb24gaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgewogICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsKICAgIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7CiAgICBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsKCiAgICB0cnkgewogICAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOwogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwKICAgICAgICByZXN1bHQ7CgogICAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7CiAgICAgIHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7CgogICAgICByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOwogICAgfSBlbHNlIHsKICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsKICB9Owp9CgpmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSAib2JqZWN0IiB8fCB0eXBlb2YgY2FsbCA9PT0gImZ1bmN0aW9uIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH0KCmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7IH0gcmV0dXJuIHNlbGY7IH0KCmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH0KCmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlLCBQcm9wIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IFVJSGVscGVycyB9IGZyb20gJ0AvY29yZS91dGlscy9VSUhlbHBlcnMnOwppbXBvcnQgeyBOb3RpZmljYXRpb25UeXBlIH0gZnJvbSAnQC9jb3JlL3V0aWxzL05vdGlmaWNhdGlvblR5cGUnOwoKdmFyIEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCdXR0b25Db3B5VG9DbGlwYm9hcmRUcyk7CgogIGZ1bmN0aW9uIEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQnV0dG9uQ29weVRvQ2xpcGJvYXJkVHMsIFt7CiAgICBrZXk6ICJjb3B5VG9DbGlwYm9hcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvcHlUb0NsaXBib2FyZCgpIHsKICAgICAgdmFyIHZhbHVlID0gdGhpcy52YWx1ZTsKCiAgICAgIGlmICh2YWx1ZSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBVSUhlbHBlcnMuY29weVRvQ2xpcGJvYXJkKHZhbHVlKTsKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdub3RpZmljYXRpb24vQUREX1NVQ0NFU1MnLCBOb3RpZmljYXRpb25UeXBlLkNPUFlfU1VDQ0VTUyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ25vdGlmaWNhdGlvbi9BRERfRVJST1InLCBOb3RpZmljYXRpb25UeXBlLkNPUFlfRkFJTEVEKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBCdXR0b25Db3B5VG9DbGlwYm9hcmRUczsKfShWdWUpOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiBudWxsCn0pXSwgQnV0dG9uQ29weVRvQ2xpcGJvYXJkVHMucHJvdG90eXBlLCAidmFsdWUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAnYnV0dG9uJwp9KV0sIEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzLnByb3RvdHlwZSwgInR5cGUiLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbUHJvcCh7CiAgImRlZmF1bHQiOiAnbW5lbW9uaWNfY29weScKfSldLCBCdXR0b25Db3B5VG9DbGlwYm9hcmRUcy5wcm90b3R5cGUsICJ0b29sdGlwVGV4dCIsIHZvaWQgMCk7CgpCdXR0b25Db3B5VG9DbGlwYm9hcmRUcyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIEJ1dHRvbkNvcHlUb0NsaXBib2FyZFRzKTsKZXhwb3J0IHsgQnV0dG9uQ29weVRvQ2xpcGJvYXJkVHMgfTs="},{"version":3,"sources":["/home/hero/lared-wallet/src/components/ButtonCopyToClipboard/ButtonCopyToClipboardTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,GAApB,EAAyB,IAAzB,QAAqC,wBAArC;AACA,SAAS,SAAT,QAA0B,wBAA1B;AACA,SAAS,gBAAT,QAAiC,+BAAjC;;AAGA,IAAa,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,sCAOmB;AACX,UAAM,KAAK,GAAQ,KAAK,KAAxB;;AACA,UAAI,KAAJ,EAAW;AACP,YAAI;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,KAA1B;AACA,eAAK,MAAL,CAAY,QAAZ,CAAqB,0BAArB,EAAiD,gBAAgB,CAAC,YAAlE;AACH,SAHD,CAGE,OAAO,CAAP,EAAU;AACR,eAAK,MAAL,CAAY,QAAZ,CAAqB,wBAArB,EAA+C,gBAAgB,CAAC,WAAhE;AACH;AACJ;AACJ;AAjBL;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAC6B,UAAA,CAAA,CAAxB,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAoB,CAAA,E,iCAAA,E,OAAA,E,KAAc,CAAd,CAAA;;AAEI,UAAA,CAAA,CAA5B,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAAwB,CAAA,E,iCAAA,E,MAAA,E,KAAkC,CAAlC,CAAA;;AAEO,UAAA,CAAA,CAAnC,IAAI,CAAC;AAAE,aAAS;AAAX,CAAD,CAA+B,CAAA,E,iCAAA,E,aAAA,E,KAA8B,CAA9B,CAAA;;AAL3B,uBAAuB,GAAA,UAAA,CAAA,CADnC,SACmC,CAAA,EAAvB,uBAAuB,CAAvB;SAAA,uB","sourcesContent":["import { Component, Vue, Prop } from 'vue-property-decorator';\nimport { UIHelpers } from '@/core/utils/UIHelpers';\nimport { NotificationType } from '@/core/utils/NotificationType';\n\n@Component\nexport class ButtonCopyToClipboardTs extends Vue {\n    @Prop({ default: null }) value: string;\n\n    @Prop({ default: 'button' }) type: 'button' | 'image' | 'icon';\n\n    @Prop({ default: 'mnemonic_copy' }) readonly tooltipText!: string;\n\n    copyToClipboard() {\n        const value: any = this.value;\n        if (value) {\n            try {\n                UIHelpers.copyToClipboard(value);\n                this.$store.dispatch('notification/ADD_SUCCESS', NotificationType.COPY_SUCCESS);\n            } catch (e) {\n                this.$store.dispatch('notification/ADD_ERROR', NotificationType.COPY_FAILED);\n            }\n        }\n    }\n}\n"],"sourceRoot":""}]}