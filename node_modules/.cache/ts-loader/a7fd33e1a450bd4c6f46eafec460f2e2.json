{"remainingRequest":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js??ref--13-3!/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/pages/profiles/create-profile/generate-mnemonic/GenerateMnemonicTs.ts","dependencies":[{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/pages/profiles/create-profile/generate-mnemonic/GenerateMnemonicTs.ts","mtime":1611927206198},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/.babelrc","mtime":1611927226200},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/c/Users/justi/Desktop/SUPERHOW/SymbolWallet/lared-wallet/src/views/pages/profiles/create-profile/generate-mnemonic/GenerateMnemonicTs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAcG;;AACH,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,SAAmB,MAAnB,QAAiC,YAAjC;AACA,SAAS,kBAAT,QAAmC,mBAAnC;AACA,OAAO,QAAP,MAAqB,WAArB;AAGA,SAAS,gBAAT,QAAiC,+BAAjC;AACA,SAAS,cAAT,QAA+B,2BAA/B;;AAUA,IAAqB,kBAArB;AAAA;;AAAA;;AAAA,gCAAA;AAAA;;AAAA;;;AAeI;;;AAGG;;AACI,UAAA,cAAA,GAAiC,IAAI,cAAJ,EAAjC;AAEP;;;AAGG;;AACI,UAAA,gBAAA,GAA4B,IAA5B;AAEP;;;AAGG;;AACK,UAAA,OAAA,GAAU,EAAV;AAER;;;AAGG;;AACK,UAAA,OAAA,GAAkB,CAAlB;AArCZ;AAgGC;AAzDG;;;;AAIG;;;AA3CP;AAAA;AAAA,sCA4C0B;AAClB,UAAI,KAAK,OAAL,GAAe,GAAnB,EAAwB;AACpB,aAAK,OAAL,IAAgB,MAAM,CAAC,WAAP,CAAmB,CAAnB,CAAhB;AACA,aAAK,OAAL;AACA;AACH,OALiB,CAOlB;;;AACA,WAAK,gBAAL,GAAwB,KAAxB;AACA,aAAO,KAAK,2BAAL,EAAP;AACH;AAED;;;AAGG;;AA3DP;AAAA;AAAA,kDA4D6C;;;;;;;;AAEjC;AACM,gBAAA,I,GAAO,KAAK,mBAAL,E,EAEb;;AACM,gBAAA,O,GAAU,MAAM,CAAC,OAAP,CAAe,IAAI,CAAC,KAApB,EAA2B,KAAK,eAAL,CAAqB,KAAhD,C,EAEhB;;AACA,qBAAK,cAAL,CAAoB,UAApB,CAA+B,KAAK,cAApC,EAAoD,OAApD,E,CAEA;;;AACA,uBAAM,KAAK,MAAL,CAAY,QAAZ,CAAqB,6BAArB,EAAoD,KAAK,cAAzD,CAAN;;;AACA,qBAAK,MAAL,CAAY,QAAZ,CAAqB,wBAArB,EAA+C,IAA/C;AACA,qBAAK,MAAL,CAAY,QAAZ,CAAqB,0BAArB,EAAiD,KAAK,EAAL,CAAQ,mCAAR,CAAjD,E,CAEA;;iDACO,KAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,kBAAA,IAAI,EAAE;AAAR,iBAAlB,C;;;;;AAEP,gBAAA,OAAO,CAAC,GAAR,CAAY,8CAAZ;AACA,qBAAK,MAAL,CAAY,QAAZ,CAAqB,wBAArB,EAA+C,gBAAgB,CAAC,yBAAhE;;;;;;;;;AAEP;AAED;;;AAGG;;AAvFP;AAAA;AAAA,0CAwF+B;AACvB,UAAM,OAAO,GAAG,QAAQ,CAAC,MAAT,CAAgB,KAAK,OAAL,GAAe,MAAM,CAAC,WAAP,CAAmB,CAAnB,CAA/B,EAAsD,QAAtD,EAAhB;AACA,UAAM,IAAI,GAAG,kBAAkB,CAAC,iBAAnB,CAAqC,OAArC,CAAb;;AACA,UAAI,IAAI,GAAJ,CAAQ,IAAI,CAAC,OAAL,EAAR,EAAwB,IAAxB,IAAgC,IAAI,CAAC,OAAL,GAAe,MAAnD,EAA2D;AACvD,eAAO,KAAK,mBAAL,EAAP;AACH;;AACD,aAAO,IAAP;AACH;AA/FL;;AAAA;AAAA,EAAgD,GAAhD,CAAA;;AAAqB,kBAAkB,GAAA,UAAA,CAAA,CARtC,SAAS,CAAC;AACP,EAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,UAAU,CAAC;AACV,IAAA,cAAc,EAAE,wBADN;AAEV,IAAA,eAAe,EAAE;AAFP,GAAD,CADT;AADD,CAAD,CAQ6B,CAAA,EAAlB,kBAAkB,CAAlB;eAAA,kB","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Component, Vue } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport { Password, Crypto } from 'symbol-sdk';\nimport { MnemonicPassPhrase } from 'symbol-hd-wallets';\nimport CryptoJS from 'crypto-js';\n// internal dependencies\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\nimport { NotificationType } from '@/core/utils/NotificationType';\nimport { ProfileService } from '@/services/ProfileService';\n\n@Component({\n    computed: {\n        ...mapGetters({\n            currentProfile: 'profile/currentProfile',\n            currentPassword: 'temporary/password',\n        }),\n    },\n})\nexport default class GenerateMnemonicTs extends Vue {\n    /**\n     * Currently active profile\n     * @see {Store.Profile}\n     * @var {string}\n     */\n    public currentProfile: ProfileModel;\n\n    /**\n     * Previous step's password\n     * @see {Store.Temporary}\n     * @var {Password}\n     */\n    public currentPassword: Password;\n\n    /**\n     * Profile repository\n     * @var {ProfileService}\n     */\n    public profileService: ProfileService = new ProfileService();\n\n    /**\n     * Whether component should track mouse move\n     * @var {boolean}\n     */\n    public shouldTrackMouse: boolean = true;\n\n    /**\n     * Entropy storage\n     * @var {string}\n     */\n    private entropy = '';\n\n    /**\n     * Percentage of entropy generation process\n     * @var {number}\n     */\n    private percent: number = 0;\n\n    /**\n     * Track and handle mouse move event\n     * @param {Vue.Event} event\n     * @return {void}\n     */\n    public handleMousemove() {\n        if (this.percent < 100) {\n            this.entropy += Crypto.randomBytes(8);\n            this.percent++;\n            return;\n        }\n\n        // stop tracking\n        this.shouldTrackMouse = false;\n        return this.saveMnemonicAndGoToNextPage();\n    }\n\n    /**\n     * Save mnemonic and redirect to next page\n     * return {void}\n     */\n    private async saveMnemonicAndGoToNextPage() {\n        try {\n            // act\n            const seed = this.filterRepeatedWords();\n\n            // encrypt seed for storage\n            const encSeed = Crypto.encrypt(seed.plain, this.currentPassword.value);\n\n            // update currentProfile instance and storage\n            this.profileService.updateSeed(this.currentProfile, encSeed);\n\n            // update state\n            await this.$store.dispatch('profile/SET_CURRENT_PROFILE', this.currentProfile);\n            this.$store.dispatch('temporary/SET_MNEMONIC', seed);\n            this.$store.dispatch('notification/ADD_SUCCESS', this.$t('generate_entropy_increase_success'));\n\n            // redirect\n            return this.$router.push({ name: 'profiles.createProfile.showMnemonic' });\n        } catch (error) {\n            console.log('An error happened while generating Mnenomic:', error);\n            this.$store.dispatch('notification/ADD_ERROR', NotificationType.MNEMONIC_GENERATION_ERROR);\n        }\n    }\n\n    /**\n     * Filter repeating words in Mnemonic phrase\n     * retrun seed\n     */\n    private filterRepeatedWords() {\n        const entropy = CryptoJS.SHA256(this.entropy + Crypto.randomBytes(8)).toString();\n        const seed = MnemonicPassPhrase.createFromEntropy(entropy);\n        if (new Set(seed.toArray()).size != seed.toArray().length) {\n            return this.filterRepeatedWords();\n        }\n        return seed;\n    }\n}\n"],"sourceRoot":""}]}